<?xml version="1.0" encoding="ASCII"?>
<ResourceModel:App xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ResourceModel="http://www.infineon.com/Davex/Resource.ecore" name="PWMSP002" description="This app generates single phase PWM &#xA; waveform with dead time. &#xA;This generates two complementary outputs. &#xA; This app supports external start, &#xA; external stop, trap features &#xA; along with dither and dead time." descriptionURL="/doc/html/group___p_w_m_s_p002_app.html" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5" userLabel="PWM11_12">
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../IO002/1.0.30/io002_5.app#//@consumed.10"/>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Direct Output Pin" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_directoutput_vs" requiredSignalResource="pin_directoutput/pad" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Inverted Output Pin" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_invertedoutput_vs" requiredSignalResource="pin_invertedoutput/pad" canExpose="false">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Global" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_globalsignal_vs" requiredSignalResource="slice/global_signal">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Timer Concatenation Input Of First Slice" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_input_concat_vs" requiredSignalResource="slice1/concat_bus_in" canExpose="false">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Timer Concatenation Input Of Second Slice" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_input1_concat_vs" requiredSignalResource="slice/concat_bus_in" canExpose="false">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Timer Conctenation Output" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_output_concat_vs" requiredSignalResource="slice1/concat_bus_out" canExpose="false">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Compare Match Interrupt" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_comparematch1_vs" requiredSignalResource="slice/cmd1s_cmu1s">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="PWM Direct Output" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_out0_vs" requiredSignalResource="slice/out0">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="PWM Inverted Output" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_out1_vs" requiredSignalResource="slice/out1">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="PWM Status" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_st_vs" requiredSignalResource="slice/st">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="PWM Status A" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_sta_vs" requiredSignalResource="slice/sta">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="PWM Status B" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_stb_vs" requiredSignalResource="slice/stb">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Period Match Interrupt" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_periodmatch_vs" requiredSignalResource="slice/pmus_omds">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="External Start Interrupt" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_extstartevent_vs" requiredSignalResource="slice/e0as">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="External Stop Interrupt" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_extstopevent_vs" requiredSignalResource="slice/e1as">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Trap Interrupt" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_trapevent_vs" requiredSignalResource="slice/e2as">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Input External Start" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_extstartinput_vs" requiredSignalResource="slice/gp0_unsync">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Input External Stop" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_extstopinput_vs" requiredSignalResource="slice/gp1_unsync">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Input Trap" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_trapinput_vs" requiredSignalResource="slice/gp2_unsync">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Timer Concatenation Input External Start" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tcextstartinput_vs" requiredSignalResource="slice1/gp0_unsync">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Timer Concatenation Input External Stop" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tcextstopinput_vs" requiredSignalResource="slice1/gp1_unsync">
    <defaultValue xsi:type="ResourceModel:Blocked" value="Blocked"/>
    <localValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="Blocked"/>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Timer Mode" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/tssm&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/tssm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtimermode" downWardmappedList="//@consumed.57" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to select Single shot or Periodic mode</toolTipHelpDescription>
    <item name="Enable Single Shot Mode" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;                var Res = SCM.getResource(&quot;slice/tc/tssm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              if(value == 1){&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }else if(value === 0){&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }  &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;                var Res = SCM.getResource(&quot;slice/tc/tssm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(currentResource,0);                &#xD;&#xA;              }else if(value ==1){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }    &#xD;&#xA;            }" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtimermode/0" downWardmappedList="//@consumed.57" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Enable Single Shot mode. Timer runs only once and stops. </toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Compare mode" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ase&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwcomparemode" downWardmappedList="//@consumed.85">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to select symmetric or asymmetric mode of PWM generation</toolTipHelpDescription>
    <item name="Symmetric" evalFunction="      &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ase&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;              " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwcomparemode/0" downWardmappedList="//@consumed.85" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Symmetric mode. Only Compare Register 1 value is used for comparison.&#xD;
In edge-aligned mode, output is set after compare register 1 match and reset after period match.&#xD;
In center-aligned mode, output is set after compare register1 match in UP direction and reset after compare register1 match in DOWN direction.</toolTipHelpDescription>
    </item>
    <item name="Asymmetric" evalFunction="      &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ase&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }else{&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;              " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwcomparemode/1" downWardmappedList="//@consumed.85" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Asymmetric mode. Compare register1 and compare register2 values are used for comparison.&#xD;
In edge-aligned mode, output is set after compare register 1 match and reset after compare register2 match.&#xD;
In center-aligned mode, output is set after compare register1 match in UP direction and reset after compare register2 match in DOWN direction.&#xD;
Timer Concatenation is not supported in Asymmetric mode.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Counting Mode" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/tcm&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwcountingmode" downWardmappedList="//@consumed.58">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to select edge-aligned or center-aligned PWM generation</toolTipHelpDescription>
    <item name="Edge-Aligned" evalFunction="      &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/tcm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;              " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwcountingmode/0" downWardmappedList="//@consumed.58" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Edge-Aligned Mode.&#xD;
Timer increments till the period match (UP),restes to 0 and repeats the same cycle</toolTipHelpDescription>
    </item>
    <item name="Center-Aligned" evalFunction="      &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/tcm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }else{&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;              " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwcountingmode/1" downWardmappedList="//@consumed.58" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Center-Aligned Mode&#xD;
Timer increments till period match (UP), then decrements till one match(DOWN) and then repeats the same cycle.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Passive Level for direct output" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl11&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl11&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout0passivelevel" downWardmappedList="//@consumed.65">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Selection of the logic low or high passive level for direct output</toolTipHelpDescription>
    <item name="Low" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl11&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl11&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }          &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout0passivelevel/0" downWardmappedList="//@consumed.65" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Selects logic low passive level for direct output</toolTipHelpDescription>
    </item>
    <item name="High" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl11&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl11&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout0passivelevel/1" downWardmappedList="//@consumed.65" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Selects logic high passive level for direct output</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Passive Level for inverted output" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl12&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl12&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout1passivelevel" downWardmappedList="//@consumed.66">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Selection of the logic low or high passive level for inverted output</toolTipHelpDescription>
    <item name="Low" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl12&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl12&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout1passivelevel/0" downWardmappedList="//@consumed.66" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Selects logic low passive level for inverted output</toolTipHelpDescription>
    </item>
    <item name="High" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl12&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/psl/psl12&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }        &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout1passivelevel/1" downWardmappedList="//@consumed.66" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Selects logic high passive level for inverted output</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Passive State for direct output" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs1&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs1&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout0state" downWardmappedList="//@consumed.86">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Selects Passive State before and after compare match for Direct Output</toolTipHelpDescription>
    <item name="Before compare match" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs1&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs1&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;              " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout0state/0" downWardmappedList="//@consumed.86" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Selects Passive State before compare match for Direct Output</toolTipHelpDescription>
    </item>
    <item name="After compare match" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs1&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs1&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;              " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout0state/1" downWardmappedList="//@consumed.86" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Selects Passive State after compare match for Direct Output</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Passive State for inverted output" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs2&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs2&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout1state" downWardmappedList="//@consumed.87">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>Selects Passive State before and after compare match for indirect Output</toolTipHelpDescription>
    <item name="Before compare match" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs2&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs2&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }          &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout1state/0" downWardmappedList="//@consumed.87" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Selects Passive State before compare match for Inverted Output</toolTipHelpDescription>
    </item>
    <item name="After compare match" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs2&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/chc/ocs2&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;              " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwout1state/1" downWardmappedList="//@consumed.87" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Selects Passive State after compare match for Inverted Output</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="External Start Trigger Edge" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev0em&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev0em&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstartedge" downWardmappedList="//@consumed.46">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to select the start trigger edge - Rising, Falling or both edges</toolTipHelpDescription>
    <item name="No Trigger" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev0em&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev0em&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }        &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstartedge/0" downWardmappedList="//@consumed.46" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Trigger is not required.External start is not configured</toolTipHelpDescription>
    </item>
    <item name="Rising Edge" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev0em&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev0em&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }  &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstartedge/1" downWardmappedList="//@consumed.46" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Trigger on rising edge.</toolTipHelpDescription>
    </item>
    <item name="Falling Edge" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev0em&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,2);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev0em&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 2 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }  &#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstartedge/2" downWardmappedList="//@consumed.46" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Trigger on falling edge.</toolTipHelpDescription>
    </item>
    <item name="Both Edges" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev0em&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,3);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev0em&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 3 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }  &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstartedge/3" downWardmappedList="//@consumed.46" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Trigger on rising and falling edge.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="External Stop Trigger Edge" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev1em&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev1em&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstopedge" downWardmappedList="//@consumed.47">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to select the stop trigger edge - Rising, Falling or both edges</toolTipHelpDescription>
    <item name="No Trigger" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev1em&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev1em&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }  &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstopedge/0" downWardmappedList="//@consumed.47" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Trigger is not required. External stop is not configured</toolTipHelpDescription>
    </item>
    <item name="Rising Edge" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev1em&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev1em&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstopedge/1" downWardmappedList="//@consumed.47" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Trigger on rising edge.</toolTipHelpDescription>
    </item>
    <item name="Falling Edge" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev1em&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,2);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev1em&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 2 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstopedge/2" downWardmappedList="//@consumed.47" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Trigger on falling edge.</toolTipHelpDescription>
    </item>
    <item name="Both Edges" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev1em&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,3);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev1em&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 3 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstopedge/3" downWardmappedList="//@consumed.47" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Trigger on rising and falling edge.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="External Start Active Edge Configuration" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/strm&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/strm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstartconf" downWardmappedList="//@consumed.55">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to configure external start functionality</toolTipHelpDescription>
    <item name="Start Timer" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/strm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/strm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }  &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstartconf/0" downWardmappedList="//@consumed.55" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>This will set only the run bit of the timer.</toolTipHelpDescription>
    </item>
    <item name="Clear and Start timer" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/strm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/strm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }  &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstartconf/1" downWardmappedList="//@consumed.55" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This will first clear the timer and then set the run bit of the timer.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="External Stop Active Edge Configurations" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/endm&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/endm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstopconf" downWardmappedList="//@consumed.56">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to configure external stop functionality</toolTipHelpDescription>
    <item name="Stop Timer" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/endm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/endm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstopconf/0" downWardmappedList="//@consumed.56" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>This will reset the run bit of the timer.</toolTipHelpDescription>
    </item>
    <item name="Clear timer" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/endm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/endm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstopconf/1" downWardmappedList="//@consumed.56" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This will clear the timer register value but keeps the timer running.</toolTipHelpDescription>
    </item>
    <item name="Clear and stop timer" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/endm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,2);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/endm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 2 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstopconf/2" downWardmappedList="//@consumed.56" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This will clear the timer register value and also clears the RUN bit of the timer.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Trap Enable" evalFunction="&#xD;&#xA;             function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_temptrapconf&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_temptrapconf&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwenabletrap" downWardmappedList="//@consumed.6" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Selection of logic low or high level for TRAP. The traplevel is the level of the pin at CCUx input function CCytrap</toolTipHelpDescription>
    <item name="Enable Trap" evalFunction="&#xD;&#xA;            var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmsp002_temptrapconf&quot;);  &#xD;&#xA;              if (value == 1 )&#xD;&#xA;              {&#xD;&#xA;                SCM.setIntValue(Res3, 1);&#xD;&#xA;              }&#xD;&#xA;              else if (value === 0)&#xD;&#xA;              {&#xD;&#xA;                SCM.setIntValue(Res3,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmsp002_temptrapconf&quot;);&#xD;&#xA;              var value3 = SCM.getIntValue(Res3);&#xD;&#xA;              if(value3 == 1)&#xD;&#xA;              { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else&#xD;&#xA;              {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwenabletrap/0" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:StringValue" value="1"/>
      <toolTipHelpDescription>Enable the trap</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Trap Exit Time" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_temptrapexittime&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              SCM.setIntValue(Res,value);&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_temptrapexittime&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtrapexittime" downWardmappedList="//@consumed.7">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to control trap exit</toolTipHelpDescription>
    <item name="Exit Trap with Synchronisation" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmsp002_temptrapexittime&quot;);  &#xD;&#xA;              if (value == 1 )&#xD;&#xA;              {&#xD;&#xA;                SCM.setIntValue(Res3, 0);&#xD;&#xA;              }&#xD;&#xA;              else if (value === 0)&#xD;&#xA;              {&#xD;&#xA;                SCM.setIntValue(Res3,1);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmsp002_temptrapexittime&quot;);              &#xD;&#xA;              var value3 = SCM.getIntValue(Res3);&#xD;&#xA;              if (value3 == 0) { &#xD;&#xA;              SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtrapexittime/0" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:StringValue" value="1"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="Exit Trap without Synchronisation" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmsp002_temptrapexittime&quot;);  &#xD;&#xA;              if (value == 1 )&#xD;&#xA;              {&#xD;&#xA;                SCM.setIntValue(Res3, 1);&#xD;&#xA;              }&#xD;&#xA;              else if (value === 0)&#xD;&#xA;              {&#xD;&#xA;                SCM.setIntValue(Res3,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmsp002_temptrapexittime&quot;);&#xD;&#xA;              var value3 = SCM.getIntValue(Res3);&#xD;&#xA;              if(value3 == 1)&#xD;&#xA;              {&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else&#xD;&#xA;              {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtrapexittime/1" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Trap Exit Control" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/trpsw&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/trpsw&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtrapexit" downWardmappedList="//@consumed.63">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>This allows a user to control trap exit</toolTipHelpDescription>
    <item name="Auto Exit" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/trpsw&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/trpsw&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtrapexit/0" downWardmappedList="//@consumed.63" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Slice exits the trap state automatically when trap signal is not present</toolTipHelpDescription>
    </item>
    <item name="SW Exit" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/trpsw&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/trpsw&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtrapexit/1" downWardmappedList="//@consumed.63" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Trap state can only be exited by SW request</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Trap level" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev2lm&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev2lm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtraplevel" downWardmappedList="//@consumed.48">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to set trap level</toolTipHelpDescription>
    <item name="Low" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev2lm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev2lm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }      &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtraplevel/0" downWardmappedList="//@consumed.48" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Low</toolTipHelpDescription>
    </item>
    <item name="High" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev2lm&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/ins/ev2lm&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1 ){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }      &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtraplevel/1" downWardmappedList="//@consumed.48" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>High</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="CCU8 clock resolution" evalFunction="&#xD;&#xA;        function ForwardMapping(){&#xD;&#xA;              var Res2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);          &#xD;&#xA;              var Clock = SCM.getDoubleValue(Res2);&#xD;&#xA;               var XMC13xx=SCM.getSoftwareId().substring(0,2).compareTo(&quot;13&quot;);&#xD;&#xA;             if (Clock == -1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(XMC13xx==0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Clock = 32;&#xD;&#xA;&#x9;&#x9;&#x9; &#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Clock = 120;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;              var clkDiv = (1000 /Clock);      &#xD;&#xA;&#xD;&#xA;              var value2 = SCM.getDoubleValue(currentResource);&#xD;&#xA;              var tempRes = SCM.getResource(&quot;pwmsp002_tempresolution&quot;);&#xD;&#xA;&#x9;      &#x9;if(value2==0){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if(XMC13xx==0){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;value2 =32;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;value2 =20;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;} &#xD;&#xA;&#x9;      &#xD;&#xA;              SCM.setDoubleValue(tempRes,value2);&#xD;&#xA;&#xD;&#xA;              var Res3 = SCM.getResource(&quot;slice/psc/psiv&quot;);  &#xD;&#xA;              var Divider = (value2) / clkDiv;&#xD;&#xA;              var Prescalar = Math.floor( Math.log(Divider) / Math.log( 2 ) );          &#xD;&#xA;              SCM.setIntValue(Res3, Prescalar);    &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        function BackwardMapping(){&#xD;&#xA;            var tempRes = SCM.getResource(&quot;pwmsp002_tempresolution&quot;);&#xD;&#xA;            var value = SCM.getIntValue(tempRes);&#xD;&#xA;            SCM.setDoubleValue(currentResource,value);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);&#xD;&#xA;            var Clock = SCM.getDoubleValue(Res2);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;var clkDiv = (1000 /Clock);&#xD;&#xA;&#xD;&#xA; &#x9;&#x9;&#x9; var res_max=Math.ceil(clkDiv*32768);&#xD;&#xA;&#x9;&#x9;&#x9; var res_min=Math.ceil(clkDiv);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9; SCM.setMinMaxValue(currentResource,res_min,res_max,1);   &#xD;&#xA;        }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwresolution" downWardmappedList="//@consumed.17 //@consumed.71" maxValue="42aab" minValue="9">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="14"/>
    <toolTipHelpDescription>This allows a user to input required resolution for CCU8. This decides the clock divider factor for the CCU8 slice.&#xD;
MinValue = 1/Clock&#xD;
MaxValue = 32768 * MinValue</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Selected Resolution" evalFunction="&#xD;&#xA;        function ForwardMapping(){&#xD;&#xA;           var Res2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);          &#xD;&#xA;           var clock = SCM.getDoubleValue(Res2);&#xD;&#xA;           var Res3 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;           var value3 = SCM.getIntValue(Res3);          &#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping(){&#xD;&#xA;              var Res2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);          &#xD;&#xA;              var Clock = SCM.getDoubleValue(Res2);&#xD;&#xA;              &#xD;&#xA;&#x9;&#x9;&#x9;  var XMC13xx=SCM.getSoftwareId().substring(0,2).compareTo(&quot;13&quot;);&#xD;&#xA;&#xD;&#xA;              if (Clock == -1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(XMC13xx==0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Clock = 32;&#xD;&#xA;&#x9;&#x9;&#x9; &#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Clock = 120;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;              var clkDiv = (1000 /Clock); &#xD;&#xA;     &#xD;&#xA;              var Res_2 = SCM.getResource(&quot;pwmsp002_tempresolution&quot;);&#xD;&#xA;              var value2 = SCM.getDoubleValue(Res_2);&#xD;&#xA;&#xD;&#xA;              var Divider = (value2) / clkDiv;&#xD;&#xA;&#xD;&#xA;              var Prescalar = Math.floor( Math.log(Divider) / Math.log( 2 ) );          &#xD;&#xA;              var temp = 0;   &#xD;&#xA;              if(Prescalar > 15) {&#xD;&#xA;                temp = 0;&#xD;&#xA;              }&#xD;&#xA;              else{           &#xD;&#xA;                temp = clkDiv * (1 &lt;&lt; Prescalar);&#xD;&#xA;              }&#xD;&#xA;              SCM.setDoubleValue(currentResource, temp);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9; var res_max=Math.ceil(clkDiv*32768);&#xD;&#xA;&#x9;&#x9;&#x9; var res_min=Math.floor(clkDiv);&#xD;&#xA;&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;&#x9; SCM.setMinMaxValue(currentResource,res_min,res_max,1);&#xD;&#xA;        }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irselresolution" maxValue="42aab" minValue="8">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4030aaaaaaaaaaab"/>
    <toolTipHelpDescription>This is the closest possible resolution that can be achieved. non-editable field</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Selected Prescalar" evalFunction="&#xD;&#xA;        function ForwardMapping(){&#xD;&#xA;           var Res2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);          &#xD;&#xA;           var clock = SCM.getDoubleValue(Res2);&#xD;&#xA;           var Res3 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;           var value3 = SCM.getIntValue(Res3);          &#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping(){&#xD;&#xA;              var Res2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);          &#xD;&#xA;              var Clock = SCM.getDoubleValue(Res2);&#xD;&#xA;&#xD;&#xA;              var XMC13xx=SCM.getSoftwareId().substring(0,2).compareTo(&quot;13&quot;);&#xD;&#xA;&#xD;&#xA;              if (Clock == -1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(XMC13xx==0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Clock = 32;&#xD;&#xA;&#x9;&#x9;&#x9; &#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Clock = 120;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;              var clkDiv = (1000 /Clock);      &#xD;&#xA;&#xD;&#xA;              var Res_2 = SCM.getResource(&quot;pwmsp002_tempresolution&quot;);&#xD;&#xA;              var value2 = SCM.getDoubleValue(Res_2);&#xD;&#xA;&#xD;&#xA;              var Divider = (value2) / clkDiv;&#xD;&#xA;&#xD;&#xA;              var Prescalar = Math.floor( Math.log(Divider) / Math.log( 2 ) );          &#xD;&#xA;              var temp = 0;   &#xD;&#xA;              if(Prescalar > 15) {&#xD;&#xA;                temp = 0;&#xD;&#xA;              }&#xD;&#xA;              else{           &#xD;&#xA;                temp = clkDiv * (1 &lt;&lt; Prescalar);&#xD;&#xA;              }&#xD;&#xA;              SCM.setIntValue(currentResource, Prescalar);&#xD;&#xA;        }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irselprescalar" maxValue="F" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>This is the closest possible resolution that can be achieved. non-editable field</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="PWM frequency" evalFunction="&#xD;&#xA;        function ForwardMapping(){&#xD;&#xA;          var Scalefactor = 1000000000;&#xD;&#xA;          var PwmTime = 0;&#xD;&#xA;          var Count = 0;&#xD;&#xA;          var lsb = 0;&#xD;&#xA;          var mode = 0;&#xD;&#xA;          var comparemode = 0;&#xD;&#xA;&#xD;&#xA;          var freq = SCM.getIntValue(currentResource);&#xD;&#xA;          var tempRes = SCM.getResource(&quot;pwmsp002_tempfreq&quot;);&#xD;&#xA;          SCM.setDoubleValue(tempRes,freq);&#xD;&#xA;&#xD;&#xA;          var Res2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;          var resolution = SCM.getDoubleValue(Res2);    &#xD;&#xA;&#xD;&#xA;          var Res1 = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;          var val1 = SCM.getIntValue(Res1); &#xD;&#xA;          if(val1 == 1){mode = 1;}  &#xD;&#xA;&#xD;&#xA;          var Res0 = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;          var val0 = SCM.getIntValue(Res0); &#xD;&#xA;          if(val0 == 1){comparemode = 1;} &#xD;&#xA;    &#xD;&#xA;          var Res5 = SCM.getResource(&quot;slice/prs/prs&quot;);&#xD;&#xA;          var Res6 = SCM.getResource(&quot;slice1/prs/prs&quot;);&#xD;&#xA;          var Res7 = SCM.getResource(&quot;slice/cmc/tce&quot;);      &#xD;&#xA;          &#xD;&#xA;          PwmTime = (Scalefactor / (freq )) ;&#xD;&#xA;          Count = (PwmTime / resolution);&#xD;&#xA;&#xD;&#xA;//center-aligned mode&#xD;&#xA;          if(mode == 1)&#xD;&#xA;          {&#xD;&#xA;            Count = (Count-1) >> 1;&#xD;&#xA;            if (Count > 65535){&#xD;&#xA;                SCM.setIntValue(Res7, 0);&#xD;&#xA;                SCM.setIntValue(Res5, 0);&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                SCM.setIntValue(Res7, 0);&#xD;&#xA;                SCM.setIntValue(Res5, Count);&#xD;&#xA;            }                     &#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;//edge-aligned mode&#xD;&#xA;          else{         &#xD;&#xA;            if(Count > 65535){&#xD;&#xA;              do{&#xD;&#xA;                  Count = Count >> 1;&#xD;&#xA;                  lsb++;&#xD;&#xA;                }while(Count >= 65535);&#xD;&#xA;              &#xD;&#xA;                lsb = ((1 &lt;&lt; lsb) -1);&#xD;&#xA;                if(comparemode == 1){&#xD;&#xA;                  SCM.setIntValue(Res7, 0);   &#xD;&#xA;                  SCM.setIntValue(Res5, 0);           &#xD;&#xA;                }&#xD;&#xA;                else{&#xD;&#xA;                  SCM.setIntValue(Res6, Count);   &#xD;&#xA;                  SCM.setIntValue(Res7, 1);&#xD;&#xA;                  SCM.setIntValue(Res5, lsb);&#xD;&#xA;                }      &#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {             &#xD;&#xA;              SCM.setIntValue(Res7, 0);&#xD;&#xA;              SCM.setIntValue(Res5, Count-1);&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        function BackwardMapping(){&#xD;&#xA;            var tempRes = SCM.getResource(&quot;pwmsp002_tempfreq&quot;);&#xD;&#xA;            var value = SCM.getIntValue(tempRes);&#xD;&#xA;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);          &#xD;&#xA;            var Clock = SCM.getDoubleValue(Res2);&#xD;&#xA;            SCM.setDoubleValue(currentResource,value);  &#xD;&#xA;&#xD;&#xA; &#x9;&#x9;&#x9; var freq_max=Math.ceil((Clock/2)*1000000);&#xD;&#xA;&#x9;&#x9;&#x9; var freq_min=1;&#xD;&#xA;&#x9;&#x9;&#x9; SCM.setMinMaxValue(currentResource,freq_min,freq_max,1);     &#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwfreq" downWardmappedList="//@consumed.20 //@consumed.77 //@consumed.50 //@consumed.76" maxValue="3938700" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="5DC"/>
    <localValue xsi:type="ResourceModel:StringValue" value="4650"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4650"/>
    <toolTipHelpDescription>This allows a user to input PWM frequency. This corresponds to the maximum value till which timer will count (Period register)</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Period Register" evalFunction="&#xD;&#xA;        function ForwardMapping(){&#xD;&#xA;          var Res0 = SCM.getResource(&quot;slice/prs/prs&quot;);&#xD;&#xA;          var value0 = SCM.getIntValue(Res0);   &#xD;&#xA;          var Res1 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);&#xD;&#xA;          var value1 = SCM.getDoubleValue(Res1);   &#xD;&#xA;          var Res2 = SCM.getResource(&quot;slice/tc/tcm&quot;);&#xD;&#xA;          var value2 = SCM.getIntValue(Res2);   &#xD;&#xA;          var Res3 = SCM.getResource(&quot;slice/chc/ase&quot;);&#xD;&#xA;          var value3 = SCM.getIntValue(Res3);&#xD;&#xA;          var Res4 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;          var value4 = SCM.getIntValue(Res4);       &#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping(){&#xD;&#xA;          var Scalefactor = 1000000000;&#xD;&#xA;          var PwmTime = 0;&#xD;&#xA;          var Count = 0;&#xD;&#xA;          var lsb = 0;&#xD;&#xA;          var mode = 0;&#xD;&#xA;          var comparemode = 0;&#xD;&#xA;          var Res_0 = SCM.getResource(&quot;pwmsp002_tempfreq&quot;);&#xD;&#xA;          var freq = SCM.getIntValue(Res_0);&#xD;&#xA;&#xD;&#xA;          var Res2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;          var resolution = SCM.getDoubleValue(Res2);    &#xD;&#xA;&#xD;&#xA;          var Res1 = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;          var val1 = SCM.getIntValue(Res1); &#xD;&#xA;          if(val1 == 1){mode = 1;}  &#xD;&#xA;&#xD;&#xA;          var Res0 = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;          var val0 = SCM.getIntValue(Res0); &#xD;&#xA;          if(val0 == 1){comparemode = 1;} &#xD;&#xA;    &#xD;&#xA;          var period = 0;    &#xD;&#xA;          &#xD;&#xA;          PwmTime = (Scalefactor / (freq )) ;&#xD;&#xA;          Count = (PwmTime / resolution);&#xD;&#xA;&#xD;&#xA;//center-aligned mode&#xD;&#xA;          if(mode == 1)&#xD;&#xA;          {&#xD;&#xA;            Count = (Count-1) >> 1;&#xD;&#xA;            if (Count > 65535){&#xD;&#xA;                period = 0;&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                period = Count;&#xD;&#xA;            }                     &#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;//edge-aligned mode&#xD;&#xA;          else{         &#xD;&#xA;            if(Count > 65535){&#xD;&#xA;              do{&#xD;&#xA;                  Count = Count >> 1;&#xD;&#xA;                  lsb++;&#xD;&#xA;                }while(Count >= 65535);&#xD;&#xA;              &#xD;&#xA;                lsb = ((1 &lt;&lt; lsb) -1);&#xD;&#xA;                if(comparemode == 1){&#xD;&#xA;                  period = 0;              &#xD;&#xA;                }&#xD;&#xA;                else{&#xD;&#xA;                  period = (lsb &lt;&lt; 16) | Count;&#xD;&#xA;                }      &#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {             &#xD;&#xA;              period = Count -1;&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;          SCM.setIntValue(currentResource, period);&#xD;&#xA;        }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irselperiodreg" maxValue="FFFFFFFF" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="d04"/>
    <toolTipHelpDescription>This is the period register value as per the configured PWM frequency. Use this value&#xD;
        to find the values of the compare registers for asymmetric mode. &#xD;
In case of timer concatenation it represnts &lt;second slice 16-bits>&lt;first slice 16-bits></toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="TimerConcate" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res0 = SCM.getResource(&quot;slice/cmc/tce&quot;);&#xD;&#xA;            var val0 = SCM.getIntValue(Res0);&#xD;&#xA;            var Res0 = SCM.getResource(&quot;slice/prs/prs&quot;);&#xD;&#xA;            var value0 = SCM.getIntValue(Res0);   &#xD;&#xA;            var Res1 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);&#xD;&#xA;            var value1 = SCM.getDoubleValue(Res1);   &#xD;&#xA;            var Res2 = SCM.getResource(&quot;slice/tc/tcm&quot;);&#xD;&#xA;            var value2 = SCM.getIntValue(Res2);   &#xD;&#xA;            var Res3 = SCM.getResource(&quot;slice/chc/ase&quot;);&#xD;&#xA;            var value3 = SCM.getIntValue(Res3); &#xD;&#xA;           var Res4 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;           var value4 = SCM.getIntValue(Res4);  &#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Scalefactor = 1000000000;&#xD;&#xA;            var ClkScalefactor = 1;     &#xD;&#xA;            var PwmTime = 0;&#xD;&#xA;            var Count = 0;&#xD;&#xA;            var lsb = 0;&#xD;&#xA;            var mode = 0;&#xD;&#xA;            var comparemode = 0;&#xD;&#xA;            var Res_0 = SCM.getResource(&quot;pwmsp002_tempfreq&quot;);&#xD;&#xA;            var freq = SCM.getIntValue(Res_0);&#xD;&#xA;  &#xD;&#xA;            var Res2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;            var resolution = SCM.getDoubleValue(Res2);        &#xD;&#xA;  &#xD;&#xA;            var Res1 = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;            var val1 = SCM.getIntValue(Res1); &#xD;&#xA;            if(val1 == 1){mode = 1;}  &#xD;&#xA;  &#xD;&#xA;            var Res0 = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;            var val0 = SCM.getIntValue(Res0); &#xD;&#xA;            if(val0 == 1){comparemode = 1;} &#xD;&#xA;      &#xD;&#xA;            var tc = 0;   &#xD;&#xA;            &#xD;&#xA;            PwmTime = (Scalefactor / (freq )) ;&#xD;&#xA;            Count = (PwmTime / resolution);&#xD;&#xA;            &#xD;&#xA;            if (mode == 1){&#xD;&#xA;                tc = 0;&#xD;&#xA;            }  &#xD;&#xA;            else{&#xD;&#xA;   //edge-aligned mode&#xD;&#xA;              if(Count > 65535 &amp;&amp; comparemode === 0 ){&#xD;&#xA;                  tc = 1;              &#xD;&#xA;               }&#xD;&#xA;              else {&#xD;&#xA;                  tc = 0;&#xD;&#xA;              }&#xD;&#xA;             }&#xD;&#xA;            if(tc === 0){&#xD;&#xA;              SCM.setIntValue(currentResource, 0);&#xD;&#xA;            }&#xD;&#xA;            else if(tc == 1){&#xD;&#xA;              SCM.setIntValue(currentResource, 1);&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irtimerconcat" maxValue="1" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Timer concatenation. Hidden parameter</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:StringParameter" name="Selected Timer concatenation setting" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res0 = SCM.getResource(&quot;slice/cmc/tce&quot;);&#xD;&#xA;            var val0 = SCM.getIntValue(Res0);&#xD;&#xA;            var Res0 = SCM.getResource(&quot;slice/prs/prs&quot;);&#xD;&#xA;            var value0 = SCM.getIntValue(Res0);   &#xD;&#xA;            var Res1 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);&#xD;&#xA;            var value1 = SCM.getDoubleValue(Res1);   &#xD;&#xA;            var Res2 = SCM.getResource(&quot;slice/tc/tcm&quot;);&#xD;&#xA;            var value2 = SCM.getIntValue(Res2);   &#xD;&#xA;            var Res3 = SCM.getResource(&quot;slice/chc/ase&quot;);&#xD;&#xA;            var value3 = SCM.getIntValue(Res3);&#xD;&#xA;           var Res4 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;           var value4 = SCM.getIntValue(Res4); &#xD;&#xA;           }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Scalefactor = 1000000000;&#xD;&#xA;            var ClkScalefactor = 1;     &#xD;&#xA;            var PwmTime = 0;&#xD;&#xA;            var Count = 0;&#xD;&#xA;            var lsb = 0;&#xD;&#xA;            var mode = 0;&#xD;&#xA;            var comparemode = 0;&#xD;&#xA;            var Res_0 = SCM.getResource(&quot;pwmsp002_tempfreq&quot;);&#xD;&#xA;            var freq = SCM.getIntValue(Res_0);&#xD;&#xA;  &#xD;&#xA;            var Res2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;            var resolution = SCM.getDoubleValue(Res2);    &#xD;&#xA;  &#xD;&#xA;            var Res1 = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;            var val1 = SCM.getIntValue(Res1); &#xD;&#xA;            if(val1 == 1){mode = 1;}  &#xD;&#xA;  &#xD;&#xA;            var Res0 = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;            var val0 = SCM.getIntValue(Res0); &#xD;&#xA;            if(val0 == 1){comparemode = 1;} &#xD;&#xA;      &#xD;&#xA;            var tc = 0;   &#xD;&#xA;            &#xD;&#xA;            PwmTime = (Scalefactor / (freq )) ;&#xD;&#xA;            Count = (PwmTime / resolution);&#xD;&#xA;  &#xD;&#xA;            if (mode == 1){&#xD;&#xA;                tc = 0;&#xD;&#xA;            }  &#xD;&#xA;            else{&#xD;&#xA;   //edge-aligned mode&#xD;&#xA;              if(Count > 65535 &amp;&amp; comparemode === 0 ){&#xD;&#xA;                  tc = 1;              &#xD;&#xA;               }&#xD;&#xA;              else {&#xD;&#xA;                  tc = 0;&#xD;&#xA;              }&#xD;&#xA;             }&#xD;&#xA;&#xD;&#xA;            if(tc === 0){&#xD;&#xA;              SCM.setStringValue(currentResource, &quot;No timer concatenation&quot;);&#xD;&#xA;            }&#xD;&#xA;            else if(tc == 1){&#xD;&#xA;              SCM.setStringValue(currentResource, &quot;Timer concatenation&quot;);&#xD;&#xA;            }&#xD;&#xA;}" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_srtimerconcatenation">
    <defaultValue xsi:type="ResourceModel:StringValue" value=" "/>
    <localValue xsi:type="ResourceModel:StringValue" value=" "/>
    <globalValue xsi:type="ResourceModel:StringValue" value="No timer concatenation"/>
    <toolTipHelpDescription>This informs whether timer concatenation is required to achieve PWM waveform with given frequency and resolution.non-editable field</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Duty Cycle in %" evalFunction="&#xD;&#xA;        function ForwardMapping(){&#xD;&#xA;          var duty = SCM.getDoubleValue(currentResource);&#xD;&#xA;          var tempRes = SCM.getResource(&quot;pwmsp002_tempduty&quot;);&#xD;&#xA;          SCM.setDoubleValue(tempRes,duty);&#xD;&#xA;&#xD;&#xA;          var Res_1 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);&#xD;&#xA;          var value_1 = SCM.getDoubleValue(Res_1);&#xD;&#xA;          var Res_4 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;          var value_4 = SCM.getIntValue(Res_4);&#xD;&#xA;&#xD;&#xA;          var Res3 = SCM.getResource(&quot;pwmsp002_tempcr1&quot;);&#xD;&#xA;          var cr1 = SCM.getIntValue(Res3);&#xD;&#xA;          var Res4 = SCM.getResource(&quot;pwmsp002_tempcr2&quot;);&#xD;&#xA;          var cr2 = SCM.getIntValue(Res4);  &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//bit fields to be updated&#xD;&#xA;          var Res01 = SCM.getResource(&quot;slice/cr1s&quot;);&#xD;&#xA;          var tempres = SCM.getIntValue(Res01);&#xD;&#xA;          var Res02 = SCM.getResource(&quot;slice/cr2s&quot;); &#xD;&#xA;          var Res11 = SCM.getResource(&quot;slice1/cr1s&quot;);&#xD;&#xA;          var Res12 = SCM.getResource(&quot;slice1/cr2s&quot;);    &#xD;&#xA;&#xD;&#xA;          var comparemode = 0.0;&#xD;&#xA;          var countingmode = 0.0;&#xD;&#xA;          var compreg  = 0.0;&#xD;&#xA;          var compreg1 = 0.0;&#xD;&#xA;          var compreg2 = 0.0;&#xD;&#xA;          var period = 0.0;&#xD;&#xA;          var asymduty = 0.0;&#xD;&#xA;&#xD;&#xA;          var Scalefactor = 1000000000;&#xD;&#xA;          var PwmTime = 0;&#xD;&#xA;          var Count = 0;&#xD;&#xA;          var lsb = 0;&#xD;&#xA;          var tc = 0;&#xD;&#xA;&#xD;&#xA;          var Res_0 = SCM.getResource(&quot;pwmsp002_tempfreq&quot;);&#xD;&#xA;          var freq = SCM.getIntValue(Res_0);&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Find the actual resolution from clock frequency and PSIV&#xD;&#xA;          var Res2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;          var resolution = SCM.getDoubleValue(Res2);&#xD;&#xA;//---------------------------------------------------------------------------    &#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Find the period value from the counting mode and resolution&#xD;&#xA;          var Res1 = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;          var val1 = SCM.getIntValue(Res1); &#xD;&#xA;          if(val1 == 1){countingmode = 1;}  &#xD;&#xA;&#xD;&#xA;          var Res0 = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;          var val0 = SCM.getIntValue(Res0); &#xD;&#xA;          if(val0 == 1){comparemode = 1;} &#xD;&#xA;&#xD;&#xA;          PwmTime = (Scalefactor / (freq )) ;&#xD;&#xA;          Count = (PwmTime / resolution);&#xD;&#xA;&#xD;&#xA;//center-aligned mode&#xD;&#xA;          if(countingmode == 1)&#xD;&#xA;          {&#xD;&#xA;            tc = 0;            &#xD;&#xA;            Count = (Count-1) >> 1;&#xD;&#xA;            if (Count > 65535){&#xD;&#xA;                period = 0;&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                period = Count;&#xD;&#xA;            }                     &#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;//edge-aligned mode&#xD;&#xA;          else{         &#xD;&#xA;            if(Count > 65535){&#xD;&#xA;                if(comparemode == 1){&#xD;&#xA;                  tc = 0;  &#xD;&#xA;                  period = 0;              &#xD;&#xA;                }&#xD;&#xA;                else{&#xD;&#xA;                  tc = 1;&#xD;&#xA;                  do{&#xD;&#xA;                    Count = Count >> 1;&#xD;&#xA;                    lsb++;&#xD;&#xA;                  }while(Count >= 65535);&#xD;&#xA;                  lsb = ((1 &lt;&lt; lsb) -1);&#xD;&#xA;                  period = ((Count +1) * (lsb +1)) + 1;&#xD;&#xA;                }      &#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;              tc = 0;               &#xD;&#xA;              period = Count - 1;&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;//in symmetric mode, read duty cycle value and calculate compare values&#xD;&#xA;          if(comparemode === 0) {&#xD;&#xA;//symmetric mode with edge-aligned and without timer concatenation&#xD;&#xA;            if(countingmode === 0 &amp;&amp; tc === 0){&#xD;&#xA;              compreg = ((100 - duty ) * (period +1)) / 100;&#xD;&#xA;              SCM.setIntValue(Res02, 0);&#xD;&#xA;              SCM.setIntValue(Res3, compreg);&#xD;&#xA;              SCM.setIntValue(Res4, 0);&#xD;&#xA;              SCM.setIntValue(Res01, compreg);&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;//symmetric mode with edge-aligned and timer concatenation&#xD;&#xA;            else if(countingmode === 0 &amp;&amp; tc == 1){&#xD;&#xA;              compreg = ((100 - duty ) * (period)) / 100;&#xD;&#xA;              compreg2 = compreg % (Count);&#xD;&#xA;              compreg1 = compreg / (Count);&#xD;&#xA;&#xD;&#xA;              SCM.setIntValue(Res02, 0);&#xD;&#xA;              SCM.setIntValue(Res11, compreg2);&#xD;&#xA;              SCM.setIntValue(Res12, 0);&#xD;&#xA;              compreg =  (compreg1 &lt;&lt; 16) | compreg2;&#xD;&#xA;              SCM.setIntValue(Res3, compreg);&#xD;&#xA;              SCM.setIntValue(Res4, 0);&#xD;&#xA;              SCM.setIntValue(Res01, compreg1);&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;//symmetric mode with center-aligned&#xD;&#xA;            else if(countingmode == 1){&#xD;&#xA;              compreg = ((100 - duty ) * period) / 100;&#xD;&#xA;&#xD;&#xA;              SCM.setIntValue(Res02, 0);&#xD;&#xA;              SCM.setIntValue(Res3, compreg);&#xD;&#xA;              SCM.setIntValue(Res4, 0); &#xD;&#xA;              SCM.setIntValue(Res01, compreg);            &#xD;&#xA;             }&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;&#xD;&#xA;function BackwardMapping(){&#xD;&#xA;          var tempRes = SCM.getResource(&quot;pwmsp002_tempduty&quot;);&#xD;&#xA;          var duty = SCM.getDoubleValue(tempRes);&#xD;&#xA;&#xD;&#xA;          var Res3 = SCM.getResource(&quot;pwmsp002_tempcr1&quot;);&#xD;&#xA;          var cr1 = SCM.getIntValue(Res3);&#xD;&#xA;          var Res4 = SCM.getResource(&quot;pwmsp002_tempcr2&quot;);&#xD;&#xA;          var cr2 = SCM.getIntValue(Res4);  &#xD;&#xA;&#xD;&#xA;          var comparemode = 0.0;&#xD;&#xA;          var countingmode = 0.0;&#xD;&#xA;          var compreg  = 0.0;&#xD;&#xA;          var compreg1 = 0.0;&#xD;&#xA;          var compreg2 = 0.0;&#xD;&#xA;          var period = 0.0;&#xD;&#xA;          var asymduty = 0.0;&#xD;&#xA;&#xD;&#xA;          var Scalefactor = 1000000000;&#xD;&#xA;          var PwmTime = 0;&#xD;&#xA;          var Count = 0;&#xD;&#xA;          var lsb = 0;&#xD;&#xA;          var tc = 0;&#xD;&#xA;&#xD;&#xA;          var Res_0 = SCM.getResource(&quot;pwmsp002_tempfreq&quot;);&#xD;&#xA;          var freq = SCM.getDoubleValue(Res_0);&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Find the actual resolution from clock frequency and PSIV&#xD;&#xA;          var Res2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;          var resolution = SCM.getDoubleValue(Res2);&#xD;&#xA;//---------------------------------------------------------------------------    &#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Find the period value from the counting mode and resolution&#xD;&#xA;          var Res1 = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;          var val1 = SCM.getIntValue(Res1); &#xD;&#xA;          if(val1 == 1){countingmode = 1;}  &#xD;&#xA;&#xD;&#xA;          var Res0 = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;          var val0 = SCM.getIntValue(Res0); &#xD;&#xA;          if(val0 == 1){comparemode = 1;} &#xD;&#xA;&#xD;&#xA;          PwmTime = (Scalefactor / (freq )) ;&#xD;&#xA;          Count = (PwmTime / resolution);&#xD;&#xA;&#xD;&#xA;//center-aligned mode&#xD;&#xA;          if(countingmode == 1)&#xD;&#xA;          {&#xD;&#xA;            tc = 0;            &#xD;&#xA;            Count = (Count-1) >> 1;&#xD;&#xA;            if (Count > 65535){&#xD;&#xA;                period = 0;&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                period = Count;&#xD;&#xA;            }                     &#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;//edge-aligned mode&#xD;&#xA;          else{         &#xD;&#xA;            if(Count > 65535){&#xD;&#xA;                if(comparemode == 1){&#xD;&#xA;                  tc = 0;  &#xD;&#xA;                  period = 0;              &#xD;&#xA;                }&#xD;&#xA;                else{&#xD;&#xA;                  tc = 1;&#xD;&#xA;                  do{&#xD;&#xA;                    Count = Count >> 1;&#xD;&#xA;                    lsb++;&#xD;&#xA;                  }while(Count >= 65535);&#xD;&#xA;                  lsb = ((1 &lt;&lt; lsb) -1);&#xD;&#xA;                  period = ((Count +1) * (lsb +1)) + 1;&#xD;&#xA;                }      &#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;              tc = 0;               &#xD;&#xA;              period = Count - 1;&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;//Duty cycle is updated in asymmetric mode from compare values. In symmetric mode, it is kept as it is&#xD;&#xA;//asymmetric &#xD;&#xA;         if(comparemode == 1){&#xD;&#xA;//asymmetric with edge-aligned without timer concatenation&#xD;&#xA;            if(countingmode === 0){&#xD;&#xA;              asymduty = ((cr2-cr1) / (period +1)) * 100;&#xD;&#xA;            }&#xD;&#xA;//asymmetric with center-aligned&#xD;&#xA;            else if (countingmode == 1){&#xD;&#xA;              asymduty = (((period-cr1) + (period-cr2)) / (2 * period +1)) * 100;&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;//symmetric&#xD;&#xA;          else {&#xD;&#xA;            asymduty = duty;&#xD;&#xA;          }&#xD;&#xA;          SCM.setDoubleValue(currentResource,asymduty);&#xD;&#xA;        }&#xD;&#xA;" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwdutycycle" downWardmappedList="//@consumed.21 //@consumed.82" maxValue="64" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="32"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to input required duty cycle value in % in symmetric PWM mode.&#xD;
In asymmetric mode it displays the duty cycle in % from the compare register values entered by the user.&#xD;
Edge-aligned asymmetric duty = (cr2-cr1) * 100 / (period + 1)&#xD;
Center-aligned asymmetric duty = ((period - cr1) + (period -cr2)) * 100/ (2 * period + 1)</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Compare value 1" evalFunction="&#xD;&#xA;        function ForwardMapping(){&#xD;&#xA;&#xD;&#xA;          var Res_1 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);&#xD;&#xA;          var value_1 = SCM.getDoubleValue(Res_1);&#xD;&#xA;          var Res_4 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;          var value_4 = SCM.getIntValue(Res_4);&#xD;&#xA;&#xD;&#xA;          var Res_3 = SCM.getResource(&quot;pwmsp002_tempcr1&quot;);&#xD;&#xA;          var cr1 = SCM.getIntValue(currentResource);&#xD;&#xA;          SCM.setIntValue(Res_3, cr1);&#xD;&#xA;          var Res4 = SCM.getResource(&quot;pwmsp002_tempcr2&quot;);&#xD;&#xA;          var cr2 = SCM.getIntValue(Res4);  &#xD;&#xA;          var tempres = SCM.getResource(&quot;pwmsp002_tempduty&quot;);&#xD;&#xA;          var duty = SCM.getIntValue(tempres);  &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//bit fields to be updated&#xD;&#xA;          var Res01 = SCM.getResource(&quot;slice/cr1s&quot;);&#xD;&#xA;          var tempcr = SCM.getIntValue(Res01);&#xD;&#xA;          var Res02 = SCM.getResource(&quot;slice/cr2s&quot;); &#xD;&#xA;          var Res11 = SCM.getResource(&quot;slice1/cr1s&quot;);&#xD;&#xA;          var Res12 = SCM.getResource(&quot;slice1/cr2s&quot;);    &#xD;&#xA;&#xD;&#xA;          var comparemode = 0.0;&#xD;&#xA;          var countingmode = 0.0;&#xD;&#xA;          var compreg  = 0.0;&#xD;&#xA;          var compreg1 = 0.0;&#xD;&#xA;          var compreg2 = 0.0;&#xD;&#xA;          var period = 0.0;&#xD;&#xA;          var asymduty = 0.0;&#xD;&#xA;&#xD;&#xA;          var Scalefactor = 1000000000;&#xD;&#xA;          var PwmTime = 0;&#xD;&#xA;          var Count = 0;&#xD;&#xA;          var lsb = 0;&#xD;&#xA;          var tc = 0;&#xD;&#xA;&#xD;&#xA;          var Res_0 = SCM.getResource(&quot;pwmsp002_tempfreq&quot;);&#xD;&#xA;          var freq = SCM.getIntValue(Res_0);&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Find the actual resolution from clock frequency and PSIV&#xD;&#xA;          var Res2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;          var resolution = SCM.getDoubleValue(Res2);&#xD;&#xA;//---------------------------------------------------------------------------    &#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Find the period value from the counting mode and resolution&#xD;&#xA;          var Res1 = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;          var val1 = SCM.getIntValue(Res1); &#xD;&#xA;          if(val1 == 1){countingmode = 1;}  &#xD;&#xA;&#xD;&#xA;          var Res0 = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;          var val0 = SCM.getIntValue(Res0); &#xD;&#xA;          if(val0 == 1){comparemode = 1;} &#xD;&#xA;&#xD;&#xA;          PwmTime = (Scalefactor / (freq )) ;&#xD;&#xA;          Count = (PwmTime / resolution);&#xD;&#xA;&#xD;&#xA;//center-aligned mode&#xD;&#xA;          if(countingmode == 1)&#xD;&#xA;          {&#xD;&#xA;            tc = 0;            &#xD;&#xA;            Count = (Count-1) >> 1;&#xD;&#xA;            if (Count > 65535){&#xD;&#xA;                period = 0;&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                period = Count;&#xD;&#xA;            }                     &#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;//edge-aligned mode&#xD;&#xA;          else{         &#xD;&#xA;            if(Count > 65535){&#xD;&#xA;                if(comparemode == 1){&#xD;&#xA;                  tc = 0;  &#xD;&#xA;                  period = 0;              &#xD;&#xA;                }&#xD;&#xA;                else{&#xD;&#xA;                  tc = 1;&#xD;&#xA;                  do{&#xD;&#xA;                    Count = Count >> 1;&#xD;&#xA;                    lsb++;&#xD;&#xA;                  }while(Count >= 65535);&#xD;&#xA;                  lsb = ((1 &lt;&lt; lsb) -1);&#xD;&#xA;                  period = ((Count +1) * (lsb +1)) + 1;&#xD;&#xA;                }      &#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;              tc = 0;               &#xD;&#xA;              period = Count - 1;&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//asymmetric &#xD;&#xA;         if(comparemode == 1){&#xD;&#xA;//asymmetric with edge-aligned without timer concatenation&#xD;&#xA;            if(countingmode === 0){&#xD;&#xA;              asymduty = ((cr2-cr1) / (period +1)) * 100;&#xD;&#xA;&#xD;&#xA;              SCM.setIntValue(Res02, cr2);  &#xD;&#xA;              SCM.setDoubleValue(tempres, asymduty);&#xD;&#xA;              SCM.setIntValue(Res01, cr1);&#xD;&#xA;            }&#xD;&#xA;//asymmetric with center-aligned&#xD;&#xA;            else if (countingmode == 1){&#xD;&#xA;              asymduty = (((period-cr1) + (period-cr2)) / (2 * period +1)) * 100;&#xD;&#xA;&#xD;&#xA;              SCM.setIntValue(Res02, cr2); &#xD;&#xA;              SCM.setDoubleValue(tempres, asymduty);&#xD;&#xA;              SCM.setIntValue(Res01, cr1);&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function BackwardMapping(){&#xD;&#xA;          var temp_cr1 = SCM.getResource(&quot;pwmsp002_tempcr1&quot;);&#xD;&#xA;          var cr1 = SCM.getIntValue(temp_cr1);&#xD;&#xA;&#xD;&#xA;          var tempRes = SCM.getResource(&quot;pwmsp002_tempduty&quot;);&#xD;&#xA;          var duty = SCM.getDoubleValue(tempRes); &#xD;&#xA;&#xD;&#xA;          var comparemode = 0.0;&#xD;&#xA;          var countingmode = 0.0;&#xD;&#xA;          var compreg  = 0.0;&#xD;&#xA;          var compreg1 = 0.0;&#xD;&#xA;          var compreg2 = 0.0;&#xD;&#xA;          var period = 0.0;&#xD;&#xA;          var asymduty = 0.0;&#xD;&#xA;&#xD;&#xA;          var Scalefactor = 1000000000;&#xD;&#xA;          var PwmTime = 0;&#xD;&#xA;          var Count = 0;&#xD;&#xA;          var lsb = 0;&#xD;&#xA;          var tc = 0;&#xD;&#xA;&#xD;&#xA;          var Res_0 = SCM.getResource(&quot;pwmsp002_tempfreq&quot;);&#xD;&#xA;          var freq = SCM.getDoubleValue(Res_0);&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Find the actual resolution from clock frequency and PSIV&#xD;&#xA;          var Res2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;          var resolution = SCM.getDoubleValue(Res2);&#xD;&#xA;//---------------------------------------------------------------------------    &#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Find the period value from the counting mode and resolution&#xD;&#xA;          var Res1 = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;          var val1 = SCM.getIntValue(Res1); &#xD;&#xA;          if(val1 == 1){countingmode = 1;}  &#xD;&#xA;&#xD;&#xA;          var Res0 = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;          var val0 = SCM.getIntValue(Res0); &#xD;&#xA;          if(val0 == 1){comparemode = 1;} &#xD;&#xA;&#xD;&#xA;          PwmTime = (Scalefactor / (freq )) ;&#xD;&#xA;          Count = (PwmTime / resolution);&#xD;&#xA;&#xD;&#xA;//center-aligned mode&#xD;&#xA;          if(countingmode == 1)&#xD;&#xA;          {&#xD;&#xA;            tc = 0;            &#xD;&#xA;            Count = (Count-1) >> 1;&#xD;&#xA;            if (Count > 65535){&#xD;&#xA;                period = 0;&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                period = Count;&#xD;&#xA;            }                     &#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;//edge-aligned mode&#xD;&#xA;          else{         &#xD;&#xA;            if(Count > 65535){&#xD;&#xA;                if(comparemode == 1){&#xD;&#xA;                  tc = 0;  &#xD;&#xA;                  period = 0;              &#xD;&#xA;                }&#xD;&#xA;                else{&#xD;&#xA;                  tc = 1;&#xD;&#xA;                  do{&#xD;&#xA;                    Count = Count >> 1;&#xD;&#xA;                    lsb++;&#xD;&#xA;                  }while(Count >= 65535);&#xD;&#xA;                  lsb = ((1 &lt;&lt; lsb) -1);&#xD;&#xA;                  period = ((Count +1) * (lsb +1)) + 1;&#xD;&#xA;                }      &#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;              tc = 0;               &#xD;&#xA;              period = Count - 1;&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Compare value calculations&#xD;&#xA;//in symmetric mode, read duty cycle value and calculate compare values&#xD;&#xA;          if(comparemode === 0) {&#xD;&#xA;//symmetric mode with edge-aligned and without timer concatenation&#xD;&#xA;            if(countingmode === 0 &amp;&amp; tc === 0){&#xD;&#xA;              compreg = ((100 - duty ) * (period +1)) / 100;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;//symmetric mode with edge-aligned and timer concatenation&#xD;&#xA;            else if(countingmode === 0 &amp;&amp; tc == 1){&#xD;&#xA;              compreg = ((100 - duty ) * (period)) / 100;&#xD;&#xA;              compreg2 = compreg % (Count);&#xD;&#xA;              compreg1 = compreg / (Count);&#xD;&#xA;              compreg =  (compreg1 &lt;&lt; 16) | compreg2;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;//symmetric mode with center-aligned&#xD;&#xA;            else if(countingmode == 1){&#xD;&#xA;              compreg = ((100 - duty ) * period) / 100;&#xD;&#xA;             }&#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;//asymmetric &#xD;&#xA;         else if(comparemode == 1){&#xD;&#xA;            compreg = cr1;&#xD;&#xA;          }&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;          SCM.setIntValue(currentResource, compreg);&#xD;&#xA;         &#xD;&#xA;        }  &#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_ircompareval1" downWardmappedList="//@consumed.18" maxValue="FFFFFFFF" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="d05"/>
    <toolTipHelpDescription>This allows user to enter the the compare register 1 value in asymmetric mode. &#xD;
In symmetric mode of operation, it displays the compare value as per the given duty cycle.&#xD;
In case of timer concatenation it represnts &lt;second slice 16-bits>&lt;first slice 16-bits>.</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Compare value 2" evalFunction="&#xD;&#xA;        function ForwardMapping(){&#xD;&#xA;          var Res_1 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);&#xD;&#xA;          var value_1 = SCM.getDoubleValue(Res_1);&#xD;&#xA;          var Res_4 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;          var value_4 = SCM.getIntValue(Res_4);&#xD;&#xA;&#xD;&#xA;          var Res4 = SCM.getResource(&quot;pwmsp002_tempcr2&quot;);&#xD;&#xA;          var cr2 = SCM.getIntValue(currentResource);&#xD;&#xA;          SCM.setIntValue(Res4, cr2);&#xD;&#xA;&#xD;&#xA;          var Res_3 = SCM.getResource(&quot;pwmsp002_tempcr1&quot;);&#xD;&#xA;          var cr1 = SCM.getIntValue(Res_3);&#xD;&#xA;          var tempres = SCM.getResource(&quot;pwmsp002_tempduty&quot;);&#xD;&#xA;          var duty = SCM.getIntValue(tempres);  &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//bit fields to be updated&#xD;&#xA;          var Res01 = SCM.getResource(&quot;slice/cr1s&quot;);&#xD;&#xA;          var tempcr = SCM.getIntValue(Res01);&#xD;&#xA;          var Res02 = SCM.getResource(&quot;slice/cr2s&quot;); &#xD;&#xA;          var Res11 = SCM.getResource(&quot;slice1/cr1s&quot;);&#xD;&#xA;          var Res12 = SCM.getResource(&quot;slice1/cr2s&quot;);    &#xD;&#xA;&#xD;&#xA;          var comparemode = 0.0;&#xD;&#xA;          var countingmode = 0.0;&#xD;&#xA;          var compreg  = 0.0;&#xD;&#xA;          var compreg1 = 0.0;&#xD;&#xA;          var compreg2 = 0.0;&#xD;&#xA;          var period = 0.0;&#xD;&#xA;          var asymduty = 0.0;&#xD;&#xA;&#xD;&#xA;          var Scalefactor = 1000000000;&#xD;&#xA;          var PwmTime = 0;&#xD;&#xA;          var Count = 0;&#xD;&#xA;          var lsb = 0;&#xD;&#xA;          var tc = 0;&#xD;&#xA;&#xD;&#xA;          var Res_0 = SCM.getResource(&quot;pwmsp002_tempfreq&quot;);&#xD;&#xA;          var freq = SCM.getIntValue(Res_0);&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Find the actual resolution from clock frequency and PSIV&#xD;&#xA;          var Res2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;          var resolution = SCM.getDoubleValue(Res2);&#xD;&#xA;//---------------------------------------------------------------------------    &#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Find the period value from the counting mode and resolution&#xD;&#xA;          var Res1 = SCM.getResource(&quot;slice/tc/tcm&quot;); &#xD;&#xA;          var val1 = SCM.getIntValue(Res1); &#xD;&#xA;          if(val1 == 1){countingmode = 1;}  &#xD;&#xA;&#xD;&#xA;          var Res0 = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;          var val0 = SCM.getIntValue(Res0); &#xD;&#xA;          if(val0 == 1){comparemode = 1;} &#xD;&#xA;&#xD;&#xA;          PwmTime = (Scalefactor / (freq )) ;&#xD;&#xA;          Count = (PwmTime / resolution);&#xD;&#xA;&#xD;&#xA;//center-aligned mode&#xD;&#xA;          if(countingmode == 1)&#xD;&#xA;          {&#xD;&#xA;            tc = 0;            &#xD;&#xA;            Count = (Count-1) >> 1;&#xD;&#xA;            if (Count > 65535){&#xD;&#xA;                period = 0;&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                period = Count;&#xD;&#xA;            }                     &#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;//edge-aligned mode&#xD;&#xA;          else{         &#xD;&#xA;            if(Count > 65535){&#xD;&#xA;                if(comparemode == 1){&#xD;&#xA;                  tc = 0;  &#xD;&#xA;                  period = 0;              &#xD;&#xA;                }&#xD;&#xA;                else{&#xD;&#xA;                  tc = 1;&#xD;&#xA;                  do{&#xD;&#xA;                    Count = Count >> 1;&#xD;&#xA;                    lsb++;&#xD;&#xA;                  }while(Count >= 65535);&#xD;&#xA;                  lsb = ((1 &lt;&lt; lsb) -1);&#xD;&#xA;                  period = ((Count +1) * (lsb +1)) + 1;&#xD;&#xA;                }      &#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;              tc = 0;               &#xD;&#xA;              period = Count - 1;&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//asymmetric &#xD;&#xA;         if(comparemode == 1){&#xD;&#xA;//asymmetric with edge-aligned without timer concatenation&#xD;&#xA;            if(countingmode === 0){&#xD;&#xA;              asymduty = ((cr2-cr1) / (period +1)) * 100;&#xD;&#xA;              SCM.setIntValue(Res02, cr2);  &#xD;&#xA;              SCM.setDoubleValue(tempres, asymduty);&#xD;&#xA;              SCM.setIntValue(Res01, cr1);&#xD;&#xA;            }&#xD;&#xA;//asymmetric with center-aligned&#xD;&#xA;            else if (countingmode == 1){&#xD;&#xA;              asymduty = (((period-cr1) + (period-cr2)) / (2 * period +1)) * 100;&#xD;&#xA;              SCM.setIntValue(Res02, cr2); &#xD;&#xA;              SCM.setDoubleValue(tempres, asymduty);&#xD;&#xA;              SCM.setIntValue(Res01, cr1);&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function BackwardMapping(){&#xD;&#xA;          var temp_cr2 = SCM.getResource(&quot;pwmsp002_tempcr2&quot;);&#xD;&#xA;          var cr2 = SCM.getIntValue(temp_cr2);&#xD;&#xA;&#xD;&#xA;          var comparemode = 0.0;&#xD;&#xA;          var countingmode = 0.0;&#xD;&#xA;          var compreg  = 0.0;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;          var Res0 = SCM.getResource(&quot;slice/chc/ase&quot;); &#xD;&#xA;          var val0 = SCM.getIntValue(Res0); &#xD;&#xA;          if(val0 == 1){comparemode = 1;} &#xD;&#xA;&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;//Compare value calculations&#xD;&#xA;//in symmetric mode, read duty cycle value and calculate compare values&#xD;&#xA;          if(comparemode === 0) {&#xD;&#xA;            compreg = 0;&#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;//asymmetric &#xD;&#xA;         else if(comparemode == 1){&#xD;&#xA;            compreg = cr2;&#xD;&#xA;          }&#xD;&#xA;//---------------------------------------------------------------------------&#xD;&#xA;          SCM.setIntValue(currentResource, compreg);&#xD;&#xA;         &#xD;&#xA;        }  &#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_ircompareval2" downWardmappedList="//@consumed.19" maxValue="FFFFFFFF" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows user to enter the the compare register 2 value in asymmetric mode. &#xD;
In symmetric mode of operation, it displays the compare value as per the given duty cycle.&#xD;
In case of timer concatenation it represnts &lt;second slice 16-bits>&lt;first slice 16-bits>&#xD;
Compare2 value should be greater than compare1 value for Edge-Aligned mode. &#xD;
A CR2 lower than CR1 in edge align mode provides a 0 % DC</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Start" evalFunction="" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwstart" maxValue="1" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="1"/>
    <toolTipHelpDescription>This parameter is used by top level app to set the start value.&#xD;
This is to indicate whther top level app will start the app.</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Start mask" evalFunction="" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwstartmask" maxValue="16" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="1"/>
    <toolTipHelpDescription>This is the Bitmask for clearing IDLE mask as per the slice used.</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Shadow transfer" evalFunction="" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwshadowtransfer" maxValue="1" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="1"/>
    <toolTipHelpDescription>This parameter is used by top level app.&#xD;
This is to indicate whther top level app will initiate the shadow transfer</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Shadow transfer mask" evalFunction="" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwshadowtransfermask" maxValue="4096" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="1"/>
    <toolTipHelpDescription>This is the Bitmask for shadow transfer as per the slice used.</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Top level app" evalFunction="" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwtoplevelapp" maxValue="1" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
    <toolTipHelpDescription>This value will be set by the top level app to understand that&#xD;
top level app will configure this app.</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Rising Dead Time" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var rise = SCM.getDoubleValue(currentResource);&#xD;&#xA;            var tempRes = SCM.getResource(&quot;pwmsp002_temprisedeadtime&quot;);&#xD;&#xA;            SCM.setDoubleValue(tempRes,rise);&#xD;&#xA;&#xD;&#xA;            var Res = SCM.getResource(&quot;slice/dc1r/dt1f&quot;);&#xD;&#xA;            var Res3 = SCM.getResource(&quot;slice/dc1r/dt1r&quot;);&#xD;&#xA;            var Res0 = SCM.getResource(&quot;slice/dtc/dtcc&quot;);&#xD;&#xA;&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;            var resolution = SCM.getDoubleValue(Res_2);&#xD;&#xA;&#xD;&#xA;            var Res2 = SCM.getResource(&quot;PWMSP002_irwFallDeadTime&quot;);&#xD;&#xA;            var fall = SCM.getDoubleValue(Res2);&#xD;&#xA;&#xD;&#xA;            var falldeadtime = (fall * 1000) / resolution;&#xD;&#xA;            var risedeadtime = (rise * 1000) / resolution;&#xD;&#xA;&#xD;&#xA;            var fallcount = 0;&#xD;&#xA;            var risecount = 0;&#xD;&#xA;            var count = 0;&#xD;&#xA;            if(falldeadtime > 255){&#xD;&#xA;              var fallresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                fallresolution = fallresolution &lt;&lt; 1;&#xD;&#xA;                fallcount = fallcount +1;&#xD;&#xA;                falldeadtime = (fall * 1000) / fallresolution;&#xD;&#xA;              }while(falldeadtime >= 255 &amp;&amp; fallcount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            if(risedeadtime > 255){&#xD;&#xA;              var riseresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                riseresolution = riseresolution &lt;&lt; 1;&#xD;&#xA;                risecount = risecount +1;&#xD;&#xA;                risedeadtime = (rise * 1000) / riseresolution;&#xD;&#xA;              }while(risedeadtime >= 255 &amp;&amp; risecount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;            if(fallcount > risecount){&#xD;&#xA;              count = fallcount;&#xD;&#xA;              risedeadtime = (rise * 1000) / fallresolution;                        &#xD;&#xA;            }&#xD;&#xA;            else if(risecount > fallcount){&#xD;&#xA;              count = risecount;&#xD;&#xA;              falldeadtime = (fall * 1000) / riseresolution;                        &#xD;&#xA;            }                      &#xD;&#xA;            else if(risecount == fallcount){&#xD;&#xA;              count = risecount;                    &#xD;&#xA;            }&#xD;&#xA;          &#xD;&#xA;            SCM.setIntValue (Res, falldeadtime);&#xD;&#xA;            SCM.setIntValue (Res0, count);&#xD;&#xA;            SCM.setIntValue (Res3, risedeadtime);&#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var tempRes = SCM.getResource(&quot;pwmsp002_temprisedeadtime&quot;);&#xD;&#xA;            var value = SCM.getDoubleValue(tempRes);&#xD;&#xA;            SCM.setDoubleValue(currentResource, value);&#xD;&#xA;          }        &#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwrisedeadtime" downWardmappedList="//@consumed.16" maxValue="64" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="3fc3333333333333"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="3fc3333333333333"/>
    <toolTipHelpDescription>Enter rising dead time value in us (0 -100). Output is delayed by this time in the transition from 0 to 1. </toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Falling Dead time" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var fall = SCM.getDoubleValue(currentResource);&#xD;&#xA;            var tempRes = SCM.getResource(&quot;pwmsp002_tempfalldeadtime&quot;);&#xD;&#xA;            SCM.setDoubleValue(tempRes,fall);&#xD;&#xA;&#xD;&#xA;            var Res = SCM.getResource(&quot;slice/dc1r/dt1f&quot;);&#xD;&#xA;            var Res3 = SCM.getResource(&quot;slice/dc1r/dt1r&quot;);&#xD;&#xA;            var Res0 = SCM.getResource(&quot;slice/dtc/dtcc&quot;);&#xD;&#xA;&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;            var resolution = SCM.getDoubleValue(Res_2);&#xD;&#xA;&#xD;&#xA;            var Res2 = SCM.getResource(&quot;PWMSP002_irwRiseDeadTime&quot;);&#xD;&#xA;            var rise = SCM.getDoubleValue(Res2);&#xD;&#xA;&#xD;&#xA;            var falldeadtime = (fall * 1000) / resolution;&#xD;&#xA;            var risedeadtime = (rise * 1000) / resolution;&#xD;&#xA;&#xD;&#xA;            var fallcount = 0;&#xD;&#xA;            var risecount = 0;&#xD;&#xA;            var count = 0;&#xD;&#xA;            if(falldeadtime > 255){&#xD;&#xA;              var fallresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                fallresolution = fallresolution &lt;&lt; 1;&#xD;&#xA;                fallcount = fallcount +1;&#xD;&#xA;                falldeadtime = (fall * 1000) / fallresolution;&#xD;&#xA;              }while(falldeadtime >= 255 &amp;&amp; fallcount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            if(risedeadtime > 255){&#xD;&#xA;              var riseresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                riseresolution = riseresolution &lt;&lt; 1;&#xD;&#xA;                risecount = risecount +1;&#xD;&#xA;                risedeadtime = (rise * 1000) / riseresolution;&#xD;&#xA;              }while(risedeadtime >= 255 &amp;&amp; risecount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;            if(fallcount > risecount){&#xD;&#xA;              count = fallcount;&#xD;&#xA;              risedeadtime = (rise * 1000) / fallresolution;                        &#xD;&#xA;            }&#xD;&#xA;            else if(risecount > fallcount){&#xD;&#xA;              count = risecount;&#xD;&#xA;              falldeadtime = (fall * 1000) / riseresolution;                        &#xD;&#xA;            }                      &#xD;&#xA;            else if(risecount == fallcount){&#xD;&#xA;              count = risecount;                    &#xD;&#xA;            }&#xD;&#xA;          &#xD;&#xA;            SCM.setIntValue (Res, falldeadtime);&#xD;&#xA;            SCM.setIntValue (Res0, count);&#xD;&#xA;            SCM.setIntValue (Res3, risedeadtime);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var tempRes = SCM.getResource(&quot;pwmsp002_tempfalldeadtime&quot;);&#xD;&#xA;            var value = SCM.getDoubleValue(tempRes);&#xD;&#xA;            SCM.setDoubleValue(currentResource, value);&#xD;&#xA;          }  &#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwfalldeadtime" downWardmappedList="//@consumed.15" maxValue="64" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="3fc3333333333333"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="3fc3333333333333"/>
    <toolTipHelpDescription>Enter falling dead time value in us (0-100). Output is delayed by this time in the transition from 1 to 0. </toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Selected Rising Time" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);         &#xD;&#xA;            var clock = SCM.getDoubleValue(Res_2);&#xD;&#xA;            var Res_3 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;            var value_3 = SCM.getIntValue(Res_3);  &#xD;&#xA;            var Res1 = SCM.getResource(&quot;slice/dc1r/dt1r&quot;);&#xD;&#xA;            var value1 = SCM.getIntValue(Res1);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pwmsp002_temprisedeadtime&quot;);&#xD;&#xA;            var rise = SCM.getDoubleValue(Res);&#xD;&#xA;//-------------------------------------------------------------------------&#xD;&#xA;//resolution calculation&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;            var resolution = SCM.getDoubleValue(Res_2);    &#xD;&#xA;//-------------------------------------------------------------------------&#xD;&#xA;            var Res2 = SCM.getResource(&quot;pwmsp002_tempfalldeadtime&quot;);&#xD;&#xA;            var fall = SCM.getDoubleValue(Res2);&#xD;&#xA;&#xD;&#xA;            var falldeadtime = (fall * 1000) / resolution;&#xD;&#xA;            var risedeadtime = (rise * 1000) / resolution;&#xD;&#xA;&#xD;&#xA;            var fallcount = 0;&#xD;&#xA;            var risecount = 0;&#xD;&#xA;            var count = 0;&#xD;&#xA;            if(falldeadtime > 255){&#xD;&#xA;              var fallresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                fallresolution = fallresolution &lt;&lt; 1;&#xD;&#xA;                fallcount = fallcount +1;&#xD;&#xA;                falldeadtime = (fall * 1000) / fallresolution;&#xD;&#xA;              }while(falldeadtime >= 255 &amp;&amp; fallcount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            if(risedeadtime > 255){&#xD;&#xA;              var riseresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                riseresolution = riseresolution &lt;&lt; 1;&#xD;&#xA;                risecount = risecount +1;&#xD;&#xA;                risedeadtime = (rise * 1000) / riseresolution;&#xD;&#xA;              }while(risedeadtime >= 255 &amp;&amp; risecount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;            if(fallcount > 3 || risecount > 3){&#xD;&#xA;               count = 0; &#xD;&#xA;               risedeadtime = 0;&#xD;&#xA;               falldeadtime = 0;&#xD;&#xA;            }&#xD;&#xA;            else if(fallcount > risecount){&#xD;&#xA;              count = fallcount;&#xD;&#xA;              risedeadtime = (rise * 1000) / fallresolution;                        &#xD;&#xA;            }&#xD;&#xA;            else if(risecount > fallcount){&#xD;&#xA;              count = risecount;&#xD;&#xA;              falldeadtime = (fall * 1000) / riseresolution;                        &#xD;&#xA;            }                      &#xD;&#xA;            else if(risecount == fallcount){&#xD;&#xA;              count = risecount;                    &#xD;&#xA;            }&#xD;&#xA;            risedeadtime = (risedeadtime * (resolution &lt;&lt; count))/ 1000;&#xD;&#xA;            SCM.setDoubleValue(currentResource,risedeadtime);&#xD;&#xA;          }        &#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwselrisedeadtime" maxValue="64" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3fc26e978d4fdf3b"/>
    <toolTipHelpDescription>This is the nearest possible rising dead time </toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Selected Falling Time" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);         &#xD;&#xA;            var clock = SCM.getDoubleValue(Res_2);&#xD;&#xA;            var Res_3 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;            var value_3 = SCM.getIntValue(Res_3);  &#xD;&#xA;            var Res1 = SCM.getResource(&quot;slice/dc1r/dt1r&quot;);&#xD;&#xA;            var value1 = SCM.getIntValue(Res1);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pwmsp002_temprisedeadtime&quot;);&#xD;&#xA;            var rise = SCM.getDoubleValue(Res);&#xD;&#xA;//-------------------------------------------------------------------------&#xD;&#xA;//resolution calculation&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;            var resolution = SCM.getDoubleValue(Res_2);    &#xD;&#xA;//-------------------------------------------------------------------------&#xD;&#xA;            var Res2 = SCM.getResource(&quot;pwmsp002_tempfalldeadtime&quot;);&#xD;&#xA;            var fall = SCM.getDoubleValue(Res2);&#xD;&#xA;&#xD;&#xA;            var falldeadtime = (fall * 1000) / resolution;&#xD;&#xA;            var risedeadtime = (rise * 1000) / resolution;&#xD;&#xA;&#xD;&#xA;            var fallcount = 0;&#xD;&#xA;            var risecount = 0;&#xD;&#xA;            var count = 0;&#xD;&#xA;            if(falldeadtime > 255){&#xD;&#xA;              var fallresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                fallresolution = fallresolution &lt;&lt; 1;&#xD;&#xA;                fallcount = fallcount +1;&#xD;&#xA;                falldeadtime = (fall * 1000) / fallresolution;&#xD;&#xA;              }while(falldeadtime >= 255 &amp;&amp; fallcount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            if(risedeadtime > 255){&#xD;&#xA;              var riseresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                riseresolution = riseresolution &lt;&lt; 1;&#xD;&#xA;                risecount = risecount +1;&#xD;&#xA;                risedeadtime = (rise * 1000) / riseresolution;&#xD;&#xA;              }while(risedeadtime >= 255 &amp;&amp; risecount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;            if(fallcount > 3 || risecount > 3){&#xD;&#xA;               count = 0; &#xD;&#xA;               risedeadtime = 0;&#xD;&#xA;               falldeadtime = 0;&#xD;&#xA;            }&#xD;&#xA;            else if(fallcount > risecount){&#xD;&#xA;              count = fallcount;&#xD;&#xA;              risedeadtime = (rise * 1000) / fallresolution;                        &#xD;&#xA;            }&#xD;&#xA;            else if(risecount > fallcount){&#xD;&#xA;              count = risecount;&#xD;&#xA;              falldeadtime = (fall * 1000) / riseresolution;                        &#xD;&#xA;            }                      &#xD;&#xA;            else if(risecount == fallcount){&#xD;&#xA;              count = risecount;                    &#xD;&#xA;            }&#xD;&#xA;            falldeadtime = (falldeadtime * (resolution &lt;&lt; count))/ 1000;&#xD;&#xA;            SCM.setDoubleValue(currentResource,falldeadtime);&#xD;&#xA;          }        &#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwselfalldeadtime" maxValue="64" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3fc26e978d4fdf3b"/>
    <toolTipHelpDescription>This is the nearest falling dead time </toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Selected Rising Time register" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);         &#xD;&#xA;            var clock = SCM.getDoubleValue(Res_2);&#xD;&#xA;            var Res_3 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;            var value_3 = SCM.getIntValue(Res_3);  &#xD;&#xA;            var Res1 = SCM.getResource(&quot;slice/dc1r/dt1r&quot;);&#xD;&#xA;            var value1 = SCM.getIntValue(Res1);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pwmsp002_temprisedeadtime&quot;);&#xD;&#xA;            var rise = SCM.getDoubleValue(Res);&#xD;&#xA;//-------------------------------------------------------------------------&#xD;&#xA;//resolution calculation&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;            var resolution = SCM.getDoubleValue(Res_2);    &#xD;&#xA;//-------------------------------------------------------------------------&#xD;&#xA;            var Res2 = SCM.getResource(&quot;pwmsp002_tempfalldeadtime&quot;);&#xD;&#xA;            var fall = SCM.getDoubleValue(Res2);&#xD;&#xA;&#xD;&#xA;            var falldeadtime = (fall * 1000) / resolution;&#xD;&#xA;            var risedeadtime = (rise * 1000) / resolution;&#xD;&#xA;&#xD;&#xA;            var fallcount = 0;&#xD;&#xA;            var risecount = 0;&#xD;&#xA;            var count = 0;&#xD;&#xA;            if(falldeadtime > 255){&#xD;&#xA;              var fallresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                fallresolution = fallresolution &lt;&lt; 1;&#xD;&#xA;                fallcount = fallcount +1;&#xD;&#xA;                falldeadtime = (fall * 1000) / fallresolution;&#xD;&#xA;              }while(falldeadtime >= 255 &amp;&amp; fallcount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            if(risedeadtime > 255){&#xD;&#xA;              var riseresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                riseresolution = riseresolution &lt;&lt; 1;&#xD;&#xA;                risecount = risecount +1;&#xD;&#xA;                risedeadtime = (rise * 1000) / riseresolution;&#xD;&#xA;              }while(risedeadtime >= 255 &amp;&amp; risecount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;            if(fallcount > 3 || risecount > 3){&#xD;&#xA;               count = 0; &#xD;&#xA;               risedeadtime = 0;&#xD;&#xA;               falldeadtime = 0;&#xD;&#xA;            }&#xD;&#xA;            else if(fallcount > risecount){&#xD;&#xA;              count = fallcount;&#xD;&#xA;              risedeadtime = (rise * 1000) / fallresolution;                        &#xD;&#xA;            }&#xD;&#xA;            else if(risecount > fallcount){&#xD;&#xA;              count = risecount;&#xD;&#xA;              falldeadtime = (fall * 1000) / riseresolution;                        &#xD;&#xA;            }                      &#xD;&#xA;            else if(risecount == fallcount){&#xD;&#xA;              count = risecount;                    &#xD;&#xA;            }&#xD;&#xA;            SCM.setIntValue(currentResource,risedeadtime);&#xD;&#xA;          }        &#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwselrisedeadtimereg" maxValue="FF" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="9"/>
    <toolTipHelpDescription>This is the rising dead time register value (DT1R)</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Selected Falling Time register" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);         &#xD;&#xA;            var clock = SCM.getDoubleValue(Res_2);&#xD;&#xA;            var Res_3 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;            var value_3 = SCM.getIntValue(Res_3);  &#xD;&#xA;            var Res1 = SCM.getResource(&quot;slice/dc1r/dt1r&quot;);&#xD;&#xA;            var value1 = SCM.getIntValue(Res1);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pwmsp002_temprisedeadtime&quot;);&#xD;&#xA;            var rise = SCM.getDoubleValue(Res);&#xD;&#xA;//-------------------------------------------------------------------------&#xD;&#xA;//resolution calculation&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;            var resolution = SCM.getDoubleValue(Res_2);&#xD;&#xA;//-------------------------------------------------------------------------&#xD;&#xA;            var Res2 = SCM.getResource(&quot;pwmsp002_tempfalldeadtime&quot;);&#xD;&#xA;            var fall = SCM.getDoubleValue(Res2);&#xD;&#xA;&#xD;&#xA;            var falldeadtime = (fall * 1000) / resolution;&#xD;&#xA;            var risedeadtime = (rise * 1000) / resolution;&#xD;&#xA;&#xD;&#xA;            var fallcount = 0;&#xD;&#xA;            var risecount = 0;&#xD;&#xA;            var count = 0;&#xD;&#xA;            if(falldeadtime > 255){&#xD;&#xA;              var fallresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                fallresolution = fallresolution &lt;&lt; 1;&#xD;&#xA;                fallcount = fallcount +1;&#xD;&#xA;                falldeadtime = (fall * 1000) / fallresolution;&#xD;&#xA;              }while(falldeadtime >= 255 &amp;&amp; fallcount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            if(risedeadtime > 255){&#xD;&#xA;              var riseresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                riseresolution = riseresolution &lt;&lt; 1;&#xD;&#xA;                risecount = risecount +1;&#xD;&#xA;                risedeadtime = (rise * 1000) / riseresolution;&#xD;&#xA;              }while(risedeadtime >= 255 &amp;&amp; risecount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;            if(fallcount > 3 || risecount > 3){&#xD;&#xA;               count = 0; &#xD;&#xA;               risedeadtime = 0;&#xD;&#xA;               falldeadtime = 0;&#xD;&#xA;            }&#xD;&#xA;            else if(fallcount > risecount){&#xD;&#xA;              count = fallcount;&#xD;&#xA;              risedeadtime = (rise * 1000) / fallresolution;                        &#xD;&#xA;            }&#xD;&#xA;            else if(risecount > fallcount){&#xD;&#xA;              count = risecount;&#xD;&#xA;              falldeadtime = (fall * 1000) / riseresolution;                        &#xD;&#xA;            }                      &#xD;&#xA;            else if(risecount == fallcount){&#xD;&#xA;              count = risecount;                    &#xD;&#xA;            }&#xD;&#xA;            SCM.setIntValue(currentResource,falldeadtime);&#xD;&#xA;          }        &#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwselfalldeadtimereg" maxValue="FF" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="9"/>
    <toolTipHelpDescription>This is the falling dead time register value (DI1F)</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Dead Time Prescalar" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;ccu8globalapp/ccu8global_irclock&quot;);         &#xD;&#xA;            var clock = SCM.getDoubleValue(Res_2);&#xD;&#xA;            var Res_3 = SCM.getResource(&quot;slice/psc/psiv&quot;);&#xD;&#xA;            var value_3 = SCM.getIntValue(Res_3);  &#xD;&#xA;            var Res1 = SCM.getResource(&quot;slice/dc1r/dt1r&quot;);&#xD;&#xA;            var value1 = SCM.getIntValue(Res1);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pwmsp002_temprisedeadtime&quot;);&#xD;&#xA;            var rise = SCM.getDoubleValue(Res);&#xD;&#xA;//-------------------------------------------------------------------------&#xD;&#xA;//resolution calculation&#xD;&#xA;            var Res_2 = SCM.getResource(&quot;PWMSP002_irSelResolution&quot;);         &#xD;&#xA;            var resolution = SCM.getDoubleValue(Res_2);&#xD;&#xA;//-------------------------------------------------------------------------&#xD;&#xA;            var Res2 = SCM.getResource(&quot;pwmsp002_tempfalldeadtime&quot;);&#xD;&#xA;            var fall = SCM.getDoubleValue(Res2);&#xD;&#xA;&#xD;&#xA;            var falldeadtime = (fall * 1000) / resolution;&#xD;&#xA;            var risedeadtime = (rise * 1000) / resolution;&#xD;&#xA;&#xD;&#xA;            var fallcount = 0;&#xD;&#xA;            var risecount = 0;&#xD;&#xA;            var count = 0;&#xD;&#xA;            if(falldeadtime > 255){&#xD;&#xA;              var fallresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                fallresolution = fallresolution &lt;&lt; 1;&#xD;&#xA;                fallcount = fallcount +1;&#xD;&#xA;                falldeadtime = (fall * 1000) / fallresolution;&#xD;&#xA;              }while(falldeadtime >= 255 &amp;&amp; fallcount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            if(risedeadtime > 255){&#xD;&#xA;              var riseresolution = resolution;&#xD;&#xA;              do{&#xD;&#xA;                riseresolution = riseresolution &lt;&lt; 1;&#xD;&#xA;                risecount = risecount +1;&#xD;&#xA;                risedeadtime = (rise * 1000) / riseresolution;&#xD;&#xA;              }while(risedeadtime >= 255 &amp;&amp; risecount &lt;= 3);            &#xD;&#xA;            }&#xD;&#xA;            if(fallcount > 3 || risecount > 3){&#xD;&#xA;               count = 0; &#xD;&#xA;               risedeadtime = 0;&#xD;&#xA;               falldeadtime = 0;&#xD;&#xA;            }&#xD;&#xA;            else if(fallcount > risecount){&#xD;&#xA;              count = fallcount;&#xD;&#xA;              risedeadtime = (rise * 1000) / fallresolution;                        &#xD;&#xA;            }&#xD;&#xA;            else if(risecount > fallcount){&#xD;&#xA;              count = risecount;&#xD;&#xA;              falldeadtime = (fall * 1000) / riseresolution;                        &#xD;&#xA;            }                      &#xD;&#xA;            else if(risecount == fallcount){&#xD;&#xA;              count = risecount;                    &#xD;&#xA;            }&#xD;&#xA;            SCM.setIntValue(currentResource,count);&#xD;&#xA;          }        &#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irseldeadtimeprescalar" maxValue="3" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This is the dead time prescalar value. </toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Dead Time Configurations" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmmp001_tempdeadconf&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmmp001_tempdeadconf&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdeadtimeconf" downWardmappedList="//@consumed.8">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4"/>
    <toolTipHelpDescription>This allows a user to select dead time enable-disable configuration</toolTipHelpDescription>
    <item name="Disable" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/dtc/dte1&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;slice/dtc/dcen1&quot;);&#xD;&#xA;              var Res2 = SCM.getResource(&quot;slice/dtc/dcen2&quot;);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmmp001_tempdeadconf&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res0,0);&#xD;&#xA;                SCM.setIntValue(Res1,0);&#xD;&#xA;                SCM.setIntValue(Res2,0);&#xD;&#xA;                SCM.setIntValue(Res3, 1);        &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res0,0);&#xD;&#xA;                SCM.setIntValue(Res1,0);&#xD;&#xA;                SCM.setIntValue(Res2,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/dtc/dte1&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;slice/dtc/dcen1&quot;);&#xD;&#xA;              var Res2 = SCM.getResource(&quot;slice/dtc/dcen2&quot;);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmmp001_tempdeadconf&quot;);&#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;              var value1 = SCM.getIntValue(Res1); &#xD;&#xA;              var value2 = SCM.getIntValue(Res2);  &#xD;&#xA;              var value3 = SCM.getIntValue(Res3);&#xD;&#xA;              if (value3 == 1) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }        &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdeadtimeconf/0" downWardmappedList="//@consumed.89 //@consumed.90 //@consumed.91 //@consumed.8" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Disable dead time. Output transition from 0 to 1 and 1 to 0 are not deleyaed.  </toolTipHelpDescription>
    </item>
    <item name="Enable dead time for Direct Output" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/dtc/dte1&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;slice/dtc/dcen1&quot;);&#xD;&#xA;              var Res2 = SCM.getResource(&quot;slice/dtc/dcen2&quot;);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmmp001_tempdeadconf&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res0,1);&#xD;&#xA;                SCM.setIntValue(Res1,1);&#xD;&#xA;                SCM.setIntValue(Res2,0);  &#xD;&#xA;                SCM.setIntValue(Res3,2);&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res0,0);&#xD;&#xA;                SCM.setIntValue(Res1,0);&#xD;&#xA;                SCM.setIntValue(Res2,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/dtc/dte1&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;slice/dtc/dcen1&quot;);&#xD;&#xA;              var Res2 = SCM.getResource(&quot;slice/dtc/dcen2&quot;);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmmp001_tempdeadconf&quot;);&#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;              var value1 = SCM.getIntValue(Res1); &#xD;&#xA;              var value2 = SCM.getIntValue(Res2);  &#xD;&#xA;              var value3 = SCM.getIntValue(Res3);&#xD;&#xA;              if (value3 == 2 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }  &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdeadtimeconf/1" downWardmappedList="//@consumed.89 //@consumed.90 //@consumed.91" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Enable dead time for Direct Output. Transition on the Output 'CCST1' is delayed by the given rising and falling dead time  </toolTipHelpDescription>
    </item>
    <item name="Enable Dead Time for Inverted Output" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/dtc/dte1&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;slice/dtc/dcen1&quot;);&#xD;&#xA;              var Res2 = SCM.getResource(&quot;slice/dtc/dcen2&quot;);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmmp001_tempdeadconf&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res0,1);&#xD;&#xA;                SCM.setIntValue(Res1,0);&#xD;&#xA;                SCM.setIntValue(Res2,1);     &#xD;&#xA;                SCM.setIntValue(Res3, 3);&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res0,0);&#xD;&#xA;                SCM.setIntValue(Res1,0);&#xD;&#xA;                SCM.setIntValue(Res2,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/dtc/dte1&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;slice/dtc/dcen1&quot;);&#xD;&#xA;              var Res2 = SCM.getResource(&quot;slice/dtc/dcen2&quot;);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmmp001_tempdeadconf&quot;);&#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;              var value1 = SCM.getIntValue(Res1); &#xD;&#xA;              var value2 = SCM.getIntValue(Res2);&#xD;&#xA;              var value3 = SCM.getIntValue(Res3);  &#xD;&#xA;              if (value3 == 3 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }  &#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdeadtimeconf/2" downWardmappedList="//@consumed.89 //@consumed.90 //@consumed.91" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Enable Dead Time for Inverted Output. Transition on the Output 'inverted CCST1' is delayed by the given rising and falling dead time  </toolTipHelpDescription>
    </item>
    <item name="Enable Dead Time for both Outputs" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/dtc/dte1&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;slice/dtc/dcen1&quot;);&#xD;&#xA;              var Res2 = SCM.getResource(&quot;slice/dtc/dcen2&quot;);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmmp001_tempdeadconf&quot;);&#xD;&#xA;              if (value === 1 ) {&#xD;&#xA;                SCM.setIntValue(Res0,1);&#xD;&#xA;                SCM.setIntValue(Res1,1);&#xD;&#xA;                SCM.setIntValue(Res2,1);&#xD;&#xA;                SCM.setIntValue(Res3,4);&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res0,0);&#xD;&#xA;                SCM.setIntValue(Res1,0);&#xD;&#xA;                SCM.setIntValue(Res2,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/dtc/dte1&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;slice/dtc/dcen1&quot;);&#xD;&#xA;              var Res2 = SCM.getResource(&quot;slice/dtc/dcen2&quot;);&#xD;&#xA;              var Res3 = SCM.getResource(&quot;pwmmp001_tempdeadconf&quot;);&#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;              var value1 = SCM.getIntValue(Res1); &#xD;&#xA;              var value2 = SCM.getIntValue(Res2);&#xD;&#xA;              var value3 = SCM.getIntValue(Res3);  &#xD;&#xA;              if (value3 == 4 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdeadtimeconf/3" downWardmappedList="//@consumed.89 //@consumed.90 //@consumed.91 //@consumed.8" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Enable Dead Time for both outputs. Transition on the Output 'CCST1' and 'inverted CCST1' is delayed by the given rising and falling dead time </toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Dither compare value" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var value = SCM.getIntValue(currentResource);&#xD;&#xA;            var Res = SCM.getResource(&quot;slice/dits/dcvs&quot;);&#xD;&#xA;            SCM.setIntValue (Res, value);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;slice/dits/dcvs&quot;);&#xD;&#xA;            var value = SCM.getIntValue(Res);          &#xD;&#xA;            SCM.setIntValue (currentResource, value);&#xD;&#xA;          }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_irwdithercomp" downWardmappedList="//@consumed.69" maxValue="F" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription> The dither compare value range is 0-15. This is the number of cycles for which the duty, period or both (depending on the dither mode selection) would be altered in the 16 cycles.</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Dither Mode" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/dithe&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;slice/tc/dithe&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdithermode" downWardmappedList="//@consumed.59">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows a user to set the dither mode</toolTipHelpDescription>
    <item name="Disable" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/tc/dithe&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res0,0);&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res0,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/tc/dithe&quot;);&#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;              if (value0 === 0) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value0 == -1){&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }        &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdithermode/0" downWardmappedList="//@consumed.59" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Disable dither</toolTipHelpDescription>
    </item>
    <item name="Change in only PWM period" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/tc/dithe&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res0,3);    &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res0,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/tc/dithe&quot;);&#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;&#xD;&#xA;              if (value0 === 3) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value0 == -1){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }  &#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdithermode/1" downWardmappedList="//@consumed.59" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Change in only PWM period is allowed. DITHE = 0x03</toolTipHelpDescription>
    </item>
    <item name="Change in only duty cycle" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/tc/dithe&quot;);&#xD;&#xA;&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res0,2);&#xD;&#xA;      &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res0,0);&#xD;&#xA;&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/tc/dithe&quot;);&#xD;&#xA;&#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;&#xD;&#xA;              if (value0 === 2) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value0 == -1){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }  &#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdithermode/2" downWardmappedList="//@consumed.59" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Change in only PWM duty cycle is allowed. DITHE = 0x02</toolTipHelpDescription>
    </item>
    <item name="Change in both PWM period and duty cycle" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/tc/dithe&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res0,1);      &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res0,0);&#xD;&#xA;              }              &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res0 = SCM.getResource(&quot;slice/tc/dithe&quot;);&#xD;&#xA;              var value0 = SCM.getIntValue(Res0);&#xD;&#xA;              if (value0 === 1) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value0 == -1){&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdithermode/3" downWardmappedList="//@consumed.59" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Change in both PWM period and duty cycle is allowed. DITHE = 0x01</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="StartApp" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempstart&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempstart&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstart" downWardmappedList="//@consumed.9" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>This allows user to configure whether this app should be started&#xD;
during initialization. The App starting means PWM waveform generation.</toolTipHelpDescription>
    <item name="Start During initialization" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempstart&quot;);&#xD;&#xA;              if(value == 1){&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }        &#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempstart&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if(value == 1){ &#xD;&#xA;                SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwstart/0" downWardmappedList="//@consumed.9" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Start the PWM generation during the Initialization</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Compare Match Interrupt" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempcompmatch&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempcompmatch&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwcomaprematch" downWardmappedList="//@consumed.10" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows user to configure whether compare match interrupt&#xD;
to be enabled during initialization.</toolTipHelpDescription>
    <item name="Enable at initialization" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempcompmatch&quot;);&#xD;&#xA;              if(value == 1){&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }        &#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempcompmatch&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if(value == 1){ &#xD;&#xA;                SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwcomaprematch/0" downWardmappedList="//@consumed.10" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Enable Comapre match interrupt at initialization.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Period Match Interrupt" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempperiodmatch&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempperiodmatch&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwperiodmatch" downWardmappedList="//@consumed.11" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows user to configure whether period match interrupt&#xD;
to be enabled during initialization.</toolTipHelpDescription>
    <item name="Enable at initialization" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempperiodmatch&quot;);&#xD;&#xA;              if(value == 1){&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }        &#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempperiodmatch&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if(value == 1){ &#xD;&#xA;                SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwperiodmatch/0" downWardmappedList="//@consumed.11" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Enable Period match interrupt at initialization.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="External start Interrupt" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempextstart&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempextstart&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstart" downWardmappedList="//@consumed.12" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows user to configure whether external start interrupt&#xD;
to be enabled during initialization.</toolTipHelpDescription>
    <item name="Enable at initialization" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempextstart&quot;);&#xD;&#xA;              if(value == 1){&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }        &#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempextstart&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if(value == 1){ &#xD;&#xA;                SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstart/0" downWardmappedList="//@consumed.12" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Enable External Start (Event 0) interrupt at initialization.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="External stop Interrupt" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempextstop&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempextstop&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstop" downWardmappedList="//@consumed.13" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows user to configure whether external stop interrupt&#xD;
to be enabled during initialization.</toolTipHelpDescription>
    <item name="Enable at initialization" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempextstop&quot;);&#xD;&#xA;              if(value == 1){&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }        &#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_tempextstop&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if(value == 1){ &#xD;&#xA;                SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwextstop/0" downWardmappedList="//@consumed.13" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Enable External stop (Event 1) interrupt at initialization.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Trap Interrupt" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_temptrap&quot;);&#xD;&#xA;              SCM.setIntValue(Res,value);        &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_temptrap&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              SCM.setIntValue(currentResource,value);&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtrap" downWardmappedList="//@consumed.14" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>This allows user to configure whether trap interrupt&#xD;
to be enabled during initialization.</toolTipHelpDescription>
    <item name="Enable at initialization" evalFunction="             &#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_temptrap&quot;);&#xD;&#xA;              if(value == 1){&#xD;&#xA;                SCM.setIntValue(Res,1);&#xD;&#xA;              }        &#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_temptrap&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if(value == 1){ &#xD;&#xA;                SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else{&#xD;&#xA;                SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwtrap/0" downWardmappedList="//@consumed.14" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Enable Trap (Event 2) interrupt at initialization.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:StringParameter" name="CCU8 kernel number" evalFunction="&#xD;&#xA;        function ForwardMapping(){&#xD;&#xA;          var Res = SCM.getResource(&quot;app/pwmsp002/0/slice&quot;);&#xD;&#xA;          var SliceUri = SCM.getStringValue(Res);&#xD;&#xA;        }&#xD;&#xA;        function BackwardMapping(){&#xD;&#xA;          var Res = SCM.getResource(&quot;app/pwmsp002/0/slice&quot;);&#xD;&#xA;          var SliceUri = SCM.getStringValue(Res);&#xD;&#xA;          var Periuri = &quot;http://www.infineon.com/0.1.28/peripheral/ccu8/&quot;;&#xD;&#xA;          var kernelNo = SliceUri.substring(Periuri.length(),SliceUri.indexOf(&quot;/cc8/&quot;));&#xD;&#xA;          SCM.setStringValue(currentResource, kernelNo);&#xD;&#xA;        }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_srccu8kernel">
    <defaultValue xsi:type="ResourceModel:StringValue" value=""/>
    <localValue xsi:type="ResourceModel:StringValue" value=""/>
    <globalValue xsi:type="ResourceModel:StringValue" value=""/>
    <toolTipHelpDescription>Register arguments for the external stop callback function </toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Direct Output Enable" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;pwmsp002_directoutputpadenabledummy&quot;); &#xD;&#xA;          var value = SCM.getIntValue(currentResource);&#xD;&#xA;          SCM.setIntValue(Res, value);&#xD;&#xA;         }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;pwmsp002_directoutputpadenabledummy&quot;); &#xD;&#xA;          var value = SCM.getIntValue(Res); &#xD;&#xA;          SCM.setIntValue(currentResource,value);&#xD;&#xA;        }&#xD;&#xA;" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpadenable" downWardmappedList="//@consumed.2" multipleSelections="true">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>Enables the Direct Ouput Pin and Comsumes the Pin. If &#xD;
not enabled then Port Pin is not consumed</toolTipHelpDescription>
    <item name="Enable" evalFunction="&#xD;&#xA;           function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadenabledummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              if(value == 1 || value == -1)&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(Res, 1);&#xD;&#xA;              }&#xD;&#xA;              else&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(Res, 0);&#xD;&#xA;              }&#xD;&#xA;&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadenabledummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if(value == 1 )&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                  SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA; " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpadenable/0" downWardmappedList="//@consumed.2" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Output Pin is enabled and consumed</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Inverted Output Enable" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadenabledummy&quot;); &#xD;&#xA;          var value = SCM.getIntValue(currentResource);&#xD;&#xA;          SCM.setIntValue(Res, value);&#xD;&#xA;         }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadenabledummy&quot;); &#xD;&#xA;          var value = SCM.getIntValue(Res); &#xD;&#xA;          SCM.setIntValue(currentResource,value);&#xD;&#xA;        }&#xD;&#xA;" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpadenable" downWardmappedList="//@consumed.4" multipleSelections="true">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>Enables the inverted Ouput Pin and Comsumes the Pin. If &#xD;
not enabled then Port Pin is not consumed</toolTipHelpDescription>
    <item name="Enable" evalFunction="&#xD;&#xA;           function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadenabledummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              if(value == 1 || value == -1)&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(Res, 1);&#xD;&#xA;              }&#xD;&#xA;              else&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(Res, 0);&#xD;&#xA;              }&#xD;&#xA;&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadenabledummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if(value == 1 )&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                  SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA; " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpadenable/0" downWardmappedList="//@consumed.4" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Output Pin is enabled and consumed</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Direct Output Characteristics" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;pwmsp002_directoutputpadchardummy&quot;); &#xD;&#xA;          var value = SCM.getIntValue(currentResource);&#xD;&#xA;          SCM.setIntValue(Res, value);&#xD;&#xA;         }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;pwmsp002_directoutputpadchardummy&quot;); &#xD;&#xA;          var value = SCM.getIntValue(Res); &#xD;&#xA;          SCM.setIntValue(currentResource,value);&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpadchar" downWardmappedList="//@consumed.3">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Select Pad Output characteristics for Direct Output Pin</toolTipHelpDescription>
    <item name="Push Pull" evalFunction="&#xD;&#xA;           function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadchardummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              if(value == 1 || value == -1)&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(Res, 0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadchardummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if(value == 0 || value == -1)&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                  SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpadchar/0" downWardmappedList="//@consumed.3" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Direct Output Pin characteristics is Push Pull</toolTipHelpDescription>
    </item>
    <item name="Open Drain" evalFunction="&#xD;&#xA;           function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadchardummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              if(value == 1)&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(Res, 1);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadchardummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if(value == 1)&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                  SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpadchar/1" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
      <toolTipHelpDescription>Direct Output pin characterictic is Open Drain</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Inverted Output Characteristics" evalFunction="&#xD;&#xA;        function ForwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadchardummy&quot;); &#xD;&#xA;          var value = SCM.getIntValue(currentResource);&#xD;&#xA;          SCM.setIntValue(Res, value);&#xD;&#xA;         }&#xD;&#xA;        function BackwardMapping()&#xD;&#xA;        {&#xD;&#xA;          var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadchardummy&quot;); &#xD;&#xA;          var value = SCM.getIntValue(Res); &#xD;&#xA;          SCM.setIntValue(currentResource,value);&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpadchar" downWardmappedList="//@consumed.5">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Select Pad Output characteristics for inverted Output Pin</toolTipHelpDescription>
    <item name="Push Pull" evalFunction="&#xD;&#xA;           function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadchardummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              if(value == 1 || value == -1)&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(Res, 0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadchardummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if(value == 0 || value == -1)&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                  SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpadchar/0" downWardmappedList="//@consumed.5" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>inverted Output Pin characteristics is Push Pull</toolTipHelpDescription>
    </item>
    <item name="Open Drain" evalFunction="&#xD;&#xA;           function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadchardummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              if(value == 1)&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(Res, 1);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadchardummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if(value == 1)&#xD;&#xA;              {&#xD;&#xA;                  SCM.setIntValue(currentResource, 1);&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                  SCM.setIntValue(currentResource, 0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpadchar/1" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
      <toolTipHelpDescription>inverted Output pin characterictic is Open Drain</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Direct Output Pad Class" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;            var value = SCM.getIntValue(currentResource);  &#xD;&#xA;            SCM.setIntValue(Res,value);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;            var value = SCM.getIntValue(Res); &#xD;&#xA;            if (value == -1) {&#xD;&#xA;              SCM.setIntValue(currentResource,0);&#xD;&#xA;            } else {&#xD;&#xA;              SCM.setIntValue(currentResource,value);               &#xD;&#xA;            }   &#xD;&#xA;          }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpadclass" downWardmappedList="//@consumed.0">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <toolTipHelpDescription>Select Pad class for Direct Output Pin</toolTipHelpDescription>
    <item name="A1 (Speed Grade 6 MHz)" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;              SCM.setIntValue(Res1,4);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);     &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpadclass/0" downWardmappedList="//@consumed.112 //@consumed.0" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Pad Class A1</toolTipHelpDescription>
    </item>
    <item name="A1+ (Speed Grade 25 MHz)" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;              SCM.setIntValue(Res1,4);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if (value == 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpadclass/1" downWardmappedList="//@consumed.112 //@consumed.0" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Pad class A1+</toolTipHelpDescription>
    </item>
    <item name="A2 (Speed Grade 40/80 MHz)" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;              SCM.setIntValue(Res1,4);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,2);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if (value == 2) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpadclass/2" downWardmappedList="//@consumed.112 //@consumed.0" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Pad class A2</toolTipHelpDescription>
    </item>
    <item name="Don't Care" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,3);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if (value == 3) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpadclass/3" downWardmappedList="//@consumed.0" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>User is not concerned about Pad Driver strength</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Inverted Output Pad Class" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;            var value = SCM.getIntValue(currentResource);  &#xD;&#xA;            SCM.setIntValue(Res,value);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;            var value = SCM.getIntValue(Res); &#xD;&#xA;            if (value == -1) {&#xD;&#xA;              SCM.setIntValue(currentResource,0);&#xD;&#xA;            } else {&#xD;&#xA;              SCM.setIntValue(currentResource,value);               &#xD;&#xA;            }   &#xD;&#xA;          }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpadclass" downWardmappedList="//@consumed.1">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <toolTipHelpDescription>Select Pad class for Inverted Output Pin</toolTipHelpDescription>
    <item name="A1 (Speed Grade 6 MHz)" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;              SCM.setIntValue(Res1,4);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);     &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpadclass/0" downWardmappedList="//@consumed.113 //@consumed.1" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Pad Class A1</toolTipHelpDescription>
    </item>
    <item name="A1+ (Speed Grade 25 MHz)" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;              SCM.setIntValue(Res1,4);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if (value == 1 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpadclass/1" downWardmappedList="//@consumed.113 //@consumed.1" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Pad class A1+</toolTipHelpDescription>
    </item>
    <item name="A2 (Speed Grade 40/80 MHz)" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;              SCM.setIntValue(Res1,4);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,2);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if (value == 2) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpadclass/2" downWardmappedList="//@consumed.113 //@consumed.1" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Pad class A2</toolTipHelpDescription>
    </item>
    <item name="Don't Care" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,3);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if (value == 3) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpadclass/3" downWardmappedList="//@consumed.1" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>User is not concerned about Pad Driver strength</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Direct Output Driver Mode" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;            var value = SCM.getIntValue(currentResource);  &#xD;&#xA;            SCM.setIntValue(Res,value);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;            var value = SCM.getIntValue(Res); &#xD;&#xA;            if (value == -1) {&#xD;&#xA;              SCM.setIntValue(currentResource,0);&#xD;&#xA;            } else {&#xD;&#xA;              SCM.setIntValue(currentResource,value);               &#xD;&#xA;            }   &#xD;&#xA;          }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpaddrivermode" downWardmappedList="//@consumed.112">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Select Pad driver mode for Direct Output Pin</toolTipHelpDescription>
    <item name="Medium driver" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,4);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;                            var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if(value1 >= 0)&#xD;&#xA;              {&#xD;&#xA;                if (value == 4 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1) {&#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpaddrivermode/0" downWardmappedList="//@consumed.112" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Medium driver is selected</toolTipHelpDescription>
    </item>
    <item name="Weak driver" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;);&#xD;&#xA;                            var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,7);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;                            var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if(value1 >= 0)&#xD;&#xA;              {&#xD;&#xA;                if (value == 7 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpaddrivermode/1" downWardmappedList="//@consumed.112" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Weak driver is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Soft Edge" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,2);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if(value1 >= 1)&#xD;&#xA;              {&#xD;&#xA;                if (value === 2 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpaddrivermode/2" downWardmappedList="//@consumed.112" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Strong driver Soft Edge is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Slow Edge" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);       //0x02&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;                            if(value1 == 1)&#xD;&#xA;              {&#xD;&#xA;                if (value === 1 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpaddrivermode/3" downWardmappedList="//@consumed.112" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:Reserved" value="Reserved"/>
      <toolTipHelpDescription>Strong driver Slow Edge is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Sharp Edge" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);       //0x00&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if(value1 >= 2)&#xD;&#xA;              {&#xD;&#xA;                if (value === 0 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpaddrivermode/4" downWardmappedList="//@consumed.112" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Strong driver Sharp Edge is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Medium Edge" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;);&#xD;&#xA;                            var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,3);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_directoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;                            var Res1 = SCM.getResource(&quot;pwmsp002_directoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;                            if(value1 == 2)&#xD;&#xA;              {&#xD;&#xA;                if (value === 3) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                            }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwdirectoutputpaddrivermode/5" downWardmappedList="//@consumed.112" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:Reserved" value="Reserved"/>
      <toolTipHelpDescription>Strong driver Medium Edge is selected</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Inverted Output Driver Mode" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;            var value = SCM.getIntValue(currentResource);  &#xD;&#xA;            SCM.setIntValue(Res,value);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;            var value = SCM.getIntValue(Res); &#xD;&#xA;            if (value == -1) {&#xD;&#xA;              SCM.setIntValue(currentResource,0);&#xD;&#xA;            } else {&#xD;&#xA;              SCM.setIntValue(currentResource,value);               &#xD;&#xA;            }   &#xD;&#xA;          }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpaddrivermode" downWardmappedList="//@consumed.113">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Select Pad driver mode for Inverted Output Pin</toolTipHelpDescription>
    <item name="Medium driver" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,4);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;                            var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if(value1 >= 0)&#xD;&#xA;              {&#xD;&#xA;                if (value == 4 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else if (value == -1) {&#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpaddrivermode/0" downWardmappedList="//@consumed.113" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Medium driver is selected</toolTipHelpDescription>
    </item>
    <item name="Weak driver" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;);&#xD;&#xA;                            var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,7);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;                            var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if(value1 >= 0)&#xD;&#xA;              {&#xD;&#xA;                if (value == 7 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpaddrivermode/1" downWardmappedList="//@consumed.113" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Weak driver is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Soft Edge" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,2);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if(value1 >= 1)&#xD;&#xA;              {&#xD;&#xA;                if (value === 2 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpaddrivermode/2" downWardmappedList="//@consumed.113" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Strong driver Soft Edge is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Slow Edge" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,1);       //0x02&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;                            if(value1 == 1)&#xD;&#xA;              {&#xD;&#xA;                if (value === 1 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpaddrivermode/3" downWardmappedList="//@consumed.113" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:Reserved" value="Reserved"/>
      <toolTipHelpDescription>Strong driver Slow Edge is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Sharp Edge" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);       //0x00&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if(value1 >= 2)&#xD;&#xA;              {&#xD;&#xA;                if (value === 0 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpaddrivermode/4" downWardmappedList="//@consumed.113" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Strong driver Sharp Edge is selected</toolTipHelpDescription>
    </item>
    <item name="Strong Driver,Medium Edge" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;);&#xD;&#xA;                            var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,3);       &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;pin_invertedoutput/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;                            var Res1 = SCM.getResource(&quot;pwmsp002_invertedoutputpadclassdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;                            if(value1 == 2)&#xD;&#xA;              {&#xD;&#xA;                if (value === 3) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;                            }else{&#xD;&#xA;                var reserved = SCM.getReserverd();&#xD;&#xA;                SCM.setValue(currentResource,reserved);&#xD;&#xA;              } &#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_erwinvertedoutputpaddrivermode/5" downWardmappedList="//@consumed.113" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:Reserved" value="Reserved"/>
      <toolTipHelpDescription>Strong driver Medium Edge is selected</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This function is used to initialize the APP" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_init" APIName="PWMSP002_Init">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This will reset the CCU8_CCy slice registers to default state." URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_deinit" APIName="PWMSP002_Deinit">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This will start the Single Phase PWM with Dead Time APP which will in turn start the CCU8_CCy slice." URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_start" APIName="PWMSP002_Start">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This will stop the Single Phase PWM with Dead Time APP which will in turn stop the CCU8_CCy slice." URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_stop" APIName="PWMSP002_Stop">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This function will modify the duty cycle of the output waveform which will change the pulse width. Duty cycle is given in %" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_setdutycycle" APIName="PWMSP002_SetDutyCycle">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This will modify the PWM frequency.Period value is given in terms of the period register" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_setperiod" APIName="PWMSP002_SetPwmFreq">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This function will modify the duty cycle of the output waveform which will change the pulse width.Duty cycle is given in terms of the compare register value" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_setcompare" APIName="PWMSP002_SetDutyCycle">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This will modify the PWM frequency which is given in Hertz" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_setpwmfreq" APIName="PWMSP002_SetPwmFreq">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This will update the timer register value when timer is stopped. This is used to set the starting value of the timer." URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_settimerval" APIName="PWMSP002_SetTimerVal">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This will request the update of the period register, compare register values from the respective shadow transfers." URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_swrequestshadowtransfer" APIName="PWMSP002_SWRequestShadowTransfer">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This function will read the period register value." URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_getperiodreg" APIName="PWMSP002_GetPeriodReg">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This function will reset the trap flag by checking whether trap condition is reset." URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_resettrapflag" APIName="PWMSP002_ResetTrapFlag">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This function will read the timer values of compare register and period register." URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_gettimerregsval" APIName="PWMSP002_GetTimerRegsVal">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This function will read the timer status whether timer is running or idle." URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_gettimerstatus" APIName="PWMSP002_GetTimerStatus">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:API" description="This is the interrupt handler called from NVIC. In this function the callback registered by the top level App would be called." URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_interrupthandler" APIName="PWMSP002_InterruptHandler">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_directoutputpadclassdummy" upWardMappingList="//@provided.72 //@provided.72/@item.0 //@provided.72/@item.1 //@provided.72/@item.2 //@provided.72/@item.3 //@provided.74/@item.0 //@provided.74/@item.1 //@provided.74/@item.2 //@provided.74/@item.3 //@provided.74/@item.4 //@provided.74/@item.5" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_invertedoutputpadclassdummy" upWardMappingList="//@provided.73 //@provided.73/@item.0 //@provided.73/@item.1 //@provided.73/@item.2 //@provided.73/@item.3 //@provided.75/@item.0 //@provided.75/@item.1 //@provided.75/@item.2 //@provided.75/@item.3 //@provided.75/@item.4 //@provided.75/@item.5" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_directoutputpadenabledummy" upWardMappingList="//@provided.68 //@provided.68/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_directoutputpadchardummy" upWardMappingList="//@provided.70 //@provided.70/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_invertedoutputpadenabledummy" upWardMappingList="//@provided.69 //@provided.69/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_invertedoutputpadchardummy" upWardMappingList="//@provided.71 //@provided.71/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_temptrapconf" upWardMappingList="//@provided.32" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_temptrapexittime" upWardMappingList="//@provided.33" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmmp001_tempdeadconf" upWardMappingList="//@provided.58 //@provided.58/@item.0 //@provided.58/@item.1 //@provided.58/@item.2 //@provided.58/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="4"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempstart" upWardMappingList="//@provided.61 //@provided.61/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempcompmatch" upWardMappingList="//@provided.62 //@provided.62/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempperiodmatch" upWardMappingList="//@provided.63 //@provided.63/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempextstart" upWardMappingList="//@provided.64 //@provided.64/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempextstop" upWardMappingList="//@provided.65 //@provided.65/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_temptrap" upWardMappingList="//@provided.66 //@provided.66/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempfalldeadtime" upWardMappingList="//@provided.52 //@provided.53 //@provided.54 //@provided.55 //@provided.56 //@provided.57" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="3fc3333333333333"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3fc3333333333333"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_temprisedeadtime" upWardMappingList="//@provided.51 //@provided.53 //@provided.54 //@provided.55 //@provided.56 //@provided.57" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="3fc3333333333333"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3fc3333333333333"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempresolution" upWardMappingList="//@provided.36 //@provided.37 //@provided.38" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="14"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="14"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempcr1" upWardMappingList="//@provided.43 //@provided.44 //@provided.45" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempcr2" upWardMappingList="//@provided.43 //@provided.44 //@provided.45" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempfreq" upWardMappingList="//@provided.39 //@provided.43 //@provided.44 //@provided.45 //@provided.40 //@provided.41 //@provided.42" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="4650"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4650"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_tempduty" upWardMappingList="//@provided.43 //@provided.44 //@provided.45" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pwmsp002_chkval" isSystemDefined="true">
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../CCU81/CCU81_1.dd#//@provided.55"/>
    <requiredResource uriString="peripheral/ccu8/*/cc8/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;          var Res0 = Solver.getResource(&quot;pwmsp002_irtimerconcat&quot;);&#xD;&#xA;          var tc = Solver.getIntValue(Res0);&#xD;&#xA;          if (tc == 1) {&#xD;&#xA;            return true; &#xD;&#xA;          } &#xD;&#xA;          return false;&#xD;&#xA;        }" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice1">
    <requiredResource uriString="peripheral/ccu8/*/cc8/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() &#xD;&#xA;        {&#xD;&#xA;          var Res0 = Solver.getResource(&quot;pwmsp002_erwdirectoutputpadenable&quot;);&#xD;&#xA;          var OutputEnable = Solver.getIntValue(Res0);&#xD;&#xA;          if (OutputEnable == 1)&#xD;&#xA;          {&#xD;&#xA;            return true; &#xD;&#xA;          } &#xD;&#xA;          return false;&#xD;&#xA;        }" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pin_directoutput">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../P1/P1_1.dd#//@provided.65"/>
    <requiredResource uriString="port/p/1/pad/4" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() &#xD;&#xA;        {&#xD;&#xA;          var Res0 = Solver.getResource(&quot;pwmsp002_erwinvertedoutputpadenable&quot;);&#xD;&#xA;          var OutputEnable = Solver.getIntValue(Res0);&#xD;&#xA;          if (OutputEnable == 1)&#xD;&#xA;          {&#xD;&#xA;            return true; &#xD;&#xA;          } &#xD;&#xA;          return false;&#xD;&#xA;        }" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pin_invertedoutput">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../P1/P1_1.dd#//@provided.68"/>
    <requiredResource uriString="port/p/1/pad/10" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/ccu8globalapp">
    <downWardmappedList xsi:type="ResourceModel:App" href="../../CCU8GLOBAL/1.0.18/ccu8global_1.app#/"/>
    <requiredResource uriString="app/ccu8global/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice1/gp0_unsync" isSystemDefined="true"/>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/st" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.56"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pin_directoutput/pad" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../P1/P1_1.dd#//@provided.66"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/gp0_unsync" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.57"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/e0as" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.58"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/pmus_omds" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.59"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/stb" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.60"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/e2as" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.61"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/global_signal" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.62"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pin_invertedoutput/pad" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../P1/P1_1.dd#//@provided.69"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/gp2_unsync" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.63"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/gp1_unsync" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.64"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/gidls_ssi" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.65"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/gidlc_csi" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.66"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/gcss_sse" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.67"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/gcss_sdse" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.68"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/gcss_spse" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.69"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/ins" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.70"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/ins/ev0em" upWardMappingList="//@provided.28 //@provided.28/@item.0 //@provided.28/@item.1 //@provided.28/@item.2 //@provided.28/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.70/@bitFields.3"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/ins/ev1em" upWardMappingList="//@provided.29 //@provided.29/@item.0 //@provided.29/@item.1 //@provided.29/@item.2 //@provided.29/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.70/@bitFields.4"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/ins/ev2lm" upWardMappingList="//@provided.35 //@provided.35/@item.0 //@provided.35/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.70/@bitFields.8"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/cmc" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.71"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/cmc/tce" upWardMappingList="//@provided.39 //@provided.41 //@provided.42" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.71/@bitFields.11"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tcst" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.72"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tcset" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.73"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tcclr" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.74"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tc" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="18000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.75"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="18000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tc/strm" upWardMappingList="//@provided.30 //@provided.30/@item.0 //@provided.30/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.75/@bitFields.8"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tc/endm" upWardMappingList="//@provided.31 //@provided.31/@item.0 //@provided.31/@item.1 //@provided.31/@item.2" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.75/@bitFields.7"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tc/tssm" upWardMappingList="//@provided.21 //@provided.21/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.75/@bitFields.1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tc/tcm" upWardMappingList="//@provided.23 //@provided.23/@item.0 //@provided.23/@item.1 //@provided.39 //@provided.40 //@provided.41 //@provided.42 //@provided.43 //@provided.44 //@provided.45" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.75/@bitFields.0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tc/dithe" upWardMappingList="//@provided.60 //@provided.60/@item.0 //@provided.60/@item.1 //@provided.60/@item.2 //@provided.60/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.75/@bitFields.11"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tc/trape0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.75/@bitFields.14"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tc/trape1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.75/@bitFields.15"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tc/trpse" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.75/@bitFields.18"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/tc/trpsw" upWardMappingList="//@provided.34 //@provided.34/@item.0 //@provided.34/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.75/@bitFields.19"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/psl" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.76"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/psl/psl11" upWardMappingList="//@provided.24 //@provided.24/@item.0 //@provided.24/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.76/@bitFields.0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/psl/psl12" upWardMappingList="//@provided.25 //@provided.25/@item.0 //@provided.25/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.76/@bitFields.1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dit" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.77"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dits" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.78"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dits/dcvs" upWardMappingList="//@provided.59" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.78/@bitFields.0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/psc" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.79"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/psc/psiv" upWardMappingList="//@provided.36 //@provided.37 //@provided.38 //@provided.40 //@provided.41 //@provided.42 //@provided.43 //@provided.44 //@provided.45 //@provided.53 //@provided.54 //@provided.55 //@provided.56 //@provided.57" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.79/@bitFields.0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/fpc" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.80"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/fpcs" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.81"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/pr" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.82"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/prs" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.83"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/prs/prs" upWardMappingList="//@provided.39 //@provided.40 //@provided.41 //@provided.42" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.83/@bitFields.0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice1/prs/prs" upWardMappingList="//@provided.39" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/cr1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.84"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/cr1s" upWardMappingList="//@provided.43 //@provided.44 //@provided.45" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.85"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice1/cr1s" isSystemDefined="true"/>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/cr2" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.86"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/cr2s" upWardMappingList="//@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.87"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice1/cr2s" isSystemDefined="true"/>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/chc" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.88"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/chc/ase" upWardMappingList="//@provided.22 //@provided.22/@item.0 //@provided.22/@item.1 //@provided.39 //@provided.40 //@provided.41 //@provided.42 //@provided.43 //@provided.44 //@provided.45" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.88/@bitFields.0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/chc/ocs1" upWardMappingList="//@provided.26 //@provided.26/@item.0 //@provided.26/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.88/@bitFields.1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/chc/ocs2" upWardMappingList="//@provided.27 //@provided.27/@item.0 //@provided.27/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.88/@bitFields.2"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dtc" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.89"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dtc/dte1" upWardMappingList="//@provided.58/@item.0 //@provided.58/@item.1 //@provided.58/@item.2 //@provided.58/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.89/@bitFields.0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dtc/dcen1" upWardMappingList="//@provided.58/@item.0 //@provided.58/@item.1 //@provided.58/@item.2 //@provided.58/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.89/@bitFields.2"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dtc/dcen2" upWardMappingList="//@provided.58/@item.0 //@provided.58/@item.1 //@provided.58/@item.2 //@provided.58/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.89/@bitFields.3"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dtc/dtcc" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.89/@bitFields.6"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dc1r" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.90"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dc1r/dt1r" upWardMappingList="//@provided.53 //@provided.54 //@provided.55 //@provided.56 //@provided.57" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.90/@bitFields.0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dc1r/dt1f" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.90/@bitFields.1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/dc2r" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.91"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/timer" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.92"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/c0v" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.93"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/c1v" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.94"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/c2v" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.95"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/c3v" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.96"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/ints" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.97"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/inte" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.98"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/inte/pme" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.98/@bitFields.0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/inte/cmu1e" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.98/@bitFields.2"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/inte/e0ae" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.98/@bitFields.6"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/inte/e1ae" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.98/@bitFields.7"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/inte/e2ae" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../CCU81/CCU81_1.dd#//@provided.98/@bitFields.8"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/sws" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.99"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/swr" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../CCU81/CCU81_1.dd#//@provided.100"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/ccu8globalapp/ccu8global_irclock" upWardMappingList="//@provided.36 //@provided.37 //@provided.38 //@provided.39 //@provided.40 //@provided.41 //@provided.42 //@provided.43 //@provided.44 //@provided.45 //@provided.53 //@provided.54 //@provided.55 //@provided.56 //@provided.57" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <downWardmappedList xsi:type="ResourceModel:IntegerParameter" href="../../CCU8GLOBAL/1.0.18/ccu8global_1.app#//@provided.2"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="78"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pin_directoutput/pdr_pd" upWardMappingList="//@provided.72/@item.0 //@provided.72/@item.1 //@provided.72/@item.2 //@provided.74 //@provided.74/@item.0 //@provided.74/@item.1 //@provided.74/@item.2 //@provided.74/@item.3 //@provided.74/@item.4 //@provided.74/@item.5" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../P1/P1_1.dd#//@provided.67"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/pin_invertedoutput/pdr_pd" upWardMappingList="//@provided.73/@item.0 //@provided.73/@item.1 //@provided.73/@item.2 //@provided.75 //@provided.75/@item.0 //@provided.75/@item.1 //@provided.75/@item.2 //@provided.75/@item.3 //@provided.75/@item.4 //@provided.75/@item.5" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../P1/P1_1.dd#//@provided.70"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/out0" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.101"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/concat_bus_in" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.102"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/e1as" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.103"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/cmd1s_cmu1s" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.104"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice1/concat_bus_in" isSystemDefined="true"/>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice1/gp1_unsync" isSystemDefined="true"/>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice1/concat_bus_out" isSystemDefined="true"/>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/sta" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.105"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/slice/out1" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../CCU81/CCU81_1.dd#//@provided.106"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.32/app/pwmsp002/5/SignalConfigurator_1134423760" bindingMode="READ" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:App" href="../../NVIC002/1.0.26/nvic002_19.app#/"/>
    <requiredResource uriString="app/nvic002/19" uriType="LOCALTYPE"/>
  </consumed>
  <propertyConstants name="uridevice" value="device">
    <propertyConstants name="uriPeri_CCU8" value="peripheral/ccu8/0/">
      <propertyConstants name="uriPWMSP002App" value="app/pwmsp002/"/>
    </propertyConstants>
  </propertyConstants>
  <categoryDescription description="Peripheral related Apps" name="Peripheral Specific Apps">
    <subCategory description="Timer-Capture-Compare" name="Timer-Capture-Compare">
      <subCategory description="CAPCOM8" name="Capture/Compare Unit 8 (CAPCOM8)"/>
    </subCategory>
  </categoryDescription>
  <categoryDescription description="Basic Applications" name="Basic Applications">
    <subCategory description="Apps related to Capture/Compare" name="Time Processing">
      <subCategory description="PWM waveform generation" name="PWM Generation"/>
    </subCategory>
  </categoryDescription>
  <manifestInfo version="1.0.32">
    <keywords>Single Phase PWM with Dead time</keywords>
    <keywords>Duty Cycle</keywords>
    <keywords>PWM period</keywords>
    <keywords>CCU8</keywords>
    <keywords>PWMSP002</keywords>
    <keywords>Dead Time</keywords>
    <properties xsi:type="ResourceModel:AppProperties_1_0" initProvider="true" isIOApp="true"/>
  </manifestInfo>
  <datagenerate fileName="PWMSP002.h" fileType="HFILE" templateFileName="PWMSP002.hdt" templateEngine="NONE" fileAction="COPY"/>
  <datagenerate fileName="PWMSP002.c" templateFileName="PWMSP002c.jet"/>
  <datagenerate fileName="PWMSP002_Conf.c" templateFileName="PWMSP002Confc.jet"/>
  <datagenerate fileName="PWMSP002_Conf.h" fileType="HFILE" templateFileName="PWMSP002Confh.jet"/>
  <connections sourceSignal="ccu8globalapp/ccu8global_globalsignal_vs" targetSignal="app/pwmsp002/5/pwmsp002_globalsignal_vs"/>
  <connections sourceSignal="app/pwmsp002/5/pwmsp002_out0_vs" targetSignal="app/pwmsp002/5/pwmsp002_directoutput_vs"/>
  <connections sourceSignal="app/pwmsp002/5/pwmsp002_out1_vs" targetSignal="app/pwmsp002/5/pwmsp002_invertedoutput_vs"/>
  <connections sourceSignal="app/pwmsp002/5/pwmsp002_output_concat_vs" targetSignal="app/pwmsp002/5/pwmsp002_input1_concat_vs"/>
  <connections sourceSignal="app/pwmsp002/5/pwmsp002_trapevent_vs" targetSignal="SignalConfigurator_1134423760/nvic002_vs" isSystemDefined="false"/>
  <softwareIdList>45.0.1</softwareIdList>
  <softwareIdList>45.0.2</softwareIdList>
  <softwareIdList>45.0.3</softwareIdList>
  <softwareIdList>45.2.3</softwareIdList>
  <softwareIdList>45.4.2</softwareIdList>
  <softwareIdList>45.4.3</softwareIdList>
  <softwareIdList>45.0200.1</softwareIdList>
  <softwareIdList>45.0200.2</softwareIdList>
  <softwareIdList>45.0200.3</softwareIdList>
  <softwareIdList>45.0202.3</softwareIdList>
  <softwareIdList>45.0204.3</softwareIdList>
  <softwareIdList>45.0204.2</softwareIdList>
  <softwareIdList>44.0.3</softwareIdList>
  <softwareIdList>44.00.5</softwareIdList>
  <softwareIdList>44.02.3</softwareIdList>
  <softwareIdList>44.02.5</softwareIdList>
  <softwareIdList>42.00.5</softwareIdList>
  <softwareIdList>42.0.6</softwareIdList>
  <softwareIdList>42.04.5</softwareIdList>
  <softwareIdList>42.04.6</softwareIdList>
  <softwareIdList>13.0102.7</softwareIdList>
  <softwareIdList>13.0101.9</softwareIdList>
  <softwareIdList>13.0101.7</softwareIdList>
  <softwareIdList>42.0200.5</softwareIdList>
  <softwareIdList>42.0204.5</softwareIdList>
  <softwareIdList>42.0204.6</softwareIdList>
  <softwareIdList>42.0200.6</softwareIdList>
  <softwareIdList>42.0208.6</softwareIdList>
  <softwareIdList>44.0200.5</softwareIdList>
  <softwareIdList>44.0202.3</softwareIdList>
  <softwareIdList>44.0202.5</softwareIdList>
  <softwareIdList>44.0200.3</softwareIdList>
  <softwareIdList>45.0300.1</softwareIdList>
  <softwareIdList>45.0300.3</softwareIdList>
  <softwareIdList>45.0302.3</softwareIdList>
  <softwareIdList>45.0304.2</softwareIdList>
  <softwareIdList>45.0300.2</softwareIdList>
  <softwareIdList>45.0304.3</softwareIdList>
  <softwareIdList>13.0101.10</softwareIdList>
  <softwareIdList>13.0101.11</softwareIdList>
  <softwareIdList>13.0102.10</softwareIdList>
  <softwareIdList>13.0102.11</softwareIdList>
  <softwareIdList>13.0102.9</softwareIdList>
</ResourceModel:App>
