<?xml version="1.0" encoding="ASCII"?>
<ResourceModel:App xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ResourceModel="http://www.infineon.com/Davex/Resource.ecore" name="CLK001" description="App to configure System&#xA; and Peripheral Clocks." descriptionURL="/doc/html/group___c_l_k001_app.html" mode="SHARABLE" URI="http://www.infineon.com/1.0.44/app/clk001/0">
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CCU8GLOBAL/1.0.20/ccu8global_0.app#//@consumed.1"/>
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CCU8GLOBAL/1.0.20/ccu8global_1.app#//@consumed.1"/>
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../ADCGLOB001/1.0.28/adcglob001_0.app#//@consumed.12"/>
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../UART001/1.0.24/uart001_0.app#//@consumed.3"/>
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CANGLOBAL/1.0.12/canglobal_0.app#//@consumed.3"/>
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../USBLD001/1.0.18/usbld001_0.app#//@consumed.3"/>
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../RTC001/1.0.32/rtc001_0.app#//@consumed.4"/>
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../SYSTM001/1.0.18/systm001_0.app#//@consumed.2"/>
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../SPI001/1.0.24/spi001_0.app#//@consumed.27"/>
  <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CCU4GLOBAL/1.0.22/ccu4global_0.app#//@consumed.1"/>
  <provided xsi:type="ResourceModel:VirtualSignal" name="Perbridge (fPB) Clock" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_fpb_vs" requiredSignalResource="perbridge/fpb">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="CCU Clock" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_ccu_fccu_vs" requiredSignalResource="ccu/fccu">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="External Clock" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_extclk_vs" requiredSignalResource="rgextclk/extclk">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:VirtualSignal" name="External Clock Pin" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_extclkpin_vs" requiredSignalResource="clk_extpin/pad">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
  </provided>
  <provided xsi:type="ResourceModel:Parameter" name="Backup Actual System frequency" description="Backup Actual System Frequency" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_actualsysfreq">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
    <toolTipHelpDescription>Actual Back Up System Frequency</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="System clock source fsys" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwsystemclocksource">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>System clock source selection</toolTipHelpDescription>
    <item name="PLL" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                   &#x9;&#x9;&#x9;   &#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;            var value = SCM.getIntValue(Res);&#xD;&#xA;                                if (value == 1)&#xD;&#xA;                                {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;              SCM.setIntValue(currentResource,1);&#xD;&#xA;                                }&#xD;&#xA;                                else if(value == -1)&#xD;&#xA;                                {&#xD;&#xA;                                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                                }&#xD;&#xA;                                else&#xD;&#xA;                                {&#xD;&#xA;                                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwsystemclocksource/0" downWardmappedList="//@consumed.38" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>System Frequency derived from PLL.</toolTipHelpDescription>
    </item>
    <item name="Back Up Clock Source(F_OFI)" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                   &#x9;&#x9;&#x9;   &#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;            var value = SCM.getIntValue(Res);&#xD;&#xA;                                if (value == 0)&#xD;&#xA;                                {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;              SCM.setIntValue(currentResource,1);&#xD;&#xA;                                }&#xD;&#xA;                                else&#xD;&#xA;                                {&#xD;&#xA;                                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwsystemclocksource/1" downWardmappedList="//@consumed.38" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>System frequency derived from Back Up Clock.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="PLL Clock Source Selection" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwpllclksource">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <item name="External OSC (OSC_HP)" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                                var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;                                    SCM.setIntValue(dummyres,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vcotarget = 480;&#xD;&#xA;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fptarget = 16;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;        &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var clkcpu = SCM.getIntValue(tempRes); &#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;&#x9;vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    &#x9;&#x9;&#x9;&#x9;vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9; vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res2,ndiv);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;      var Intvalue = osc; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;      SCM.setIntValue(Res,Intvalue);&#xD;&#xA;                var usbndivres = SCM.getResource(&quot;usb/usbpllcon/ndiv&quot;); &#xD;&#xA;                var usbndiv = SCM.getIntValue(usbndivres); &#xD;&#xA;                var targetvco = 384;&#xD;&#xA;                usbndiv = (targetvco/(Intvalue/2));&#xD;&#xA;                SCM.setIntValue(usbndivres,usbndiv);&#xD;&#xA;                &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (dummyval === 1 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (dummyval == -1 ){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwpllclksource/0" downWardmappedList="//@consumed.2 //@consumed.36 //@consumed.31 //@consumed.32 //@consumed.34 //@consumed.53" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>High speed crystal oscillator</toolTipHelpDescription>
    </item>
    <item name="External Digital Clock input" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                                var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;                                    SCM.setIntValue(dummyres,2);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vcotarget = 480;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fptarget = 16;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;        &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var clkcpu = SCM.getIntValue(tempRes); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(tempRes,clkcpu);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    &#x9;&#x9;&#x9;&#x9;vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    &#x9;&#x9;&#x9;&#x9;vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9; vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res2,ndiv);&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;                &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;      var Intvalue = osc; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;      SCM.setIntValue(Res,Intvalue);&#xD;&#xA;                var usbndivres = SCM.getResource(&quot;usb/usbpllcon/ndiv&quot;); &#xD;&#xA;                var usbndiv = SCM.getIntValue(usbndivres); &#xD;&#xA;                var targetvco = 384;&#xD;&#xA;                usbndiv = (targetvco/(Intvalue/2));&#xD;&#xA;                SCM.setIntValue(usbndivres,usbndiv);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                                var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (dummyval == 2 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwpllclksource/1" downWardmappedList="//@consumed.36" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>External Digital Clock input</toolTipHelpDescription>
    </item>
    <item name="Back Up Clock Source(F_OFI)" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                                var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;                                    SCM.setIntValue(dummyres,3);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vcotarget = 480;&#xD;&#xA;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fptarget = 16;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;        &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var clkcpu = SCM.getIntValue(tempRes); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(tempRes,clkcpu);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;&#x9; vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    &#x9;&#x9;&#x9;&#x9;vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9; vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res2,ndiv);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (dummyval === 3 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwpllclksource/2" downWardmappedList="//@consumed.36" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Back Up Clock F_OFI is Selected</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="PLL Operating Mode" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwoperatingmode">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>Operating MOde Selection of PLL</toolTipHelpDescription>
    <item name="Normal Mode" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                   &#x9;&#x9;&#x9;   &#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ActFreqSysRes = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;                   &#x9;&#x9;&#x9;   &#x9;var ActFreqSysvalue = SCM.getIntValue(ActFreqSysRes);&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ActFreqCPURes = SCM.getResource(&quot;clk001_iroActualFreqCPU&quot;);&#xD;&#xA;//                   &#x9;&#x9;&#x9;   &#x9;var ActFreqCPUvalue = SCM.getIntValue(ActFreqCPURes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;                                    k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                                    SCM.setIntValue(k1res,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;            var value = SCM.getIntValue(Res);&#xD;&#xA;                                if (value == 0)&#xD;&#xA;                                {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;              SCM.setIntValue(currentResource,1);&#xD;&#xA;                                }&#xD;&#xA;                                else if(value == -1)&#xD;&#xA;                                {&#xD;&#xA;                                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                                }&#xD;&#xA;                                else&#xD;&#xA;                                {&#xD;&#xA;                                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwoperatingmode/0" downWardmappedList="//@consumed.33 //@consumed.30" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Normal Mode, VCO is not Bypassed</toolTipHelpDescription>
    </item>
    <item name="Prescaler Mode" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var Res = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ActFreqSysRes = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;                   &#x9;&#x9;&#x9;   &#x9;var ActFreqSysvalue = SCM.getIntValue(ActFreqSysRes);&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ActFreqCPURes = SCM.getResource(&quot;clk001_iroActualFreqCPU&quot;);&#xD;&#xA;//                   &#x9;&#x9;&#x9;   &#x9;var ActFreqCPUvalue = SCM.getIntValue(ActFreqCPURes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   if (value == 1 )&#xD;&#xA;                               {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(Res,1);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   }&#xD;&#xA;                               else if (value === 0) &#xD;&#xA;                               {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   }&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;            var value = SCM.getIntValue(Res);&#xD;&#xA;                                if (value == 1)&#xD;&#xA;                                {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;              SCM.setIntValue(currentResource,1);&#xD;&#xA;                                }&#xD;&#xA;                                else&#xD;&#xA;                                {&#xD;&#xA;                                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwoperatingmode/1" downWardmappedList="//@consumed.30" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Prescaler Mode,VCO is Bypassed</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Back Up Clock Trimming Option" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_clksourceconf">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>Clock source configuaration for Main PLL</toolTipHelpDescription>
    <item name="BackUp Clock Automatic Adjustment via OSC_SI" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                            var Res2 = SCM.getResource(&quot;hibernate/pwrset/hib&quot;); &#xD;&#xA;                            var value2 = SCM.getIntValue(Res2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;                            var stdbyres = SCM.getResource(&quot;rtcclksel/hcu/hdcr/stdbysel&quot;); &#xD;&#xA;                            var stdby = SCM.getIntValue(stdbyres); &#xD;&#xA;                            if(value=== 1)&#xD;&#xA;                            {  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(Res,1);&#xD;&#xA;                              SCM.setIntValue(Res2,1);&#xD;&#xA;                              SCM.setIntValue(stdbyres,0);&#xD;&#xA;                            }&#xD;&#xA;                            else&#xD;&#xA;                            { &#xD;&#xA;                              SCM.setIntValue(Res,1);&#xD;&#xA;                            }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) &#xD;&#xA;                            {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;                                &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} &#xD;&#xA;                            else if (value === 1) &#xD;&#xA;                            {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                            else&#xD;&#xA;                            {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_clksourceconf/0" downWardmappedList="//@consumed.4 //@consumed.57 //@consumed.59" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Setting this bit will enable automatic adjustment of the fOFI clock with fSTDBY clock used as reference clock.
 fSTDBY is fOSC.</toolTipHelpDescription>
    </item>
    <item name="BackUp Clock Automatic Adjustment via RTC XTAL OSC ULP" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                            var Res1 = SCM.getResource(&quot;hibernate/pwrset/hib&quot;); &#xD;&#xA;                            var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;                            var stdbyres = SCM.getResource(&quot;rtcclksel/hcu/hdcr/stdbysel&quot;); &#xD;&#xA;                            var stdby = SCM.getIntValue(stdbyres);&#xD;&#xA;                            if(value=== 1)&#xD;&#xA;                            {  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(Res,2);&#xD;&#xA;                              SCM.setIntValue(Res1,1);&#xD;&#xA;                              SCM.setIntValue(stdbyres,1);&#xD;&#xA;                            }&#xD;&#xA;                            else&#xD;&#xA;                            { &#xD;&#xA;                              SCM.setIntValue(Res,1);&#xD;&#xA;                            }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;                            if (value === 2) &#xD;&#xA;                            {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                            else&#xD;&#xA;                            {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_clksourceconf/1" downWardmappedList="//@consumed.4" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Setting this bit will enable automatic adjustment of the fOFI clock with fSTDBY clock used as reference clock.
 fSTDBY is fULP.</toolTipHelpDescription>
    </item>
    <item name="Backup Clock Factory Caliberated" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                            var Res2 = SCM.getResource(&quot;hibernate/pwrset/hib&quot;); &#xD;&#xA;                            var value2 = SCM.getIntValue(Res2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;                            var stdbyres = SCM.getResource(&quot;rtcclksel/hcu/hdcr/stdbysel&quot;); &#xD;&#xA;                            var stdby = SCM.getIntValue(stdbyres);&#xD;&#xA;                            if(value=== 1)&#xD;&#xA;                            {  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(Res,3);&#xD;&#xA;                              SCM.setIntValue(Res2,0);&#xD;&#xA;                              SCM.setIntValue(stdbyres,0);&#xD;&#xA;                            }&#xD;&#xA;                            else&#xD;&#xA;                            { &#xD;&#xA;                              SCM.setIntValue(Res,1);&#xD;&#xA;                            }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;                            if (value === 3) &#xD;&#xA;                            {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                            else&#xD;&#xA;                            {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_clksourceconf/2" downWardmappedList="//@consumed.4" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Force adjustment of the internal oscillator with the firmware defined value.</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Backup Clock Frequency" description="Backup Actual Frequency" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_bkupactualfreqdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,24);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_bkupactualfreqdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwbkupactualfreq" downWardmappedList="//@consumed.5" maxValue="24" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="18"/>
    <localValue xsi:type="ResourceModel:StringValue" value="18"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="18"/>
    <toolTipHelpDescription>Actual Back Up Clock Frequency</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Enable advanced setting" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_advancedsetting" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
    <toolTipHelpDescription>Enable advanced setting</toolTipHelpDescription>
    <item name="Enable advanced setting" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_advancedsetting/0" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
      <toolTipHelpDescription>Enable advanced setting</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="N Div" description="N Div" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                    var extoscres = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;                    var extosc = SCM.getIntValue(extoscres);&#xD;&#xA;                    var tmposcres = SCM.getResource(&quot;clk001_tempextoscfreq&quot;);&#xD;&#xA;                    var tmpextosc = SCM.getIntValue(tmposcres); &#xD;&#xA;                    var tmpdigres = SCM.getResource(&quot;clk001_tempdigipfreq&quot;);&#xD;&#xA;                    var tmpextdig = SCM.getIntValue(tmpdigres); &#xD;&#xA;                    var extdigres = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;                    var extdig = SCM.getIntValue(extdigres); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(currentResource); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,ndiv);&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwn" downWardmappedList="//@consumed.34" maxValue="128" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="40"/>
    <localValue xsi:type="ResourceModel:StringValue" value="40"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="28"/>
    <toolTipHelpDescription>fPLL = (N * fOSC)/(P * K2)</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="P Div" description="P Div" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                    var extoscres = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;                    var extosc = SCM.getIntValue(extoscres);&#xD;&#xA;                    var tmposcres = SCM.getResource(&quot;clk001_tempextoscfreq&quot;);&#xD;&#xA;                    var tmpextosc = SCM.getIntValue(tmposcres); &#xD;&#xA;                    var tmpdigres = SCM.getResource(&quot;clk001_tempdigipfreq&quot;);&#xD;&#xA;                    var tmpextdig = SCM.getIntValue(tmpdigres); &#xD;&#xA;                    var extdigres = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;                    var extdig = SCM.getIntValue(extdigres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(currentResource); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,pdiv);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwp" downWardmappedList="//@consumed.31" maxValue="16" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>fPLL = (N * fOSC)/(P * K2)</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="K2 Div" description="K2 Div" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                    var extoscres = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;                    var extosc = SCM.getIntValue(extoscres);&#xD;&#xA;                    var tmposcres = SCM.getResource(&quot;clk001_tempextoscfreq&quot;);&#xD;&#xA;                    var tmpextosc = SCM.getIntValue(tmposcres); &#xD;&#xA;                    var tmpdigres = SCM.getResource(&quot;clk001_tempdigipfreq&quot;);&#xD;&#xA;                    var tmpextdig = SCM.getIntValue(tmpdigres); &#xD;&#xA;                    var extdigres = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;                    var extdig = SCM.getIntValue(extdigres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon1/k2div&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(currentResource); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon1/k2div&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var kdiv = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,kdiv);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwk" downWardmappedList="//@consumed.32" maxValue="128" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="4"/>
    <localValue xsi:type="ResourceModel:StringValue" value="4"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4"/>
    <toolTipHelpDescription>fPLL = (N * fOSC)/(P * K2)</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="K1 Div" description="K1 Div" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                    var extoscres = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;                    var extosc = SCM.getIntValue(extoscres);&#xD;&#xA;                    var tmposcres = SCM.getResource(&quot;clk001_tempextoscfreq&quot;);&#xD;&#xA;                    var tmpextosc = SCM.getIntValue(tmposcres); &#xD;&#xA;                    var tmpdigres = SCM.getResource(&quot;clk001_tempdigipfreq&quot;);&#xD;&#xA;                    var tmpextdig = SCM.getIntValue(tmpdigres); &#xD;&#xA;                    var extdigres = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;                    var extdig = SCM.getIntValue(extdigres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;                    var value = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(currentResource); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwk1" downWardmappedList="//@consumed.33" maxValue="128" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>fPLL = fOSC/K1</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Enable fly trimming (32 KHz crystal is required on RTC_XTAL 1,2)" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwenableflytrim" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
    <toolTipHelpDescription>Enable fly trimming</toolTipHelpDescription>
    <item name="Enable fly trimming (32 KHz crystal is required on RTC_XTAL 1,2)" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;hibernate/pwrset/hib&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              SCM.setIntValue(Res,value);&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;hibernate/pwrset/hib&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,value);               &#xD;&#xA;              }&#xD;&#xA;            }     &#xD;&#xA;           " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwenableflytrim/0" downWardmappedList="//@consumed.57" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Enable fly trimming</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Internal Oscillator Frequency" description="Internal Oscillator Frequency (OSC_FI)" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_tempintoscfreq&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(currentResource); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_tempintoscfreq&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwinteroscreffreq" downWardmappedList="//@consumed.8" maxValue="18" minValue="4">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="18"/>
    <localValue xsi:type="ResourceModel:StringValue" value="18"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="18"/>
    <toolTipHelpDescription>Internal Oscillator Frequency</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="External Oscillator Frequency" description="External Oscillator Frequency" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_tempextoscfreq&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(currentResource); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;                    var usbndivres = SCM.getResource(&quot;usb/usbpllcon/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var usbndiv = SCM.getIntValue(usbndivres); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var targetvco = 384;&#xD;&#xA;                    usbndiv = (targetvco/(Intvalue/2));&#xD;&#xA;                    SCM.setIntValue(usbndivres,usbndiv);&#xD;&#xA;&#xD;&#xA;                    var vcotarget = 480;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_tempextoscfreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;var fptarget = 16;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;        &#x9;&#x9;&#x9;var clkcpu = SCM.getIntValue(tempRes); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(tempRes,clkcpu);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res2,ndiv);&#x9;&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_tempextoscfreq&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwextoscreffreq" downWardmappedList="//@consumed.7 //@consumed.53 //@consumed.9 //@consumed.31 //@consumed.32 //@consumed.34" maxValue="19" minValue="4">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="C"/>
    <localValue xsi:type="ResourceModel:StringValue" value="C"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="c"/>
    <toolTipHelpDescription>Crystal Clock frequency</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="External Clock Frequency" description="Reference Freq" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_tempdigipfreq&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(currentResource); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,Intvalue);&#xD;&#xA;                    var usbndivres = SCM.getResource(&quot;usb/usbpllcon/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var usbndiv = SCM.getIntValue(usbndivres); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var targetvco = 384;&#xD;&#xA;                    usbndiv = (targetvco/(Intvalue/2));&#xD;&#xA;                    SCM.setIntValue(usbndivres,usbndiv);&#xD;&#xA;&#xD;&#xA;                    var vcotarget = 480;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_tempdigipfreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;var fptarget = 16;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;        &#x9;&#x9;&#x9;var clkcpu = SCM.getIntValue(tempRes); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(tempRes,clkcpu);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res2,ndiv);&#x9;&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_tempdigipfreq&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Intvalue = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,Intvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwdiginputreffreq" downWardmappedList="//@consumed.0 //@consumed.53 //@consumed.9 //@consumed.31 //@consumed.32 //@consumed.34" maxValue="28" minValue="4">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="C"/>
    <localValue xsi:type="ResourceModel:StringValue" value="C"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="c"/>
    <toolTipHelpDescription>External Clock Frequency</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Desired System Frequency" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwdesfreqsystemenum" downWardmappedList="//@consumed.10">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Select Desired Frequency</toolTipHelpDescription>
    <item name="120MHz" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  var clkcpu = 120; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(tempRes,120);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) &#xD;&#xA;                            {&#xD;&#xA;var Ractcpu = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;SCM.setIntValue(Ractcpu,120);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var vcotarget = 480;&#xD;&#xA;&#x9;                            &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var reffreq =0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   if(dummyval == 1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; reffreq = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   else if (dummyval == 2) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; reffreq = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   }&#xD;&#xA;                                   else&#xD;&#xA;                                   {&#xD;&#xA;                                     reffreq = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;);&#xD;&#xA;                                   }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var fptarget = 16;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var clkcpu = 120; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   SCM.setIntValue(tempRes,120);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;   vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;   var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    &#x9;&#x9;&#x9;   vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;  vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   SCM.setIntValue(Res2,ndiv);&#xD;&#xA;                               &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} &#xD;&#xA;                            else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;             &#x9;&#x9;&#x9;var XMC42xx=SCM.getSoftwareId().substring(0,2).compareTo(&quot;42&quot;);  &#xD;&#xA;  &#x9;&#x9;&#x9;              if(XMC42xx==0){&#xD;&#xA;                          var reserved = SCM.getReserverd();&#xD;&#xA;        &#x9;              SCM.setValue(currentResource,reserved);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;              }&#xD;&#xA;&#x9;&#x9;&#x9;              else&#xD;&#xA;&#x9;&#x9;&#x9;              {&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 0 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwdesfreqsystemenum/0" downWardmappedList="//@consumed.9 //@consumed.10" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="96MHz" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;var Ractcpu = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;SCM.setIntValue(Ractcpu,96);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vcotarget = 480;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reffreq =0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(dummyval == 1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (dummyval == 2) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                                else&#xD;&#xA;                                {&#xD;&#xA;                                    reffreq = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;);&#xD;&#xA;                                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fptarget = 16;&#xD;&#xA;&#xD;&#xA;        &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var clkcpu = 96; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(tempRes,96);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9; vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    &#x9;&#x9;&#x9;vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9; vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res2,ndiv);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;             &#x9;&#x9;&#x9;  var XMC42xx=SCM.getSoftwareId().substring(0,2).compareTo(&quot;42&quot;);  &#xD;&#xA;  &#x9;&#x9;&#x9;              if(XMC42xx==0){&#xD;&#xA;                          var reserved = SCM.getReserverd();&#xD;&#xA;        &#x9;              SCM.setValue(currentResource,reserved);&#xD;&#xA;&#x9;&#x9;&#x9;              }&#xD;&#xA;&#x9;&#x9;&#x9;              else&#xD;&#xA;&#x9;&#x9;&#x9;              {&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                          }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwdesfreqsystemenum/1" downWardmappedList="//@consumed.10" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="80MHz" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;var Ractcpu = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;SCM.setIntValue(Ractcpu,80);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,2);&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vcotarget = 480;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reffreq =0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(dummyval == 1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (dummyval == 2) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                                else&#xD;&#xA;                                {&#xD;&#xA;                                    reffreq = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;);&#xD;&#xA;                                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fptarget = 16;&#xD;&#xA;&#xD;&#xA;        &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var clkcpu = 80; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(tempRes,80);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9; vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    &#x9;&#x9;&#x9;vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9; vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res2,ndiv);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 2) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwdesfreqsystemenum/2" downWardmappedList="//@consumed.10" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="72MHz" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;var Ractcpu = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;SCM.setIntValue(Ractcpu,72);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,3);&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vcotarget = 480;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reffreq =0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(dummyval == 1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (dummyval == 2) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                                else&#xD;&#xA;                                {&#xD;&#xA;                                    reffreq = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;);&#xD;&#xA;                                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fptarget = 16;&#xD;&#xA;&#xD;&#xA;        &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var clkcpu = 72; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(tempRes,72);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9; vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    &#x9;&#x9;&#x9;vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9; vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res2,ndiv);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 3 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwdesfreqsystemenum/3" downWardmappedList="//@consumed.10" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="60MHz" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;var Ractcpu = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;SCM.setIntValue(Ractcpu,60);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,4);&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vcotarget = 480;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reffreq =0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(dummyval == 1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (dummyval == 2) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                                else&#xD;&#xA;                                {&#xD;&#xA;                                    reffreq = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;);&#xD;&#xA;                                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fptarget = 16;&#xD;&#xA;&#xD;&#xA;        &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var clkcpu = 60; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(tempRes,60);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9; vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    &#x9;&#x9;&#x9;vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9; vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res2,ndiv);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 4 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwdesfreqsystemenum/4" downWardmappedList="//@consumed.10" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
    <item name="48MHz" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;var Ractcpu = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;SCM.setIntValue(Ractcpu,48);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,5);&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vcotarget = 480;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reffreq =0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(dummyval == 1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (dummyval == 2) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                                else&#xD;&#xA;                                {&#xD;&#xA;                                    reffreq = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;);&#xD;&#xA;                                }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = SCM.getIntValue(reffreq);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fptarget = 16;&#xD;&#xA;&#xD;&#xA;        &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var clkcpu = 48; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(tempRes,48);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var vtmp = Math.floor((osc + fptarget - 1) / fptarget);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var fp = (osc / vtmp);&#xD;&#xA;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,pdiv);&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9; vtmp = Math.floor(vcotarget/clkcpu);&#xD;&#xA; &#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;var  kdiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,kdiv);&#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    &#x9;&#x9;&#x9;vtmp = Math.floor(((clkcpu * kdiv) + fp/2) / fp);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if ((fp * vtmp) > vcotarget) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#x9;&#x9;&#x9;&#x9; vtmp = (vtmp - 1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = vtmp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res2,ndiv);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 5 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwdesfreqsystemenum/5" downWardmappedList="//@consumed.10" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription></toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Consumed Apps Configuration (Don't add this)" evalFunction="&#xD;&#xA;                    function ForwardMapping(){ &#x9;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var sync = SCM.getResource(&quot;clk001_syncdummy&quot;);&#x9;&#xD;&#xA;var syncvalue = SCM.getIntValue(sync);&#xD;&#xA;if(syncvalue != 1)&#xD;&#xA;{&#xD;&#xA;SCM.setIntValue(sync,0);&#xD;&#xA;}&#xD;&#xA;syncvalue = SCM.getIntValue(sync);&#xD;&#xA;if(syncvalue == 0)&#xD;&#xA;{&#xD;&#xA;SCM.setIntValue(sync,1);&#xD;&#xA;var XMC42xx=SCM.getSoftwareId().substring(0,2).compareTo(&quot;42&quot;);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(XMC42xx==0){                         &#xD;&#xA;&#x9;&#xD;&#xA;&#xD;&#xA;var Res2 = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;);&#xD;&#xA;SCM.setIntValue(Res2,2);&#xD;&#xA;var Res1 = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;SCM.setIntValue(Res1,80);&#xD;&#xA;var Res3 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;SCM.setIntValue(Res3,6);&#xD;&#xA;}else&#xD;&#xA;{ &#xD;&#xA;var Res2 = SCM.getResource(&quot;clk001_DesFreqTempEnum&quot;);&#xD;&#xA;SCM.setIntValue(Res2,0);&#xD;&#xA;var Res1 = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;SCM.setIntValue(Res1,120);&#xD;&#xA;var Res3 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;SCM.setIntValue(Res3,4);&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;                    }&#xD;&#xA;                    function BackwardMapping(){   &#xD;&#xA;            &#x9;&#x9;SCM.setIntValue(currentResource,0);    &#xD;&#xA;                    }&#xD;&#xA;                    " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_consappsconfig" downWardmappedList="//@consumed.15 //@consumed.10 //@consumed.14 //@consumed.32" maxValue="0" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>Don't use this</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Actual System Frequency" description="System Clock" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Source = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = SCM.getIntValue(Res0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var kdiv = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = SCM.getIntValue(Res2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res3 = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var osc  = SCM.getIntValue(Res3);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var reffreq  =  SCM.getResource(&quot;clk001_tempextoscfreq&quot;);&#xD;&#xA;                    var osc = SCM.getIntValue(reffreq);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res5 = SCM.getResource(&quot;clk001_tempdigipfreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var osc2 = SCM.getIntValue(Res5);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var clockSource = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(clockSource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;                    var value = SCM.getIntValue(tempRes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var clockSource = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(clockSource);&#x9;&#xD;&#xA;                    k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                    k1 = SCM.getIntValue(k1res);&#xD;&#xA;                    var opmode = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;                    var prscale = SCM.getIntValue(opmode);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    var value_actu = SCM.getIntValue(currentResource);&#xD;&#xA;                    if(value_actu==0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;             &#x9;&#x9;&#x9;  var XMC42xx=SCM.getSoftwareId().substring(0,2).compareTo(&quot;42&quot;);  &#xD;&#xA;  &#x9;&#x9;&#x9;              if(XMC42xx==0){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,80);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,120);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var ActSysFreqdummyRes = SCM.getResource(&quot;clk001_actualsysfreqdummy&quot;);&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var ActSysFreqvalue = SCM.getIntValue(ActSysFreqdummyRes);&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(ActSysFreqdummyRes,(ActSysFreqvalue+1));&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;   &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Source = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var reffreq = 0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var actual = 0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var osc = 0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var k1div=0;&#xD;&#xA;                    if(Source === 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = SCM.getIntValue(Res0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var kdiv = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = SCM.getIntValue(Res2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var clockSource = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(clockSource);&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    if(value == 1) &#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if(value == 2)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;                        else if (value == 3)&#xD;&#xA;                        {&#xD;&#xA;                            reffreq = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;);&#xD;&#xA;                        }&#xD;&#xA;                        var opmode = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;                        var prscale = SCM.getIntValue(opmode);&#xD;&#xA;                        if(prscale == 1)&#xD;&#xA;                        {&#xD;&#xA;                           osc = SCM.getIntValue(reffreq);&#xD;&#xA;                           k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                           k1 = SCM.getIntValue(k1res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   actual = Math.floor(osc/k1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   SCM.setIntValue(currentResource,actual);&#xD;&#xA;                        }&#xD;&#xA;                        else&#xD;&#xA;                        {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  osc = SCM.getIntValue(reffreq);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  actual = Math.floor((ndiv/(pdiv *kdiv))*osc);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setIntValue(currentResource,actual);&#xD;&#xA;                        }&#xD;&#xA;                        &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reffreq = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;actual = SCM.getIntValue(reffreq);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,actual);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var ActFreqCPURes = SCM.getResource(&quot;clk001_iroActualFreqCPU&quot;);&#xD;&#xA;//       &#x9;&#x9;&#x9;   &#x9;var ActFreqCPUvalue = SCM.getIntValue(ActFreqCPURes);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_iroactualfreqsystem" maxValue="208" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../SYSTM001/1.0.18/systm001_0.app#//@consumed.9"/>
    <localValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <toolTipHelpDescription>Actual System Frequency</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="USB Clock Enable" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/clkset_usbcen&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/clkset_usbcen&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else if(value ==1){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwusbclkenable" downWardmappedList="//@consumed.49" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../USBLD001/1.0.18/usbld001_0.app#//@consumed.16"/>
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>Enable USB Clock</toolTipHelpDescription>
    <item name="USB Clock Enable" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/clkset_usbcen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/clkset_usbcen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwusbclkenable/0" downWardmappedList="//@consumed.49" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>This selection enables USB Clock</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="USB Clock Source Selection" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwusbclksource">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>USB Clock Source</toolTipHelpDescription>
    <item name="USB PLL" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                                var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbclkcr/usbsel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbclkcr/usbsel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value === 0 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (value == -1 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwusbclksource/0" downWardmappedList="//@consumed.50" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>USB PLL selected as clock source</toolTipHelpDescription>
    </item>
    <item name="System PLL" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                               var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbclkcr/usbsel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbclkcr/usbsel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwusbclksource/1" downWardmappedList="//@consumed.50" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>System PLL as USB clock source</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="N Div" description="N Div for USB PLL" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbpllcon/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource); &#xD;&#xA;                    SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbpllcon/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irusbpllndiv" downWardmappedList="//@consumed.53" maxValue="128" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="40"/>
    <localValue xsi:type="ResourceModel:StringValue" value="40"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="40"/>
    <toolTipHelpDescription>N Div Value  for USB PLL</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="P Div" description="P Div for USB PLL" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbpllcon/pdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbpllcon/pdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irusbpllpdiv" downWardmappedList="//@consumed.52" maxValue="16" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="2"/>
    <localValue xsi:type="ResourceModel:StringValue" value="2"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="2"/>
    <toolTipHelpDescription>P Div Value  for USB PLL</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="USB Clock Divider" description="The PLL output is divided by this value" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;value = value - 1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbclkcr/usbdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;usb/usbclkcr/usbdiv&quot;);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;value = value + 1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwusbclkdivider" downWardmappedList="//@consumed.51" maxValue="8" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="4"/>
    <localValue xsi:type="ResourceModel:StringValue" value="4"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4"/>
    <toolTipHelpDescription>The PLL output is divided by this value</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="USB PLL Input Frequency" description="Input PLL Frequency " evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;clk001_tempusbpllfreq&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(Res);&#xD;&#xA;                    var clksrcres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;);&#xD;&#xA;                    var clksrc = SCM.getIntValue(clksrcres);&#xD;&#xA;                    var extoscres = SCM.getResource(&quot;clk001_irwExtOscRefFreq&quot;);&#xD;&#xA;                    var extosc = SCM.getIntValue(extoscres);&#xD;&#xA;                    var tmposcres = SCM.getResource(&quot;clk001_tempextoscfreq&quot;);&#xD;&#xA;                    var tmpextosc = SCM.getIntValue(tmposcres); &#xD;&#xA;                    var tmpdigres = SCM.getResource(&quot;clk001_tempdigipfreq&quot;);&#xD;&#xA;                    var tmpextdig = SCM.getIntValue(tmpdigres); &#xD;&#xA;                    var extdigres = SCM.getResource(&quot;clk001_irwDigInputRefFreq&quot;);&#xD;&#xA;                    var extdig = SCM.getIntValue(extdigres);&#xD;&#xA;                    &#xD;&#xA;                    &#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;                    var Res = SCM.getResource(&quot;clk001_tempusbpllfreq&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(Res);&#xD;&#xA;                    var clksrcres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;);&#xD;&#xA;                    var clksrc = SCM.getIntValue(clksrcres);&#xD;&#xA;                    var extoscres = SCM.getResource(&quot;clk001_tempextoscfreq&quot;);&#xD;&#xA;                    var extosc = SCM.getIntValue(extoscres);&#xD;&#xA;                    var extdigres = SCM.getResource(&quot;clk001_tempdigipfreq&quot;);&#xD;&#xA;                    var extdig = SCM.getIntValue(extdigres);&#xD;&#xA;                    if(clksrc==1)&#xD;&#xA;                    {&#xD;&#xA;                       SCM.setIntValue(currentResource,extosc);&#xD;&#xA;                    }&#xD;&#xA;                    else if(clksrc ==2)&#xD;&#xA;                    { &#xD;&#xA;                       SCM.setIntValue(currentResource,extdig);&#xD;&#xA;                    }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erousbpllinputfreq" maxValue="28" minValue="4">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="C"/>
    <localValue xsi:type="ResourceModel:StringValue" value="C"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="C"/>
    <toolTipHelpDescription>The PLL output is divided by this value</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Actual USB Frequency" description="Actual USB Clock Frequency" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbclkcr/usbsel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(Res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res0); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = SCM.getIntValue(Res1);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res_pdiv = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = SCM.getIntValue(Res_pdiv);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1_k2div = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var kdiv = SCM.getIntValue(Res1_k2div);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;usb/usbclkcr/usbdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Div = SCM.getIntValue(Res2); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;                    var value = SCM.getIntValue(tempRes);&#xD;&#xA;                    var Res3 = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;); &#xD;&#xA;                    var value2 = SCM.getValue(Res3);&#xD;&#xA;                    var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;                    var Res_1 = SCM.getResource(&quot;clk001_tempdigipfreq&quot;); &#xD;&#xA;                    var value_1 = SCM.getValue(Res_1);&#xD;&#xA;                    var Res_2 = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;); &#xD;&#xA;                    var value_2 = SCM.getValue(Res_2);&#xD;&#xA;                    var Res_3 = SCM.getResource(&quot;clk001_tempextoscfreq&quot;); &#xD;&#xA;                    var value_3= SCM.getValue(Res_3);&#xD;&#xA;                    var reffreq  =  SCM.getResource(&quot;clk001_eroUSBPLLInputfreq&quot;);&#xD;&#xA;                    var osc = SCM.getIntValue(reffreq);&#xD;&#xA;                    var ndivres = SCM.getResource(&quot;usb/usbpllcon/ndiv&quot;);&#xD;&#xA;                    var ndiv = SCM.getIntValue(ndivres);&#xD;&#xA;                    var pdivres = SCM.getResource(&quot;usb/usbpllcon/pdiv&quot;);&#xD;&#xA;                    var pdiv = SCM.getIntValue(pdivres);&#xD;&#xA;                    var usbclksrc = SCM.getResource(&quot;clk001_erwUSBClkSource&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var usbclk = SCM.getIntValue(usbclksrc);&#xD;&#xA;                    var opmode = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var mode = SCM.getIntValue(opmode);&#xD;&#xA;                    var tempactfr = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var actfr = SCM.getIntValue(tempRes)&#xD;&#xA;                    var k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                    var k1 = SCM.getIntValue(k1res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;usb/usbclkcr/usbsel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var pll = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (pll == 0 )&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var reffreq  =  SCM.getResource(&quot;clk001_eroUSBPLLInputfreq&quot;);&#xD;&#xA;                        var osc = SCM.getIntValue(reffreq);&#xD;&#xA;                        var ndivres = SCM.getResource(&quot;usb/usbpllcon/ndiv&quot;);&#xD;&#xA;                        var ndiv = SCM.getIntValue(ndivres);&#xD;&#xA;                        var pdivres = SCM.getResource(&quot;usb/usbpllcon/pdiv&quot;);&#xD;&#xA;                        var pdiv = SCM.getIntValue(pdivres);&#xD;&#xA;                        var usbdivres = SCM.getResource(&quot;usb/usbclkcr/usbdiv&quot;);&#xD;&#xA;                        var usbdiv = SCM.getIntValue(usbdivres);&#xD;&#xA;                        usbdiv = usbdiv+1;&#xD;&#xA;                        var actual = (((osc*ndiv)/(pdiv*usbdiv))/2);&#xD;&#xA;                        SCM.setIntValue(currentResource,actual);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(tempRes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;usb/usbclkcr/usbdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Div = SCM.getIntValue(Res1); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Div = Div + 1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value0 = Math.floor(value0/Div);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_iroactualfrequsb" maxValue="208" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="30"/>
    <localValue xsi:type="ResourceModel:StringValue" value="30"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="30"/>
    <toolTipHelpDescription>USB Clock</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="SD/MMC Clock Enable" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;usb/clkset_usbcen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;sdmmc/clkset_mmccen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(value == 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sdmmc/clkset_mmccen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else if(value ==1){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwmmcclkenable" downWardmappedList="//@consumed.54" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>SD/MMC Clock Enable</toolTipHelpDescription>
    <item name="SD/MMC Clock Enable" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;usb/clkset_usbcen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;sdmmc/clkset_mmccen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res1,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(value == 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res0,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sdmmc/clkset_mmccen&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwmmcclkenable/0" downWardmappedList="//@consumed.54" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This selection enables SD/MMC Clock</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Actual MMC Frequency" description="MMC Clock" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = SCM.getIntValue(Res2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;usb/usbclkcr/usbdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Div = SCM.getIntValue(Res1); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res_pdiv = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = SCM.getIntValue(Res_pdiv);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1_k2div = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var kdiv = SCM.getIntValue(Res1_k2div);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;                    var value = SCM.getIntValue(tempRes);&#xD;&#xA;                    var Res3 = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;); &#xD;&#xA;                    var value2 = SCM.getValue(Res3);&#xD;&#xA;                    var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;                    var Res_1 = SCM.getResource(&quot;clk001_tempdigipfreq&quot;); &#xD;&#xA;                    var value_1 = SCM.getValue(Res_1);&#xD;&#xA;                    var Res_2 = SCM.getResource(&quot;clk001_tempextoscfreq&quot;); &#xD;&#xA;                    var value_2 = SCM.getValue(Res_2);&#xD;&#xA;                    var Res_3 = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;); &#xD;&#xA;                    var value_3 = SCM.getValue(Res_3);&#xD;&#xA;                    var tempactfr = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var actfr = SCM.getIntValue(tempRes);&#xD;&#xA;                    var opmode = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;                    var prscale = SCM.getIntValue(opmode);&#xD;&#xA;                    var k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                    var k1 = SCM.getIntValue(k1res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                    var Res = SCM.getResource(&quot;usb/usbclkcr/usbsel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var pll = SCM.getIntValue(Res); &#xD;&#xA;                    var frqres =SCM.getResource(&quot;clk001_iroActualFreqUSB&quot;); &#xD;&#xA;                    var result = SCM.getIntValue(frqres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (pll === 0 )&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,result);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Value = SCM.getIntValue(tempRes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;usb/usbclkcr/usbdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Div = SCM.getIntValue(Res1); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Div = Div + 1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Value = Math.floor(Value/Div);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,Value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_iroactualfreqmmc" maxValue="208" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="30"/>
    <localValue xsi:type="ResourceModel:StringValue" value="30"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="30"/>
    <toolTipHelpDescription>MMC Clock</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="EBU Clock Enable" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ebu/clkset_ebucen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ebu/clkset_ebucen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else if(value ==1){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwebuclkenable" downWardmappedList="//@consumed.42" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>EBU Clock Enable</toolTipHelpDescription>
    <item name="EBU Clock Enable" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ebu/clkset_ebucen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ebu/clkset_ebucen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwebuclkenable/0" downWardmappedList="//@consumed.42" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This selection enables EBU Clock</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="EBU Clock Divider" description="The PLL output is divided by this value" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;value = value - 1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ebu/ebuclkcr/ebudiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;ebu/ebuclkcr/ebudiv&quot;);&#xD;&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;value = value + 1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwebuclkdivider" downWardmappedList="//@consumed.41" maxValue="40" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>The PLL output is divided by this value</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Actual EBU Frequency" description="EBU Clock" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = SCM.getIntValue(Res2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;ebu/ebuclkcr/ebudiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1);&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res_pdiv = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = SCM.getIntValue(Res_pdiv);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1_k2div = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var kdiv = SCM.getIntValue(Res1_k2div);&#xD;&#xA;                    var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;                    var value = SCM.getIntValue(tempRes);&#xD;&#xA;                    var Res3 = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;); &#xD;&#xA;                    var value2 = SCM.getValue(Res3);&#xD;&#xA;                    var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;                    var Res_1 = SCM.getResource(&quot;clk001_tempdigipfreq&quot;); &#xD;&#xA;                    var value_1 = SCM.getValue(Res_1);&#xD;&#xA;                    var Res_2 = SCM.getResource(&quot;clk001_tempextoscfreq&quot;); &#xD;&#xA;                    var value_2 = SCM.getValue(Res_2);&#xD;&#xA;                    var Res_3 = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;); &#xD;&#xA;                    var value_3 = SCM.getValue(Res_3);&#xD;&#xA;                    var tempactfr = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var actfr = SCM.getIntValue(tempRes);&#xD;&#xA;                    var k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                    var k1 = SCM.getIntValue(k1res);&#xD;&#xA;                    var opmode = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;                    var prscale = SCM.getIntValue(opmode);&#xD;&#xA;                    var k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                    var k1 = SCM.getIntValue(k1res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(tempRes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;ebu/ebuclkcr/ebudiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Div = SCM.getIntValue(Res1); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Div = Div + 1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;value0 = Math.floor(value0/Div);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value0);&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_iroactualfreqebu" maxValue="208" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <localValue xsi:type="ResourceModel:StringValue" value="78"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <toolTipHelpDescription>EBU Clock</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="CCU Clock Enable" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ccu/clkset_ccucen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ccu/clkset_ccucen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else if(value ==1){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwccuclkenable" downWardmappedList="//@consumed.44" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CCU8GLOBAL/1.0.20/ccu8global_0.app#//@consumed.7"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CCU8GLOBAL/1.0.20/ccu8global_1.app#//@consumed.7"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CCU4GLOBAL/1.0.22/ccu4global_0.app#//@consumed.7"/>
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>CCU Clock Enable</toolTipHelpDescription>
    <item name="CCU Clock Enable" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ccu/clkset_ccucen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ccu/clkset_ccucen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwccuclkenable/0" downWardmappedList="//@consumed.44" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>This selection enables CCU Clock</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Actual CCU Frequency" description="CCU Clock" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var tempResvalue = SCM.getIntValue(tempRes);&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,tempResvalue);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(Res0); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;ccu/ccuclkcr/ccudiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res2); &#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res_pdiv = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = SCM.getIntValue(Res_pdiv);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1_k2div = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var kdiv = SCM.getIntValue(Res1_k2div);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;                    var value = SCM.getIntValue(tempRes);&#xD;&#xA;                    var Res3 = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;); &#xD;&#xA;                    var value2 = SCM.getValue(Res3);&#xD;&#xA;                    var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;                    var Res_1 = SCM.getResource(&quot;clk001_tempdigipfreq&quot;); &#xD;&#xA;                    var value_1 = SCM.getValue(Res_1);&#xD;&#xA;                    var Res_2 = SCM.getResource(&quot;clk001_tempextoscfreq&quot;); &#xD;&#xA;                    var value_2 = SCM.getValue(Res_2);&#xD;&#xA;                    var Res_3 = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;); &#xD;&#xA;                    var value_3 = SCM.getValue(Res_3);&#xD;&#xA;                    var tempactfr = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var actfr = SCM.getIntValue(tempactfr);&#xD;&#xA;                    var opmode = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;                    var prscale = SCM.getIntValue(opmode);&#xD;&#xA;                    var k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                    var k1 = SCM.getIntValue(k1res);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(tempRes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(tempRes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;ccu/ccuclkcr/ccudiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (value1 == 1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value0 = Math.floor(value0/2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_iroactualfreqccu" maxValue="208" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CCU8GLOBAL/1.0.20/ccu8global_0.app#//@consumed.6"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CCU8GLOBAL/1.0.20/ccu8global_1.app#//@consumed.6"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CCU4GLOBAL/1.0.22/ccu4global_0.app#//@consumed.6"/>
    <localValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <toolTipHelpDescription>CCU Clock</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="CCU Clock Divide(x/2)" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwccuclkdiv" multipleSelections="true">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <item name="Divide by 2" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ccu/ccuclkcr/ccudiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var CCURes = SCM.getResource(&quot;clk001_iroActualFreqCCU&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var CPUResvalue = SCM.getIntValue(CCURes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ccu/ccuclkcr/ccudiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwccuclkdiv/0" downWardmappedList="//@consumed.43" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Some limitations apply on clock ratio combinations between fCCU, fCPU and fPERIPH.
All other clock dividers settings must be prohibited by software applications
 in order to avoid invalid clock ratios leading to system malfunctions.

Valid values of clock divide registers for fCCU , fCPU and fPERIPH clocks
 CCUCLKCR.CCUDIV   CPUCLKCR.CPUDIV   PBCLKCR.PBDIV
 0 (120 MHz)            0 (120 MHz)            0 (120 MHz)
 0 (120 MHz)            0 (120 MHz)            1 (60 MHz)
 0 (120 MHz)            1 (60 MHz)             0 (60 MHz)
 1 (60 MHz)             0 (120 MHz)            1 (60 MHz) 
 1 (60 MHz)             1 (60 MHz)              0 (60 MHz)</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="WDT Actual Frequency" description="WDT Actual Frequency" evalFunction="&#xD;&#xA;                    function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                        var divres = SCM.getResource(&quot;wdt/wdtclkcr/wdtdiv&quot;);&#xD;&#xA;                        var divval = SCM.getIntValue(divres);&#xD;&#xA;                        var selres = SCM.getResource(&quot;wdt/wdtclkcr/wdtsel&quot;);&#xD;&#xA;                        var selval = SCM.getIntValue(selres);&#xD;&#xA;                        var bkupactlres = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;);&#xD;&#xA;                        var bkupactlval = SCM.getIntValue(bkupactlres);&#xD;&#xA;                        var actlfreqres = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;                        var actlfrqval = SCM.getIntValue(actlfreqres);&#xD;&#xA;                        var wdtres = SCM.getResource(&quot;clk001_wdtactualfreqdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    var wdtval = SCM.getIntValue(currentResource); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    SCM.setIntValue(wdtres,wdtval);&#xD;&#xA;                        var k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                        var k1 = SCM.getIntValue(k1res);&#xD;&#xA;                        var opmode = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;                        var prscale = SCM.getIntValue(opmode);&#xD;&#xA;                    }&#xD;&#xA;                    function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                        var divres = SCM.getResource(&quot;wdt/wdtclkcr/wdtdiv&quot;);&#xD;&#xA;                        var divval = SCM.getIntValue(divres);&#xD;&#xA;                        var selres = SCM.getResource(&quot;wdt/wdtclkcr/wdtsel&quot;);&#xD;&#xA;                        var selval = SCM.getIntValue(selres);&#xD;&#xA;                        var wdtres = SCM.getResource(&quot;clk001_wdtactualfreqdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    var wdtval = SCM.getIntValue(wdtres);&#xD;&#xA;                        if(selval == 0)&#xD;&#xA;                        {&#xD;&#xA;                            var bkupactlres = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;);&#xD;&#xA;                            var bkupactlval = SCM.getIntValue(bkupactlres);&#xD;&#xA;                            var result1 =((bkupactlval*1000)/(divval+1));&#xD;&#xA;                            SCM.setDoubleValue(currentResource,result1);&#xD;&#xA;                        }&#xD;&#xA;                        else if(selval == 1)&#xD;&#xA;                        {&#xD;&#xA;                            var result2 = (32/(divval+1));&#xD;&#xA;                            SCM.setDoubleValue(currentResource,result2);&#xD;&#xA; &#xD;&#xA;                        }&#xD;&#xA;                        else&#xD;&#xA;                        {&#xD;&#xA;                            var actlfreqres = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;                            var actlfrqval = SCM.getIntValue(actlfreqres);&#xD;&#xA;                            var result3 =((actlfrqval*1000)/(divval+1));&#xD;&#xA;                            SCM.setDoubleValue(currentResource,result3);&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_irwwdtactualfreq" downWardmappedList="//@consumed.6" maxValue="208000" minValue="0">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="24"/>
    <localValue xsi:type="ResourceModel:StringValue" value="24"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="5dc0"/>
    <toolTipHelpDescription>Actual WDT Clock Frequency</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="WDT Clock Enable" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/clkset_wdtcen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/clkset_wdtcen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}else if(value ==1){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwwdtclkenable" downWardmappedList="//@consumed.46" multipleSelections="true">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <localValue xsi:type="ResourceModel:StringValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription>WDT Clock Enable</toolTipHelpDescription>
    <item name="WDT Clock Enable" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/clkset_wdtcen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/clkset_wdtcen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwwdtclkenable/0" downWardmappedList="//@consumed.46" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>This selection enables WDT Clock</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="WDT Clock Source Selection" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwwdtclksource">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>WDT Clock Source Selection</toolTipHelpDescription>
    <item name="Back Up Clock" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;);&#xD;&#xA;                                var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/wdtclkcr/wdtsel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/wdtclkcr/wdtsel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (value == -1 ){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwwdtclksource/0" downWardmappedList="//@consumed.47" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Internal OSC</toolTipHelpDescription>
    </item>
    <item name="Standby Clock" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;);&#xD;&#xA;                                var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/wdtclkcr/wdtsel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,1);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/wdtclkcr/wdtsel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwwdtclksource/1" downWardmappedList="//@consumed.47" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Standby Clock</toolTipHelpDescription>
    </item>
    <item name="PLL Clock" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;);&#xD;&#xA;                                var value1 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/wdtclkcr/wdtsel&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == 1 ) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,2);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (value === 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;                                var Res1 = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;);&#xD;&#xA;                                var value1 = SCM.getIntValue(Res1);&#xD;&#xA;                                if(value1 >0 )&#xD;&#xA;                                {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  var Res = SCM.getResource(&quot;wdt/wdtclkcr/wdtsel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  if (value == 2 ) &#xD;&#xA;                                  { &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; SCM.setIntValue(currentResource,1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  } &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else &#xD;&#xA;                                  {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  }&#xD;&#xA;                               }&#xD;&#xA;                               else&#xD;&#xA;                               {&#xD;&#xA;                                  var reserved = SCM.getReserverd();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SCM.setValue(currentResource,reserved);&#xD;&#xA;                               }&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwwdtclksource/2" downWardmappedList="//@consumed.47" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>PLL Clock</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="WDT Clock Divide Value" description="" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value = value - 1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/wdtclkcr/wdtdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;wdt/wdtclkcr/wdtdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value = value + 1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwwdtclkdiv" downWardmappedList="//@consumed.48" maxValue="100" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>WDT Clock Divide Value</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Peripheral Bus Clock Divide(x/2)" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwpbclkdivider" multipleSelections="true">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>Peripheral Bus Clock Divide(x/2)</toolTipHelpDescription>
    <item name="Divide by 2" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;perbridge/pbclkcr/pbdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;                    &#x9;&#x9;var Res3 = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;); &#xD;&#xA;                    &#x9;&#x9;var value2 = SCM.getValue(Res3);&#xD;&#xA;                            var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;perbridge/pbclkcr/pbdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwpbclkdivider/0" downWardmappedList="//@consumed.39" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Some limitations apply on clock ratio combinations between fCCU, fCPU and fPERIPH.
All other clock dividers settings must be prohibited by software applications
 in order to avoid invalid clock ratios leading to system malfunctions.

Valid values of clock divide registers for fCCU , fCPU and fPERIPH clocks
 CCUCLKCR.CCUDIV   CPUCLKCR.CPUDIV   PBCLKCR.PBDIV
 0 (120 MHz)            0 (120 MHz)            0 (120 MHz)
 0 (120 MHz)            0 (120 MHz)            1 (60 MHz)
 0 (120 MHz)            1 (60 MHz)             0 (60 MHz)
 1 (60 MHz)             0 (120 MHz)            1 (60 MHz) 
 1 (60 MHz)             1 (60 MHz)              0 (60 MHz)</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Actual Peripheral Bus Freq" description="PB Clock" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = SCM.getIntValue(Res0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;cpu/cpuclkcr/cpudiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(Res1);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res_pdiv = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = SCM.getIntValue(Res_pdiv);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1_k2div = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var kdiv = SCM.getIntValue(Res1_k2div);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;perbridge/pbclkcr/pbdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getValue(Res2); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    var Res7 = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;); &#xD;&#xA;                    var value7 = SCM.getValue(Res7);&#xD;&#xA;                    var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;                    var value3 = SCM.getIntValue(tempRes);&#xD;&#xA;                    var Res_1 = SCM.getResource(&quot;clk001_tempdigipfreq&quot;); &#xD;&#xA;                    var value_1 = SCM.getValue(Res_1);&#xD;&#xA;                    var Res_2 = SCM.getResource(&quot;clk001_tempextoscfreq&quot;); &#xD;&#xA;                    var value_2 = SCM.getValue(Res_2);&#xD;&#xA;                    var Res_3 = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;); &#xD;&#xA;                    var value_3 = SCM.getValue(Res_3);&#xD;&#xA;                    var opmode = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;                    var prscale = SCM.getIntValue(opmode);&#xD;&#xA;                    var k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                    var k1 = SCM.getIntValue(k1res);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(tempRes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;perbridge/pbclkcr/pbdiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;cpu/cpuclkcr/cpudiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var cpudiv = SCM.getIntValue(Res2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(cpudiv == 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value0 = Math.floor(value0/2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (value1 == 1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value0 = Math.floor(value0/2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}else if (value1 == -1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,120);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_iroactualfreqpb" maxValue="208" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../ADCGLOB001/1.0.28/adcglob001_0.app#//@consumed.34"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../UART001/1.0.24/uart001_0.app#//@consumed.47"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../CANGLOBAL/1.0.12/canglobal_0.app#//@consumed.6"/>
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../SPI001/1.0.24/spi001_0.app#//@consumed.45"/>
    <localValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <toolTipHelpDescription>Actual Peripheral Bus Freq</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="Actual CPU Frequency" description="CPU Clock" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var tempResvalue = SCM.getIntValue(tempRes);&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,tempResvalue);&#xD;&#xA;//&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;sys/sysclkcr/syssel&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res2 = SCM.getResource(&quot;pll/pllcon1/ndiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ndiv = SCM.getIntValue(Res2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res0 = SCM.getResource(&quot;cpu/cpuclkcr/cpudiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(Res0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res_pdiv = SCM.getResource(&quot;pll/pllcon1/pdiv&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var pdiv = SCM.getIntValue(Res_pdiv);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1_k2div = SCM.getResource(&quot;pll/pllcon1/k2div&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var kdiv = SCM.getIntValue(Res1_k2div);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_DesFreqTemp&quot;);&#xD;&#xA;                    var value3 = SCM.getIntValue(tempRes);&#xD;&#xA;                    var Res3 = SCM.getResource(&quot;pll/pllcon2/pinsel&quot;); &#xD;&#xA;                    var value2 = SCM.getValue(Res3);&#xD;&#xA;                    var Res_1 = SCM.getResource(&quot;clk001_tempdigipfreq&quot;); &#xD;&#xA;                    var value_1 = SCM.getValue(Res_1);&#xD;&#xA;                    var dummyres = SCM.getResource(&quot;clk001_clksrcslctdummy&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var dummyval = SCM.getIntValue(dummyres);&#xD;&#xA;                    var Res_2 = SCM.getResource(&quot;clk001_tempextoscfreq&quot;); &#xD;&#xA;                    var value_2 = SCM.getValue(Res_2);&#xD;&#xA;                    var Res_3 = SCM.getResource(&quot;clk001_irwbkupactualfreq&quot;); &#xD;&#xA;                    var value_3 = SCM.getValue(Res_3);&#xD;&#xA;                    var tempactfr = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var actfr = SCM.getIntValue(tempactfr);&#xD;&#xA;                    var opmode = SCM.getResource(&quot;pll/pllcon0/vcobyp&quot;);&#xD;&#xA;                    var prscale = SCM.getIntValue(opmode);&#xD;&#xA;                    var k1res = SCM.getResource(&quot;pll/pllcon1/k1div&quot;);&#xD;&#xA;                    var k1 = SCM.getIntValue(k1res); &#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var Res1 = SCM.getResource(&quot;cpu/cpuclkcr/cpudiv&quot;);&#xD;&#xA;SCM.setIntValue(currentResource,80);          &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = SCM.getIntValue(Res1); &#xD;&#xA;//                    var tempRes = SCM.getResource(&quot;clk001_iroActualFreqCPUdummy&quot;);&#xD;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(tempRes);&#xD;&#xA;          &#x9;&#x9;&#x9;var tempRes = SCM.getResource(&quot;clk001_iroActualFreqSystem&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value0 = SCM.getIntValue(tempRes);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (value1 == 1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value0 = Math.floor(value0/2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if (value1 == -1) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var XMC42xx=SCM.getSoftwareId().substring(0,2).compareTo(&quot;42&quot;);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(XMC42xx==0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,80);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,120);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_iroactualfreqcpu" maxValue="208" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <localValue xsi:type="ResourceModel:StringValue" value="78"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <toolTipHelpDescription>Actual CPU Frequency</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="CPU Clock Divide(x/2)" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ccu/clkset_ccucen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;ccu/clkset_ccucen&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res);&#xD;&#xA;          }            &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwcpuclkdivider" multipleSelections="true">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>CPU Clock Divide(x/2)</toolTipHelpDescription>
    <item name="Divide by 2" evalFunction="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function ForwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;cpu/cpuclkcr/cpudiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(currentResource);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(Res,value);&#xD;&#xA;              // Bonding between dependencies&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var CPURes = SCM.getResource(&quot;clk001_iroActualFreqCPU&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var CPUResvalue = SCM.getIntValue(CPURes);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;function BackwardMapping()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var Res = SCM.getResource(&quot;cpu/cpuclkcr/cpudiv&quot;); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var value = SCM.getIntValue(Res); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (value == -1) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SCM.setIntValue(currentResource,value);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwcpuclkdivider/0" downWardmappedList="//@consumed.40" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Some limitations apply on clock ratio combinations between fCCU, fCPU and fPERIPH.
All other clock dividers settings must be prohibited by software applications
 in order to avoid invalid clock ratios leading to system malfunctions.

Valid values of clock divide registers for fCCU , fCPU and fPERIPH clocks
 CCUCLKCR.CCUDIV   CPUCLKCR.CPUDIV   PBCLKCR.PBDIV
 0 (120 MHz)            0 (120 MHz)            0 (120 MHz)
 0 (120 MHz)            0 (120 MHz)            1 (60 MHz)
 0 (120 MHz)            1 (60 MHz)             0 (60 MHz)
 1 (60 MHz)             0 (120 MHz)            1 (60 MHz) 
 1 (60 MHz)             1 (60 MHz)              0 (60 MHz)</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Enable Hibernate Domain" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res1 = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              var Res = SCM.getResource(&quot;hibernate/pwrset/hib&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              SCM.setIntValue(Res,value);&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;hibernate/pwrset/hib&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,value);               &#xD;&#xA;              }&#xD;&#xA;            }           &#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwenablehibernate" downWardmappedList="//@consumed.57" multipleSelections="true">
    <upWardMappingList xsi:type="ResourceModel:ProxyResource" href="../../RTC001/1.0.32/rtc001_0.app#//@consumed.31"/>
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>Checking this option,enables the hibernate domain</toolTipHelpDescription>
    <item name="Enable Hibernate Domain" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res1 = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;              var Res = SCM.getResource(&quot;hibernate/pwrset/hib&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              SCM.setIntValue(Res,value);&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;hibernate/pwrset/hib&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,value);               &#xD;&#xA;              }&#xD;&#xA;            }           &#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwenablehibernate/0" downWardmappedList="//@consumed.57" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Enables hibernate domain</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Enable RTC Clock" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res1 = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;            }           &#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwenablertc" multipleSelections="true">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>Checking this option,enables the RTC Clock</toolTipHelpDescription>
    <item name="Enable RTC Clock" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res1 = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;              var value1 = SCM.getIntValue(Res1);&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;            }           &#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwenablertc/0" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:StringValue" value="0"/>
      <toolTipHelpDescription>Enables RTC Clock</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="RTC Clock Source Selection" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwrtcclksource">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>RTC Clock source selection</toolTipHelpDescription>
    <item name="Ultra Low Power Oscillator(32KHz external crystal)" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;rtcclksel/hdcr_rcs&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,1);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,0);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;rtcclksel/hdcr_rcs&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 1 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } &#xD;&#xA;                else  &#xD;&#xA;                {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwrtcclksource/0" downWardmappedList="//@consumed.58" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>External Osc selected as RTC clock source</toolTipHelpDescription>
    </item>
    <item name="Internal Slow Clock (32KHz)" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res1 = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;                var value1 = SCM.getIntValue(Res1);&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;rtcclksel/hdcr_rcs&quot;);&#xD;&#xA;                var Res1 = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,0);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,0);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;rtcclksel/hdcr_rcs&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value == 0 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                }&#xD;&#xA;                else if (value == -1 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } &#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwrtcclksource/1" downWardmappedList="//@consumed.58" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Internal slow clock selected as RTC clock source</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Standby Clock Source Selection" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwstdbyclksource">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>Standby Clock source selection</toolTipHelpDescription>
    <item name="Ultra Low Power Oscillator(32KHz external crystal)" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;rtcclksel/hcu/hdcr/stdbysel&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,1);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,0);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;rtcclksel/hcu/hdcr/stdbysel&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value === 1 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } &#xD;&#xA;                else  &#xD;&#xA;                {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwstdbyclksource/0" downWardmappedList="//@consumed.59" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>External Osc selected as Standby clock source</toolTipHelpDescription>
    </item>
    <item name="Internal Slow Clock (32KHz)" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res1 = SCM.getResource(&quot;clk001_bkupclksrcconfdummy&quot;); &#xD;&#xA;                var value1 = SCM.getIntValue(Res1);&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;rtcclksel/hcu/hdcr/stdbysel&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,0);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,0);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;rtcclksel/hcu/hdcr/stdbysel&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value == 0 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                }&#xD;&#xA;                else if (value == -1 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } &#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwstdbyclksource/1" downWardmappedList="//@consumed.59" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Internal slow clock selected as Standby clock source</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Enable Clock External Feature" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwenableextclk" multipleSelections="true">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>Checking this option,reserves a pin to moniter the Clock for external observation</toolTipHelpDescription>
    <item name="Enable Clock External Feature" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;clk001_tempextclk&quot;); &#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              SCM.setIntValue(Res,value);&#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;clk001_tempextclk&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,value);               &#xD;&#xA;              }&#xD;&#xA;            }           &#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwenableextclk/0" downWardmappedList="//@consumed.11" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Checking this option,reserves a pin to moniter the Clock for external observation</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="Clock Source For External Observation" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwextclksrc">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <toolTipHelpDescription>Clock sources can be selected  to be observed externally.</toolTipHelpDescription>
    <item name="System Clock" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;rgextclk/extclkcr/ecksel&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,0);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,1);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;rgextclk/extclkcr/ecksel&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value == 1 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                } &#xD;&#xA;                else if (value == -1 ){&#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwextclksrc/0" downWardmappedList="//@consumed.55" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>System Clock selected for observing externally</toolTipHelpDescription>
    </item>
    <item name="USB PLL Clock" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;rgextclk/extclkcr/ecksel&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,2);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,0);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;rgextclk/extclkcr/ecksel&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                var IsFuncEqualTo4 = SCM.getSoftwareId().substring(SCM.getSoftwareId().lastIndexOf(&quot;.&quot;)-1, SCM.getSoftwareId().lastIndexOf(&quot;.&quot;)).compareTo(&quot;4&quot;);&#xD;&#xA;                var IsFuncEqualTo6 = SCM.getSoftwareId().substring(SCM.getSoftwareId().lastIndexOf(&quot;.&quot;)-1, SCM.getSoftwareId().lastIndexOf(&quot;.&quot;)).compareTo(&quot;6&quot;);&#xD;&#xA;                var IsFuncEqualTo8 = SCM.getSoftwareId().substring(SCM.getSoftwareId().lastIndexOf(&quot;.&quot;)-1, SCM.getSoftwareId().lastIndexOf(&quot;.&quot;)).compareTo(&quot;8&quot;);&#xD;&#xA;  &#x9;&#x9;&#x9;        if((IsFuncEqualTo4==0) || (IsFuncEqualTo6==0) || (IsFuncEqualTo8==0)){&#xD;&#xA;                  var reserved = SCM.getReserverd();&#xD;&#xA;        &#x9;        SCM.setValue(currentResource,reserved);&#xD;&#xA;&#x9;&#x9;&#x9;          }&#xD;&#xA;                else if (value == 2 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } &#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwextclksrc/2" downWardmappedList="//@consumed.55" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>USB Clock selected for external observation though pin</toolTipHelpDescription>
    </item>
    <item name="PLL Clock" evalFunction="&#xD;&#xA;              function ForwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var value = SCM.getIntValue(currentResource);&#xD;&#xA;                var Res = SCM.getResource(&quot;rgextclk/extclkcr/ecksel&quot;);&#xD;&#xA;                if (value == 1 ) {&#xD;&#xA;                  SCM.setIntValue(Res,3);       &#xD;&#xA;                } else if (value === 0) {&#xD;&#xA;                  SCM.setIntValue(Res,0);&#xD;&#xA;                }             &#xD;&#xA;              }&#xD;&#xA;              function BackwardMapping()&#xD;&#xA;              {&#xD;&#xA;                var Res = SCM.getResource(&quot;rgextclk/extclkcr/ecksel&quot;); &#xD;&#xA;                var value = SCM.getIntValue(Res); &#xD;&#xA;                if (value == 3 ) { &#xD;&#xA;                  SCM.setIntValue(currentResource,1);&#xD;&#xA;                } &#xD;&#xA;                else {&#xD;&#xA;                  SCM.setIntValue(currentResource,0);&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwextclksrc/3" downWardmappedList="//@consumed.55" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>PLL Clock selected for external observation though pin.
Note that the PLL Clock observed is divided by PLL Clock Divider value</toolTipHelpDescription>
    </item>
  </provided>
  <provided xsi:type="ResourceModel:IntegerParameter" name="PLL Clock Divide Value" description="PLL clock is divided by the value entered in the UI" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var value = SCM.getIntValue(currentResource);&#xD;&#xA;            value = value - 1;&#xD;&#xA;            var Res = SCM.getResource(&quot;rgextclk/extclkcr/eckdiv&quot;);&#xD;&#xA;            SCM.setIntValue(Res,value);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;rgextclk/extclkcr/eckdiv&quot;); &#xD;&#xA;            var value = SCM.getIntValue(Res); &#xD;&#xA;            value = value + 1;&#xD;&#xA;            SCM.setIntValue(currentResource,value);&#xD;&#xA;          }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwextclkplldiv" downWardmappedList="//@consumed.56" maxValue="512" minValue="1">
    <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <localValue xsi:type="ResourceModel:StringValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <toolTipHelpDescription>PLL Clock Divide Value</toolTipHelpDescription>
  </provided>
  <provided xsi:type="ResourceModel:EnumerationParameter" name="External Clock Pin Driver Mode" evalFunction="&#xD;&#xA;          function ForwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;clk_extpin/pdr_pd&quot;); &#xD;&#xA;            var value = SCM.getIntValue(currentResource);  &#xD;&#xA;            SCM.setIntValue(Res,value);&#xD;&#xA;          }&#xD;&#xA;          function BackwardMapping()&#xD;&#xA;          {&#xD;&#xA;            var Res = SCM.getResource(&quot;clk_extpin/pdr_pd&quot;); &#xD;&#xA;            var value = SCM.getIntValue(Res); &#xD;&#xA;            if (value == -1) {&#xD;&#xA;              SCM.setIntValue(currentResource,0);&#xD;&#xA;            } else {&#xD;&#xA;              SCM.setIntValue(currentResource,value);               &#xD;&#xA;            }   &#xD;&#xA;          }&#xD;&#xA;        " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwextclkpaddrivermode" downWardmappedList="//@consumed.60">
    <localValue xsi:type="ResourceModel:StringValue" value="-1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <toolTipHelpDescription></toolTipHelpDescription>
    <item name="Reset value" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;clk_extpin/pdr_pd&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);     &#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;clk_extpin/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwextclkpaddrivermode/0" downWardmappedList="//@consumed.60" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <localValue xsi:type="ResourceModel:StringValue" value="1"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Reset value selected</toolTipHelpDescription>
    </item>
    <item name="Strong driver" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;clk_extpin/pdr_pd&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,0);       //0x00&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;clk_extpin/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res);&#xD;&#xA;              if (value === 0 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else if (value == -1) {&#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwextclkpaddrivermode/1" downWardmappedList="//@consumed.60" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
      <toolTipHelpDescription>Strong driver is selected</toolTipHelpDescription>
    </item>
    <item name="Medium driver" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;clk_extpin/pdr_pd&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,4);       //0x04&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;clk_extpin/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == 4 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwextclkpaddrivermode/2" downWardmappedList="//@consumed.60" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Medium driver is selected</toolTipHelpDescription>
    </item>
    <item name="Weak driver" evalFunction="&#xD;&#xA;            function ForwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var value = SCM.getIntValue(currentResource);&#xD;&#xA;              var Res = SCM.getResource(&quot;clk_extpin/pdr_pd&quot;);&#xD;&#xA;              if (value == 1 ) {&#xD;&#xA;                SCM.setIntValue(Res,7);       //0x07&#xD;&#xA;              } else if (value === 0) {&#xD;&#xA;                SCM.setIntValue(Res,0);&#xD;&#xA;              }             &#xD;&#xA;            }&#xD;&#xA;            function BackwardMapping()&#xD;&#xA;            {&#xD;&#xA;              var Res = SCM.getResource(&quot;clk_extpin/pdr_pd&quot;); &#xD;&#xA;              var value = SCM.getIntValue(Res); &#xD;&#xA;              if (value == 7 ) { &#xD;&#xA;                SCM.setIntValue(currentResource,1);&#xD;&#xA;              } else {&#xD;&#xA;                SCM.setIntValue(currentResource,0);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;            " URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_erwextclkpaddrivermode/3" downWardmappedList="//@consumed.60" maxValue="1" minValue="0">
      <defaultValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <localValue xsi:type="ResourceModel:StringValue" value="0"/>
      <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
      <toolTipHelpDescription>Weak driver is selected</toolTipHelpDescription>
    </item>
  </provided>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_tempdigipfreq" upWardMappingList="//@provided.11 //@provided.12 //@provided.13 //@provided.14 //@provided.18 //@provided.21 //@provided.27 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="c"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="c"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_tempusbpllfreq" upWardMappingList="//@provided.27" isSystemDefined="true">
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_clksrcslctdummy" upWardMappingList="//@provided.6/@item.0 //@provided.6/@item.1 //@provided.6/@item.2 //@provided.21 //@provided.27 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.41/@item.0 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_clkdummy" isSystemDefined="true">
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_bkupclksrcconfdummy" upWardMappingList="//@provided.8/@item.0 //@provided.8/@item.1 //@provided.8/@item.2 //@provided.45 //@provided.45/@item.0 //@provided.46 //@provided.46/@item.0 //@provided.47/@item.1 //@provided.48/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_bkupactualfreqdummy" upWardMappingList="//@provided.9" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="18"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="18"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_wdtactualfreqdummy" upWardMappingList="//@provided.37" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="24"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="24"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_tempextoscfreq" upWardMappingList="//@provided.11 //@provided.12 //@provided.13 //@provided.14 //@provided.17 //@provided.21 //@provided.27 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="c"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="c"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_tempintoscfreq" upWardMappingList="//@provided.16" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="18"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="18"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_desfreqtemp" upWardMappingList="//@provided.6/@item.0 //@provided.17 //@provided.18 //@provided.19/@item.0 //@provided.21 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_desfreqtempenum" upWardMappingList="//@provided.19 //@provided.19/@item.0 //@provided.19/@item.1 //@provided.19/@item.2 //@provided.19/@item.3 //@provided.19/@item.4 //@provided.19/@item.5 //@provided.20" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_tempextclk" upWardMappingList="//@provided.49/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_actualsysfreqdummy" isSystemDefined="true">
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/pll">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.5"/>
    <requiredResource uriString="peripheral/scu/0/clkctrl/0/pll" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_iroactualfreqcpudummy" upWardMappingList="//@provided.20" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="78"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk001_syncdummy" upWardMappingList="//@provided.20" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <requiredResource uriString="" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/sys">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.14"/>
    <requiredResource uriString="peripheral/scu/0/clkctrl/0/sys" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/cpu">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.15"/>
    <requiredResource uriString="peripheral/scu/0/clkctrl/0/cpu" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/perbridge">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.16"/>
    <requiredResource uriString="peripheral/scu/0/clkctrl/0/perbridge" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = Solver.getSoftwareId().substring(0,2).compareTo(&quot;44&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value2 = Solver.getSoftwareId().substring(0,2).compareTo(&quot;42&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if((value1  == 0 ) || (value2 == 0 )) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  return false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/ebu">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.18"/>
    <requiredResource uriString="peripheral/scu/0/clkctrl/0/ebu" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/ccu">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.20"/>
    <requiredResource uriString="peripheral/scu/0/clkctrl/0/ccu" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/wdt">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.23"/>
    <requiredResource uriString="peripheral/scu/0/clkctrl/0/wdt" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;        var IsFuncEqualTo4 = Solver.getSoftwareId().substring(Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)-1, Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)).compareTo(&quot;4&quot;);&#xD;&#xA;        var IsFuncEqualTo6 = Solver.getSoftwareId().substring(Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)-1, Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)).compareTo(&quot;6&quot;);&#xD;&#xA;        var IsFuncEqualTo8 = Solver.getSoftwareId().substring(Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)-1, Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)).compareTo(&quot;8&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if((IsFuncEqualTo4 == 0) || (IsFuncEqualTo6 == 0) || (IsFuncEqualTo8 == 0)){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  return false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/usb">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.25"/>
    <requiredResource uriString="peripheral/scu/0/clkctrl/0/usb" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value1 = Solver.getSoftwareId().substring(0,2).compareTo(&quot;44&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var value2 = Solver.getSoftwareId().substring(0,2).compareTo(&quot;42&quot;);&#xD;&#xA;        var IsFuncEqualTo4 = Solver.getSoftwareId().substring(Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)-1, Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)).compareTo(&quot;4&quot;);&#xD;&#xA;        var IsFuncEqualTo6 = Solver.getSoftwareId().substring(Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)-1, Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)).compareTo(&quot;6&quot;);&#xD;&#xA;        var IsFuncEqualTo8 = Solver.getSoftwareId().substring(Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)-1, Solver.getSoftwareId().lastIndexOf(&quot;.&quot;)).compareTo(&quot;8&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if((value1  == 0 ) || (value2 == 0 ) || (IsFuncEqualTo4 == 0) || (IsFuncEqualTo6 == 0) || (IsFuncEqualTo8 == 0)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  return false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}" URI="http://www.infineon.com/1.0.44/app/clk001/0/mmc">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.27"/>
    <requiredResource uriString="peripheral/scu/0/clkctrl/0/sdmmc" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/rgextclk">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.0"/>
    <requiredResource uriString="peripheral/scu/0/clkctrl/0/extclk" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/hibernate">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.2"/>
    <requiredResource uriString="peripheral/scu/0/pwrctrl/0/hibernate" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/rtcclksel">
    <downWardmappedList xsi:type="ResourceModel:ResourceGroup" href="../../SCU/SCU_0.dd#//@provided.3"/>
    <requiredResource uriString="peripheral/scu/0/rtcclksel" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" evalFunction="function resourceCondition() {&#xD;&#xA;              var Res = Solver.getResource(&quot;clk001_tempextclk&quot;);&#xD;&#xA;              var value = Solver.getIntValue(Res);&#xD;&#xA;              if (value == 1) {&#xD;&#xA;                return true; &#xD;&#xA;              } &#xD;&#xA;              return false;&#xD;&#xA;            }" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk_extpin">
    <requiredResource uriString="port/p/*/pad/*" uriType="LOCALTYPE"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/rgextclk/extclk" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../SCU/SCU_0.dd#//@provided.1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/pll/pllcon0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00030003"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../SCU/SCU_0.dd#//@provided.6"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00030003"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/pll/pllcon0/vcobyp" upWardMappingList="//@provided.7/@item.0 //@provided.7/@item.1 //@provided.14 //@provided.21 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.37 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.6/@bitFields.0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/pll/pllcon1/pdiv" upWardMappingList="//@provided.6/@item.0 //@provided.12 //@provided.17 //@provided.18 //@provided.21 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.7"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/pll/pllcon1/k2div" upWardMappingList="//@provided.6/@item.0 //@provided.13 //@provided.17 //@provided.18 //@provided.20 //@provided.21 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="4"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.8"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="4"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/pll/pllcon1/k1div" upWardMappingList="//@provided.7/@item.0 //@provided.14 //@provided.21 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.37 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.9"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/pll/pllcon1/ndiv" upWardMappingList="//@provided.6/@item.0 //@provided.11 //@provided.17 //@provided.18 //@provided.21 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="28"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.10"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="28"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/pll/pllcon1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../SCU/SCU_0.dd#//@provided.11"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00000000"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/pll/pllcon2/pinsel" upWardMappingList="//@provided.6/@item.0 //@provided.6/@item.1 //@provided.6/@item.2 //@provided.21 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.41/@item.0 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.12"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/pll/usbpllcon" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="00010003"/>
    <downWardmappedList xsi:type="ResourceModel:RegisterParameter" href="../../SCU/SCU_0.dd#//@provided.13"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="00010003"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/sys/sysclkcr/syssel" upWardMappingList="//@provided.5/@item.0 //@provided.5/@item.1 //@provided.21 //@provided.28 //@provided.30 //@provided.33 //@provided.35 //@provided.39/@item.0 //@provided.39/@item.1 //@provided.39/@item.2 //@provided.42 //@provided.43" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/perbridge/pbclkcr/pbdiv" upWardMappingList="//@provided.41/@item.0 //@provided.42" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/cpu/cpuclkcr/cpudiv" upWardMappingList="//@provided.42 //@provided.43 //@provided.44/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/ebu/ebuclkcr/ebudiv" upWardMappingList="//@provided.32 //@provided.33" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/ebu/clkset_ebucen" upWardMappingList="//@provided.31 //@provided.31/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.19"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/ccu/ccuclkcr/ccudiv" upWardMappingList="//@provided.35 //@provided.36/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/ccu/clkset_ccucen" upWardMappingList="//@provided.34 //@provided.34/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.21"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/ccu/fccu" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../SCU/SCU_0.dd#//@provided.22"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/wdt/clkset_wdtcen" upWardMappingList="//@provided.38 //@provided.38/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.24"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/wdt/wdtclkcr/wdtsel" upWardMappingList="//@provided.37 //@provided.39/@item.0 //@provided.39/@item.1 //@provided.39/@item.2" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/wdt/wdtclkcr/wdtdiv" upWardMappingList="//@provided.37 //@provided.40" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/usb/clkset_usbcen" upWardMappingList="//@provided.22 //@provided.22/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.26"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/usb/usbclkcr/usbsel" upWardMappingList="//@provided.23/@item.0 //@provided.23/@item.1 //@provided.28 //@provided.30" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/usb/usbclkcr/usbdiv" upWardMappingList="//@provided.26 //@provided.28 //@provided.30" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="3"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="3"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/usb/usbpllcon/pdiv" upWardMappingList="//@provided.25 //@provided.28" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="2"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="2"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/usb/usbpllcon/ndiv" upWardMappingList="//@provided.6/@item.0 //@provided.17 //@provided.18 //@provided.24 //@provided.28" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="40"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="40"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/sdmmc/clkset_mmccen" upWardMappingList="//@provided.29 //@provided.29/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/rgextclk/extclkcr/ecksel" upWardMappingList="//@provided.50/@item.0 //@provided.50/@item.1 //@provided.50/@item.2" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/rgextclk/extclkcr/eckdiv" upWardMappingList="//@provided.51" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/hibernate/pwrset/hib" upWardMappingList="//@provided.8/@item.0 //@provided.8/@item.1 //@provided.8/@item.2 //@provided.15/@item.0 //@provided.45 //@provided.45/@item.0" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="1"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="1"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/rtcclksel/hdcr_rcs" upWardMappingList="//@provided.47/@item.0 //@provided.47/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <downWardmappedList xsi:type="ResourceModel:BitField" href="../../SCU/SCU_0.dd#//@provided.4"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/rtcclksel/hcu/hdcr/stdbysel" upWardMappingList="//@provided.8/@item.0 //@provided.8/@item.1 //@provided.8/@item.2 //@provided.48/@item.0 //@provided.48/@item.1" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk_extpin/pdr_pd" upWardMappingList="//@provided.52 //@provided.52/@item.0 //@provided.52/@item.1 //@provided.52/@item.2 //@provided.52/@item.3" isSystemDefined="true">
    <localValue xsi:type="ResourceModel:IntegerValue" value="0"/>
    <globalValue xsi:type="ResourceModel:IntegerValue" value="0"/>
  </consumed>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/clk_extpin/pad" isSystemDefined="true"/>
  <consumed xsi:type="ResourceModel:ProxyResource" URI="http://www.infineon.com/1.0.44/app/clk001/0/perbridge/fpb" isSystemDefined="true">
    <downWardmappedList xsi:type="ResourceModel:SignalDeclaration" href="../../SCU/SCU_0.dd#//@provided.17"/>
  </consumed>
  <propertyConstants name="uri_clkctrl" value="peripheral/scu/0/clkctrl/0/">
    <propertyConstants name="uri_pwrctrl" value="peripheral/scu/0/pwrctrl/0/">
      <propertyConstants name="uri_scu" value="peripheral/scu/0/"/>
    </propertyConstants>
  </propertyConstants>
  <categoryDescription description="Peripheral Specific Apps" name="Peripheral Specific Apps">
    <subCategory description="CPU-System" name="CPU-System">
      <subCategory description="System control Unit (SCU)" name="System control Unit (SCU)"/>
    </subCategory>
  </categoryDescription>
  <manifestInfo version="1.0.42">
    <keywords>system clock</keywords>
    <keywords>pll</keywords>
    <keywords>CLK001</keywords>
    <keywords>Clock</keywords>
    <properties xsi:type="ResourceModel:AppProperties_1_0" initProvider="true" singleton="true" isIOApp="true"/>
  </manifestInfo>
  <datagenerate fileName="CLK001.h" fileType="HFILE" templateFileName="clk001.hdt" templateEngine="NONE" fileAction="COPY"/>
  <datagenerate fileName="CLK001_Const.h" fileType="HFILE" templateFileName="clk001_Const.hdt" templateEngine="NONE" fileAction="COPY"/>
  <datagenerate fileName="CLK001_Conf.h" fileType="HFILE" templateFileName="CLK001_Confh.jet"/>
  <datagenerate fileName="CLK001.c" templateFileName="CLK001.cdt" templateEngine="NONE" fileAction="COPY"/>
  <connections sourceSignal="app/clk001/0/clk001_extclk_vs" targetSignal="app/clk001/0/clk001_extclkpin_vs" constraintFunction="&#xD;&#xA;                  function resourceCondition(){&#xD;&#xA;                      var Res = Solver.getResource(&quot;clk001_tempextclk&quot;);&#xD;&#xA;                      var value = Solver.getIntValue(Res);&#xD;&#xA;                      if (value == 1 ) {&#xD;&#xA;                      return true;&#xD;&#xA;                      }&#xD;&#xA;                      return false;&#xD;&#xA;                  }&#xD;&#xA;                "/>
  <softwareIdList>45.0.1</softwareIdList>
  <softwareIdList>45.0.2</softwareIdList>
  <softwareIdList>45.0.3</softwareIdList>
  <softwareIdList>45.2.3</softwareIdList>
  <softwareIdList>45.4.2</softwareIdList>
  <softwareIdList>45.4.3</softwareIdList>
  <softwareIdList>44.0.3</softwareIdList>
  <softwareIdList>44.00.5</softwareIdList>
  <softwareIdList>44.02.3</softwareIdList>
  <softwareIdList>44.02.5</softwareIdList>
  <softwareIdList>42.00.5</softwareIdList>
  <softwareIdList>42.0.6</softwareIdList>
  <softwareIdList>42.04.5</softwareIdList>
  <softwareIdList>42.04.6</softwareIdList>
  <softwareIdList>45.0200.1</softwareIdList>
  <softwareIdList>45.0200.2</softwareIdList>
  <softwareIdList>45.0200.3</softwareIdList>
  <softwareIdList>45.0202.3</softwareIdList>
  <softwareIdList>45.0204.3</softwareIdList>
  <softwareIdList>45.0204.2</softwareIdList>
  <softwareIdList>42.0200.5</softwareIdList>
  <softwareIdList>42.0208.6</softwareIdList>
  <softwareIdList>42.0204.5</softwareIdList>
  <softwareIdList>42.0204.6</softwareIdList>
  <softwareIdList>42.0200.6</softwareIdList>
  <softwareIdList>44.0200.5</softwareIdList>
  <softwareIdList>44.0202.3</softwareIdList>
  <softwareIdList>44.0202.5</softwareIdList>
  <softwareIdList>44.0200.3</softwareIdList>
  <softwareIdList>45.0300.1</softwareIdList>
  <softwareIdList>45.0300.3</softwareIdList>
  <softwareIdList>45.0302.3</softwareIdList>
  <softwareIdList>45.0304.2</softwareIdList>
  <softwareIdList>45.0300.2</softwareIdList>
  <softwareIdList>45.0304.3</softwareIdList>
</ResourceModel:App>
